{"version":3,"file":"index.mjs","sources":["../define-property/lib/define_property.js","../define-property/lib/builtin.js","../define-property/lib/index.js","../define-property/lib/polyfill.js","../define-property/lib/has_define_property_support.js","../define-read-only-property/lib/main.js","../any/lib/main.js","../any-by/lib/main.js","../any-by-right/lib/main.js","../any-in-by/lib/main.js","../any-own-by/lib/main.js","../append/lib/main.js","../append/lib/append_array.js","../append/lib/append_typed_array.js","../append/lib/append_object.js","../argument-function/lib/main.js","../define-nonenumerable-read-only-property/lib/main.js","../async/any-by/lib/limit.js","../async/any-by/lib/factory.js","../async/any-by/lib/validate.js","../async/any-by/lib/main.js","../async/any-by/lib/index.js","../async/any-by-right/lib/limit.js","../async/any-by-right/lib/factory.js","../async/any-by-right/lib/validate.js","../async/any-by-right/lib/main.js","../index-of/lib/main.js","../async/any-by-right/lib/index.js","../async/bifurcate-by/lib/validate.js","../async/bifurcate-by/lib/limit.js","../async/bifurcate-by/lib/factory.js","../async/bifurcate-by/lib/main.js","../async/bifurcate-by/lib/index.js","../async/count-by/lib/limit.js","../async/count-by/lib/factory.js","../async/count-by/lib/validate.js","../async/count-by/lib/main.js","../async/count-by/lib/index.js","../async/every-by/lib/limit.js","../async/every-by/lib/factory.js","../async/every-by/lib/validate.js","../async/every-by/lib/main.js","../async/every-by/lib/index.js","../async/every-by-right/lib/limit.js","../async/every-by-right/lib/factory.js","../async/every-by-right/lib/validate.js","../async/every-by-right/lib/main.js","../async/every-by-right/lib/index.js","../async/for-each/lib/limit.js","../async/for-each/lib/factory.js","../async/for-each/lib/validate.js","../async/for-each/lib/main.js","../async/for-each/lib/index.js","../async/for-each-right/lib/limit.js","../async/for-each-right/lib/factory.js","../async/for-each-right/lib/validate.js","../async/for-each-right/lib/main.js","../async/for-each-right/lib/index.js","../async/group-by/lib/validate.js","../async/group-by/lib/limit.js","../async/group-by/lib/factory.js","../async/group-by/lib/main.js","../async/group-by/lib/index.js","../async/inmap/lib/limit.js","../async/inmap/lib/factory.js","../async/inmap/lib/validate.js","../async/inmap/lib/main.js","../async/inmap/lib/index.js","../async/inmap-right/lib/limit.js","../async/inmap-right/lib/factory.js","../async/inmap-right/lib/validate.js","../async/inmap-right/lib/main.js","../async/inmap-right/lib/index.js","../async/map-function/lib/limit.js","../async/map-function/lib/factory.js","../async/map-function/lib/validate.js","../async/map-function/lib/main.js","../keys/lib/builtin.js","../async/map-function/lib/index.js","../keys/lib/has_builtin.js","../keys/lib/builtin_wrapper.js","../noop/lib/main.js","../keys/lib/has_enumerable_prototype_bug.js","../keys/lib/has_non_enumerable_properties_bug.js","../type-of/lib/fixtures/re.js","../global/lib/self.js","../global/lib/window.js","../global/lib/global_this.js","../global/lib/browser.js","../global/lib/codegen.js","../type-of/lib/fixtures/nodelist.js","../type-of/lib/fixtures/typedarray.js","../native-class/lib/tostring.js","../native-class/lib/tostringtag.js","../native-class/lib/index.js","../native-class/lib/polyfill.js","../native-class/lib/main.js","../constructor-name/lib/main.js","../type-of/lib/index.js","../type-of/lib/check.js","../type-of/lib/polyfill.js","../type-of/lib/main.js","../keys/lib/is_constructor_prototype.js","../keys/lib/window.js","../keys/lib/has_automation_equality_bug.js","../keys/lib/has_window.js","../keys/lib/main.js","../keys/lib/has_arguments_bug.js","../keys/lib/polyfill.js","../keys/lib/is_constructor_prototype_wrapper.js","../async/map-keys/lib/limit.js","../async/map-keys/lib/factory.js","../async/map-keys/lib/validate.js","../async/map-keys/lib/main.js","../async/map-keys/lib/index.js","../async/map-values/lib/limit.js","../async/map-values/lib/factory.js","../async/map-values/lib/validate.js","../async/map-values/lib/main.js","../async/map-values/lib/index.js","../async/none-by/lib/limit.js","../async/none-by/lib/factory.js","../async/none-by/lib/validate.js","../async/none-by/lib/main.js","../async/none-by/lib/index.js","../async/none-by-right/lib/limit.js","../async/none-by-right/lib/factory.js","../async/none-by-right/lib/validate.js","../async/none-by-right/lib/main.js","../async/none-by-right/lib/index.js","../async/reduce/lib/limit.js","../async/reduce/lib/factory.js","../async/reduce/lib/validate.js","../async/reduce/lib/main.js","../async/reduce/lib/index.js","../async/reduce-right/lib/limit.js","../async/reduce-right/lib/factory.js","../async/reduce-right/lib/validate.js","../async/reduce-right/lib/main.js","../async/series-waterfall/lib/factory.js","../async/series-waterfall/lib/main.js","../async/reduce-right/lib/index.js","../async/series-waterfall/lib/index.js","../async/some-by/lib/limit.js","../async/some-by/lib/factory.js","../async/some-by/lib/validate.js","../async/some-by/lib/main.js","../async/some-by/lib/index.js","../async/some-by-right/lib/limit.js","../async/some-by-right/lib/factory.js","../async/some-by-right/lib/validate.js","../async/some-by-right/lib/main.js","../async/some-by-right/lib/index.js","../async/tabulate-by/lib/limit.js","../async/tabulate-by/lib/factory.js","../async/tabulate-by/lib/validate.js","../async/tabulate-by/lib/main.js","../async/tabulate-by/lib/index.js","../async/lib/index.js","../async/compose/lib/main.js","../async/do-until/lib/main.js","../async/do-while/lib/main.js","../async/function-sequence/lib/main.js","../async/if-else/lib/main.js","../async/if-then/lib/main.js","../async/try-catch/lib/main.js","../async/try-then/lib/main.js","../async/until/lib/main.js","../async/while/lib/main.js","../bifurcate/lib/validate.js","../bifurcate/lib/main.js","../bifurcate-by/lib/validate.js","../bifurcate-by/lib/main.js","../bifurcate-by/lib/return_values.js","../bifurcate-by/lib/return_indices.js","../bifurcate-by/lib/return_pairs.js","../bifurcate-in/lib/validate.js","../bifurcate-in/lib/main.js","../bifurcate-in/lib/return_values.js","../bifurcate-in/lib/return_keys.js","../bifurcate-in/lib/return_pairs.js","../bifurcate-own/lib/validate.js","../bifurcate-own/lib/main.js","../bifurcate-own/lib/return_values.js","../bifurcate-own/lib/return_keys.js","../bifurcate-own/lib/return_pairs.js","../capitalize-keys/lib/main.js","../common-keys/lib/main.js","../keys-in/lib/main.js","../common-keys-in/lib/main.js","../compose/lib/main.js","../constant-function/lib/main.js","../convert-path/lib/main.js","../regexp-from-string/lib/main.js","../property-names/lib/has_builtin.js","../property-names/lib/builtin.js","../property-names/lib/index.js","../property-names/lib/polyfill.js","../property-descriptor/lib/has_builtin.js","../property-descriptor/lib/builtin.js","../property-descriptor/lib/index.js","../get-prototype-of/lib/detect.js","../property-descriptor/lib/polyfill.js","../get-prototype-of/lib/native.js","../get-prototype-of/lib/polyfill.js","../get-prototype-of/lib/proto.js","../get-prototype-of/lib/main.js","../copy/lib/typed_arrays.js","../copy/lib/deep_copy.js","../copy/lib/main.js","../count-by/lib/main.js","../count-by/lib/validate.js","../curry/lib/main.js","../curry-right/lib/main.js","../decorate-after/lib/main.js","../decorate-after/lib/factory.js","../deep-get/lib/validate.js","../deep-get/lib/dget.js","../deep-get/lib/main.js","../deep-get/lib/defaults.js","../deep-get/lib/factory.js","../deep-pluck/lib/main.js","../deep-pluck/lib/defaults.js","../deep-pluck/lib/validate.js","../deep-set/lib/validate.js","../deep-set/lib/dset.js","../deep-set/lib/main.js","../deep-set/lib/defaults.js","../define-configurable-read-only-accessor/lib/main.js","../define-configurable-read-only-property/lib/main.js","../define-configurable-read-write-accessor/lib/main.js","../define-configurable-write-only-accessor/lib/main.js","../define-memoized-property/lib/main.js","../define-memoized-configurable-read-only-property/lib/main.js","../define-memoized-read-only-property/lib/main.js","../define-nonenumerable-property/lib/main.js","../define-nonenumerable-read-only-accessor/lib/main.js","../define-nonenumerable-read-write-accessor/lib/main.js","../define-nonenumerable-write-only-accessor/lib/main.js","../decorate-after/lib/index.js","../deep-get/lib/index.js","../deep-set/lib/index.js","../deep-set/lib/factory.js","../define-properties/lib/builtin.js","../define-properties/lib/index.js","../define-properties/lib/polyfill.js","../define-read-only-accessor/lib/main.js","../define-read-write-accessor/lib/main.js","../define-write-only-accessor/lib/main.js","../dirname/lib/main.js","../do-until/lib/main.js","../do-until-each/lib/main.js","../do-until-each-right/lib/main.js","../do-while/lib/main.js","../do-while-each/lib/main.js","../do-while-each-right/lib/main.js","../escape-regexp-string/lib/main.js","../dsv/base/parse/lib/defaults.js","../dsv/base/parse/lib/states/state2enum.js","../dsv/base/parse/lib/states/closed.js","../dsv/base/parse/lib/states/comment.js","../dsv/base/parse/lib/states/error.js","../dsv/base/parse/lib/states/max.js","../dsv/base/parse/lib/states/escape.js","../dsv/base/parse/lib/states/field.js","../dsv/base/parse/lib/states/init.js","../dsv/base/parse/lib/states/invalid_quote_end.js","../dsv/base/parse/lib/states/quote_end.js","../dsv/base/parse/lib/states/quoted_escape.js","../dsv/base/parse/lib/states/quoted_field.js","../dsv/base/parse/lib/states/skip.js","../dsv/base/parse/lib/states/skipped_comment.js","../dsv/base/parse/lib/states/skipped_escape.js","../dsv/base/parse/lib/states/skipped_field.js","../dsv/base/parse/lib/states/skipped_invalid_quote_end.js","../dsv/base/parse/lib/states/skipped_quote_end.js","../dsv/base/parse/lib/states/skipped_quoted_escape.js","../dsv/base/parse/lib/states/skipped_quoted_field.js","../dsv/base/parse/lib/states/index.js","../dsv/base/parse/lib/main.js","../dsv/base/lib/index.js","../dsv/lib/index.js","../entries/lib/main.js","../entries-in/lib/main.js","../property-symbols/lib/has_builtin.js","../property-symbols/lib/builtin.js","../property-symbols/lib/index.js","../property-symbols/lib/polyfill.js","../enumerable-properties/lib/main.js","../enumerable-properties-in/lib/main.js","../enumerable-property-symbols/lib/main.js","../enumerable-property-symbols-in/lib/main.js","../eval/lib/index.js","../every/lib/main.js","../every-by/lib/main.js","../every-by-right/lib/main.js","../extname/lib/main.js","../filter-arguments/lib/main.js","../find/lib/find.js","../flatten-array/lib/defaults.js","../flatten-array/lib/recurse.js","../flatten-array/lib/main.js","../flatten-array/lib/validate.js","../flatten-object/lib/defaults.js","../flatten-object/lib/validate.js","../flatten-object/lib/recurse.js","../flatten-object/lib/flatten.js","../flatten-object/lib/main.js","../for-each/lib/main.js","../for-each-right/lib/main.js","../for-in/lib/main.js","../for-own/lib/main.js","../from-entries/lib/main.js","../flatten-array/lib/index.js","../flatten-array/lib/factory.js","../flatten-array/lib/gen_fcn.js","../flatten-array/lib/wrap_flatten_copy.js","../flatten-array/lib/wrap_flatten.js","../flatten-object/lib/index.js","../flatten-object/lib/factory.js","../function-name/lib/main.js","../function-sequence/lib/main.js","../group/lib/validate.js","../group/lib/main.js","../group-by/lib/validate.js","../group-by/lib/main.js","../group-by/lib/return_values.js","../group-by/lib/return_indices.js","../group-by/lib/return_pairs.js","../group-in/lib/validate.js","../group-in/lib/main.js","../group-in/lib/return_values.js","../group-in/lib/return_keys.js","../group-in/lib/return_pairs.js","../group-own/lib/validate.js","../group-own/lib/main.js","../group-own/lib/return_values.js","../group-own/lib/return_keys.js","../group-own/lib/return_pairs.js","../identity-function/lib/main.js","../if-else/lib/main.js","../if-then/lib/main.js","../inherit/lib/validate.js","../inherit/lib/native.js","../inherit/lib/polyfill.js","../inherit/lib/detect.js","../inherit/lib/main.js","../inherited-enumerable-properties/lib/main.js","../inherited-enumerable-property-symbols/lib/main.js","../inherited-keys/lib/main.js","../inherited-nonenumerable-properties/lib/main.js","../inherited-nonenumerable-property-names/lib/main.js","../inherited-nonenumerable-property-symbols/lib/main.js","../inherited-properties/lib/main.js","../inherited-property-descriptor/lib/main.js","../property-descriptors/lib/has_builtin.js","../property-descriptors/lib/builtin.js","../property-descriptors/lib/index.js","../property-descriptors/lib/polyfill.js","../inherited-property-descriptors/lib/main.js","../inherited-property-names/lib/main.js","../inherited-property-symbols/lib/main.js","../inherited-writable-properties/lib/main.js","../inherited-writable-property-names/lib/main.js","../inherited-writable-property-symbols/lib/main.js","../inmap/lib/main.js","../inmap-right/lib/main.js","../key-by/lib/main.js","../key-by-right/lib/main.js","../lowercase-keys/lib/main.js","../map/lib/ndarray.js","../map/lib/array.js","../map/lib/main.js","../map-arguments/lib/main.js","../map-function/lib/main.js","../map-keys/lib/main.js","../map/lib/index.js","../map/lib/assign.js","../map-reduce/lib/ndarray.js","../map-reduce/lib/main.js","../map-reduce/lib/array.js","../map-reduce-right/lib/ndarray.js","../map-reduce-right/lib/main.js","../map-reduce-right/lib/array.js","../map-right/lib/ndarray.js","../map-right/lib/array.js","../map-right/lib/main.js","../map-values/lib/main.js","../map-right/lib/index.js","../map-right/lib/assign.js","../map2/lib/ndarray.js","../map2/lib/array.js","../map2/lib/main.js","../map2/lib/index.js","../map2/lib/assign.js","../map2-right/lib/ndarray.js","../map2-right/lib/array.js","../map2-right/lib/main.js","../map2d/lib/main.js","../map3d/lib/main.js","../map4d/lib/main.js","../map5d/lib/main.js","../mask-arguments/lib/main.js","../memoize/lib/main.js","../merge/lib/defaults.js","../merge/lib/deepmerge.js","../merge/lib/mergefcn.js","../map2-right/lib/index.js","../map2-right/lib/assign.js","../merge/lib/main.js","../move-property/lib/main.js","../nary-function/lib/main.js","../merge/lib/index.js","../merge/lib/factory.js","../merge/lib/validate.js","../next-tick/lib/main.js","../none/lib/main.js","../none-by/lib/main.js","../none-by-right/lib/main.js","../none-own-by/lib/main.js","../nonenumerable-properties/lib/main.js","../nonenumerable-properties-in/lib/main.js","../nonenumerable-property-names/lib/main.js","../nonenumerable-property-names-in/lib/main.js","../nonenumerable-property-symbols/lib/main.js","../nonenumerable-property-symbols-in/lib/main.js","../nonindex-keys/lib/main.js","../object-inverse/lib/main.js","../object-inverse-by/lib/main.js","../omit/lib/main.js","../omit-by/lib/main.js","../open-url/lib/browser.js","../papply/lib/main.js","../papply-right/lib/main.js","../parallel/lib/node/env.js","../parallel/lib/node/exec.js","../599a09e7a6fa80bd3a78bfe16f5cdc","../parallel/lib/node/options.js","../parallel/lib/main.js","../parallel/lib/defaults.js","../parallel/lib/validate.js","../parse-json/lib/main.js","../parse-ndjson/lib/main.js","../pick/lib/main.js","../pick-arguments/lib/main.js","../pick-by/lib/main.js","../pluck/lib/main.js","../pluck/lib/defaults.js","../pluck/lib/validate.js","../pop/lib/main.js","../pop/lib/pop_typed_array.js","../pop/lib/pop_object.js","../prepend/lib/main.js","../prepend/lib/prepend_array.js","../prepend/lib/prepend_typed_array.js","../prepend/lib/prepend_object.js","../properties/lib/main.js","../properties-in/lib/main.js","../property-descriptor-in/lib/main.js","../property-descriptors-in/lib/main.js","../property-names-in/lib/main.js","../property-symbols-in/lib/main.js","../push/lib/main.js","../push/lib/push_array.js","../push/lib/push_typed_array.js","../push/lib/push_object.js","../real-max/lib/main.js","../real-min/lib/main.js","../reduce/lib/ndarray.js","../reduce/lib/main.js","../reduce/lib/array.js","../reduce-right/lib/ndarray.js","../reduce-right/lib/main.js","../reduce-right/lib/array.js","../reduce2d/lib/main.js","../reject-arguments/lib/main.js","../reorder-arguments/lib/main.js","../reverse-arguments/lib/main.js","../safe-int-max/lib/main.js","../safe-int-min/lib/main.js","../shift/lib/main.js","../shift/lib/shift_typed_array.js","../shift/lib/shift_object.js","../size-of/lib/main.js","../some/lib/main.js","../some-by/lib/main.js","../some-by-right/lib/main.js","../some-own-by/lib/main.js","../tabulate/lib/main.js","../tabulate-by/lib/main.js","../tabulate-by/lib/validate.js","../try-catch/lib/main.js","../try-function/lib/main.js","../try-require/lib/main.js","../try-then/lib/main.js","../type-max/lib/main.js","../type-min/lib/main.js","../uncapitalize-keys/lib/main.js","../uncurry/lib/main.js","../uncurry-right/lib/main.js","../unshift/lib/main.js","../unshift/lib/unshift_array.js","../unshift/lib/unshift_typed_array.js","../unshift/lib/unshift_object.js","../until/lib/main.js","../until-each/lib/main.js","../until-each-right/lib/main.js","../unzip/lib/main.js","../uppercase-keys/lib/main.js","../values/lib/main.js","../values-in/lib/main.js","../while/lib/main.js","../while-each/lib/main.js","../while-each-right/lib/main.js","../writable-properties/lib/main.js","../writable-properties-in/lib/main.js","../writable-property-names/lib/main.js","../writable-property-names-in/lib/main.js","../writable-property-symbols/lib/main.js","../writable-property-symbols-in/lib/main.js","../zip/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection is truthy.\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} must provide a collection\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var arr = [ 0, 0, 0, 0, 1 ];\n*\n* var bool = any( arr );\n* // returns true\n*/\nfunction any( collection ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a collection. Value: `%s`.', collection ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( collection[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default any;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ 1, 2, 3, 4, -1 ];\n*\n* var bool = anyBy( arr, isNegative );\n* // returns true\n*/\nfunction anyBy( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn true;\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default anyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ -1, 1, 2, 3, 4 ];\n*\n* var bool = anyByRight( arr, isNegative );\n* // returns true\n*/\nfunction anyByRight( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn true;\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default anyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one own or inherited property of an object passes a test implemented by a predicate function.\n*\n* @param {Object} obj - input object\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one property passes a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var obj = {\n*     'a': 1,\n*     'b': -1,\n*     'c': 3\n* };\n*\n* var bool = anyInBy( obj, isNegative );\n* // returns true\n*/\nfunction anyInBy( obj, predicate, thisArg ) {\n\tvar key;\n\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\n\tfor ( key in obj ) {\n\t\tif ( predicate.call( thisArg, obj[key], key, obj ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default anyInBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether any 'own' property of a provided object satisfies a predicate function.\n*\n* @param {Object} obj - input object\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean returned indicating whether any own property of an object pass a test\n*\n* @example\n* import anyOwnBy from '@stdlib/utils/any-own-by';\n*\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var obj = { 'a': -1, 'b': 2, 'c': -3 };\n*\n* var bool = anyOwnBy( obj, isPositive );\n* // returns true\n*/\nfunction anyOwnBy( obj, predicate, thisArg ) {\n\tvar result;\n\tvar key;\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tresult = predicate.call( thisArg, obj[ key ], key, obj );\n\t\t\tif ( result ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default anyOwnBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport appendArray from './append_array.js';\nimport appendObject from './append_object.js';\nimport appendTypedArray from './append_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds elements from one collection to the end of another collection.\n*\n* @param {Collection} collection1 - collection\n* @param {Collection} collection2 - collection containing elements to add\n* @throws {TypeError} first argument must be either an array, typed array, or an array-like object\n* @throws {TypeError} second argument must be an array-like object\n* @returns {Collection} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( collection1, collection2 ) {\n\tif ( !isCollection( collection2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', collection2 ) );\n\t}\n\tif ( isArray( collection1 ) ) {\n\t\treturn appendArray( collection1, collection2 );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection1 ) ) {\n\t\treturn appendTypedArray( collection1, collection2 );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection1 !== null &&\n\t\ttypeof collection1 === 'object' &&\n\t\ttypeof collection1.length === 'number' &&\n\t\tisInteger( collection1.length ) &&\n\t\tcollection1.length >= 0\n\t) {\n\t\treturn appendObject( collection1, collection2 );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection1 ) );\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar i;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tarr.push( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is followed by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\ttotal = nbytes + ibytes + arr.byteOffset;\n\n\tif ( arr.buffer.byteLength < total ) {\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\tv = new arr.constructor( buf, 0, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i ] = arr[ i ];\n\t\t}\n\t} else {\n\t\tv = new arr.constructor( arr.buffer, arr.byteOffset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ len+i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {ArrayLike} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = append( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 1.0, '1': 2.0, '2': 3.0, '3': 4.0 }\n*/\nfunction append( obj, items ) {\n\tvar len;\n\tvar i;\n\tlen = obj.length;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tobj[ len+i ] = items[ i ];\n\t}\n\tobj.length = len + items.length;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function which always returns a specified argument.\n*\n* @param {NonNegativeInteger} idx - argument index\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {Function} argument function\n*\n* @example\n* var argn = wrap( 1 );\n*\n* var v = argn( 1.0, 2.0, 3.0 );\n* // returns 2.0\n*\n* v = argn( 'a', 'b', 'c' );\n* // returns 'b'\n*\n* v = argn( null );\n* // returns undefined\n*/\nfunction wrap( idx ) {\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\treturn argn;\n\n\t/**\n\t* Argument function.\n\t*\n\t* @private\n\t* @returns {*} argument\n\t*/\n\tfunction argn() {\n\t\treturn arguments[ idx ];\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'any-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `anyByAsync` function which invokes the predicate function for each collection element sequentially:\n* var anyByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* anyByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn anyByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction anyByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* anyByAsync( files, predicate, done );\n*/\nfunction anyByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default anyByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/any-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import anyByAsync from '@stdlib/utils/async/any-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* anyByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'any-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `anyByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var anyByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* anyByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn anyByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction anyByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* anyByRightAsync( files, predicate, done );\n*/\nfunction anyByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default anyByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/any-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import anyByRightAsync from '@stdlib/utils/async/any-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* anyByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport indexOf from './../../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10,\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'bifurcate-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the predicate function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {string} [options.returns] - output format\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = [];\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tout.push( [], [] );\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, v, cb );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [bool] - group indicator\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, bool ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, ( bool ) ? '0' : '1' );\n\n\t\t\t// Default is to return values...\n\t\t\tif ( opts.returns === 'indices' ) {\n\t\t\t\tif ( bool ) {\n\t\t\t\t\tout[ 0 ].push( j );\n\t\t\t\t} else {\n\t\t\t\t\tout[ 1 ].push( j );\n\t\t\t\t}\n\t\t\t} else if ( opts.returns === '*' ) {\n\t\t\t\tif ( bool ) {\n\t\t\t\t\tout[ 0 ].push( [ j, v ] );\n\t\t\t\t} else {\n\t\t\t\t\tout[ 1 ].push( [ j, v ] );\n\t\t\t\t}\n\t\t\t} else if ( bool ) {\n\t\t\t\tout[ 0 ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( v );\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function which splits values into two groups according to a predicate function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `bifurcateByAsync` function which invokes the predicate function for each collection element sequentially:\n* var bifurcateByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* bifurcateByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn bifurcateByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction bifurcateByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} results - bifurcation results\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, results ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, results );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* bifurcateByAsync( files, predicate, done );\n*/\nfunction bifurcateByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split values into two groups according to a predicate function.\n*\n* @module @stdlib/utils/async/bifurcate-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import bifurcateByAsync from '@stdlib/utils/async/bifurcate-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* bifurcateByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// VARIABLES //\n\nvar debug = logger( 'count-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\tout[ group ] += 1;\n\t\t\t} else {\n\t\t\t\tout[ group ] = 1;\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for grouping values according to an indicator function and returns group counts.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `countByAsync` function which invokes the indicator function for each collection element sequentially:\n* var countByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* countByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn countByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction countByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - counts\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and returns group counts.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* countByAsync( files, indicator, done );\n*/\nfunction countByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default countByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values according to an indicator function and return group counts.\n*\n* @module @stdlib/utils/async/count-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import countByAsync from '@stdlib/utils/async/count-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* countByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'every-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( !result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `everyByAsync` function which invokes the predicate function for each collection element sequentially:\n* var everyByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* everyByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn everyByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction everyByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* everyByAsync( files, predicate, done );\n*/\nfunction everyByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default everyByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/every-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import everyByAsync from '@stdlib/utils/async/every-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* everyByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'every-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions, and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( !result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `everyByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var everyByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* everyByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn everyByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction everyByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* everyByRightAsync( files, predicate, done );\n*/\nfunction everyByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default everyByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/every-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import everyByRightAsync from '@stdlib/utils/async/every-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* everyByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'for-each-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, collection, clbk );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `forEachAsync` function which invokes `read` for each collection element sequentially:\n* var forEachAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* // Run `read` for each element in `files`:\n* forEachAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn forEachAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction forEachAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* forEachAsync( files, read, done );\n*/\nfunction forEachAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default forEachAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection.\n*\n* @module @stdlib/utils/async/for-each\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import forEachAsync from '@stdlib/utils/async/for-each';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* forEachAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'for-each-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, collection, clbk );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `forEachRightAsync` function which invokes `read` for each collection element sequentially:\n* var forEachRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* // Run `read` for each element in `files`:\n* forEachRightAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn forEachRightAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction forEachRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* forEachRightAsync( files, read, done );\n*/\nfunction forEachRightAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default forEachRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection, iterating from right to left.\n*\n* @module @stdlib/utils/async/for-each-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import forEachRightAsync from '@stdlib/utils/async/for-each-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* forEachRightAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport indexOf from './../../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10,\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// VARIABLES //\n\nvar debug = logger( 'group-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the indicator function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {string} [options.returns] - output format\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Default is to return values...\n\t\t\tif ( opts.returns === 'indices' ) {\n\t\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\t\tout[ group ].push( j );\n\t\t\t\t} else {\n\t\t\t\t\tout[ group ] = [ j ];\n\t\t\t\t}\n\t\t\t} else if ( opts.returns === '*' ) {\n\t\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\t\tout[ group ].push( [ j, v ] );\n\t\t\t\t} else {\n\t\t\t\t\tout[ group ] = [ [ j, v ] ];\n\t\t\t\t}\n\t\t\t} else if ( hasOwnProp( out, group ) ) {\n\t\t\t\tout[ group ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ group ] = [ v ];\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for grouping values according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `groupByAsync` function which invokes the indicator function for each collection element sequentially:\n* var groupByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* groupByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn groupByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction groupByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - group-by result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* groupByAsync( files, indicator, done );\n*/\nfunction groupByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default groupByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values according to an indicator function.\n*\n* @module @stdlib/utils/async/group-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import groupByAsync from '@stdlib/utils/async/group-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* groupByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'inmap-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions, and updates a collection in-place.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx += 1;\n\t\tj = idx;\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( collection[ j ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tcollection[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection and to update the collection in-place.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `inmapAsync` function which invokes `read` for each collection element sequentially:\n* var inmapAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* // Run `read` for each element in `files`:\n* inmapAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn inmapAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection and updates a collection in-place.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction inmapAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, collection );\n\t\t\t}\n\t\t\tdone( null, collection );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates a collection in-place.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* inmapAsync( files, read, done );\n*/\nfunction inmapAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default inmapAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection and update a collection in-place.\n*\n* @module @stdlib/utils/async/inmap\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import inmapAsync from '@stdlib/utils/async/inmap';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         return console.error( error.message );\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* inmapAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'inmap-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left, and updates a collection in-place.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx -= 1;\n\t\tj = idx;\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( collection[ j ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tcollection[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection and to update the collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `inmapRightAsync` function which invokes `read` for each collection element sequentially:\n* var inmapRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* // Run `read` for each element in `files`:\n* inmapRightAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn inmapRightAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection and updates a collection in-place, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction inmapRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, collection );\n\t\t\t}\n\t\t\tdone( null, collection );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates a collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* inmapRightAsync( files, read, done );\n*/\nfunction inmapRightAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default inmapRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection and update a collection in-place, iterating from right to left.\n*\n* @module @stdlib/utils/async/inmap-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import inmapRightAsync from '@stdlib/utils/async/inmap-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* inmapRightAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-function-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times, limiting the number of concurrently pending invocations, and returns an array of accumulated function return values.\n*\n* @private\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( n, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar out;\n\tvar lim;\n\tvar idx;\n\tvar m;\n\tvar i;\n\n\tdebug( 'Number of invocations: %d', n );\n\n\t// Note: we explicitly preallocate in order to facilitate inserting a function result into its associated output array index. This means we do not ensure \"fast\" elements for large output arrays.\n\tout = new Array( n );\n\tif ( n === 0 ) {\n\t\tdebug( 'Finished invoking a function.' );\n\t\treturn done( null, out );\n\t}\n\tif ( n < opts.limit ) {\n\t\tlim = n;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\n\tcount = 0;\n\tidx = -1;\n\tm = n - 1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all invocations...\n\t\tif ( idx < m ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to process the next function invocation.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx += 1;\n\t\tj = idx;\n\t\tdebug( 'Invocation number: %d', j );\n\t\tfcn.call( opts.thisArg, j, cb );\n\n\t\t/**\n\t\t* Callback invoked once a provided function completes.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further invocations:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tout[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next invocation.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Completed invocation %d of %d.', count, n );\n\t\tif ( idx < m ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === n ) {\n\t\t\tdebug( 'Finished invoking a function.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function `n` times and return an array of accumulated function return values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function again\n* @param {Function} fcn - function to invoke\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes a function `n` times and returns an array of accumulated function return values\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* var mapFunAsync = factory( opts, fcn );\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* mapFunAsync( 10, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapFunAsync;\n\n\t/**\n\t* Invokes a function `n` times and returns an array of accumulated function return values.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} n - number of function invocations\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a nonnegative integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapFunAsync( n, done ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Number of function invocations must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {Array} results - results\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, results ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, results );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before the next invocation\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times and returns an array of accumulated function return values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Function} fcn - function to invoke\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function again\n* @param {Function} done - callback to invoke upon invoking a function `n` times\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( JSON.stringify( out ) );\n*     // => [ 0, 1, 2, 3, 4 ]\n* }\n*\n* mapFunAsync( fcn, 5, done );\n*/\nfunction mapFunAsync( fcn, n, options, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( fcn )( n, options );\n\t}\n\tfactory( options, fcn )( n, done );\n}\n\n\n// EXPORTS //\n\nexport default mapFunAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function `n` times and return an array of accumulated function return values.\n*\n* @module @stdlib/utils/async/map-function\n*\n* @example\n* import mapFunAsync from '@stdlib/utils/async/map-function';\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( JSON.stringify( out ) );\n*     // => [ 0, 1, 2, 3, 4 ]\n* }\n*\n* mapFunAsync( fcn, 5, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from '@stdlib/assert/is-arguments';\nimport builtin from './builtin.js';\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport noop from './../../noop';\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\nimport getThis from './codegen.js';\nimport Self from './self.js';\nimport Win from './window.js';\nimport GlobalThis from './global_this.js';\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @private\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from './../../../global';\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Symbol from '@stdlib/symbol/ctor';\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils/native-class';\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert/has-tostringtag-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport toStringTag from './tostringtag.js';\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\nimport isBuffer from '@stdlib/assert/is-buffer';\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* import typeOf from '@stdlib/utils/type-of';\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js';\nimport nodeList from './fixtures/nodelist.js';\nimport typedarray from './fixtures/typedarray.js';\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nexport default isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nexport default w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport typeOf from './../../type-of';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport EXCLUDED_KEYS from './excluded_keys.json';\nimport win from './window.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasArgumentsBug from './has_arguments_bug.js';\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport wrapper from './builtin_wrapper.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './builtin.js';\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArguments from '@stdlib/assert/is-arguments';\nimport HAS_ENUM_PROTO_BUG from './has_enumerable_prototype_bug.js';\nimport HAS_NON_ENUM_PROPS_BUG from './has_non_enumerable_properties_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype_wrapper.js';\nimport NON_ENUMERABLE from './non_enumerable.json';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasAutomationEqualityBug from './has_automation_equality_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport HAS_WINDOW from './has_window.js';\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport objectKeys from './../../../keys';\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-values-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own property in a source object, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   We need to cache an object value to prevent the edge case where, during the invocation of the transform function, the value corresponding to a particular key is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Object} obj - source object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( obj, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar keys;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tdebug( 'Number of keys: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing an object.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all properties...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next property.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar value;\n\t\tvar key;\n\n\t\tidx += 1;\n\t\tkey = keys[ idx ];\n\n\t\tvalue = obj[ key ];\n\t\tdebug( '%s: %s', key, JSON.stringify( value ) );\n\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, key, cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, key, value, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, key, value, obj, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes transforming a property.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [key] - transformed key\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, key ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of properties:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Transform result => %s: %s', key, JSON.stringify( value ) );\n\t\t\tout[ key ] = value;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next property.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d properties.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing an object.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to map keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which maps keys from one object to a new object having the same values\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a reusable function:\n* var mapKeysAsync = factory( opts, read );\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, done );\n*/\nfunction factory( options, transform ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = transform;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapKeysAsync;\n\n\t/**\n\t* Maps keys from one object to a new object having the same values.\n\t*\n\t* @private\n\t* @param {Object} obj - source object\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapKeysAsync( obj, done ) {\n\t\tif ( typeof obj !== 'object' || obj === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( obj, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} [out] - output object\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, out ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Maps keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, opts, read, done );\n*/\nfunction mapKeysAsync( obj, options, transform, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( obj, transform );\n\t}\n\tfactory( options, transform )( obj, done );\n}\n\n\n// EXPORTS //\n\nexport default mapKeysAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map keys from one object to a new object having the same values.\n*\n* @module @stdlib/utils/async/map-keys\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import mapKeysAsync from '@stdlib/utils/async/map-keys';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, opts, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport objectKeys from './../../../keys';\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-values-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own property in a source object, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Object} obj - source object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( obj, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar keys;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tdebug( 'Number of keys: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing an object.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all properties...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next property.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar key;\n\t\tidx += 1;\n\t\tkey = keys[ idx ];\n\t\tdebug( '%s: %s', key, JSON.stringify( obj[ key ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], key, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], key, obj, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes transforming a property value.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [value] - transformed value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, value ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of properties:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Transform result => %s: %s', key, JSON.stringify( value ) );\n\t\t\tout[ key ] = value;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next property.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d properties.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing an object.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to map values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which maps values from one object to a new object having the same keys\n*\n* @example\n* var stat = require( 'fs' ).stat;\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a reusable function:\n* var mapValuesAsync = factory( opts, getStats );\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, done );\n*/\nfunction factory( options, transform ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = transform;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapValuesAsync;\n\n\t/**\n\t* Maps values from one object to a new object having the same keys.\n\t*\n\t* @private\n\t* @param {Object} obj - source object\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapValuesAsync( obj, done ) {\n\t\tif ( typeof obj !== 'object' || obj === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( obj, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} [out] - output object\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, out ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Maps values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* var stat = require( 'fs' ).stat;\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, opts, getStats, done );\n*/\nfunction mapValuesAsync( obj, options, transform, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( obj, transform );\n\t}\n\tfactory( options, transform )( obj, done );\n}\n\n\n// EXPORTS //\n\nexport default mapValuesAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map values from one object to a new object having the same keys.\n*\n* @module @stdlib/utils/async/map-values\n*\n* @example\n* var stat = require( 'fs' ).stat;\n* import mapValuesAsync from '@stdlib/utils/async/map-values';\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, opts, getStats, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'none-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection fail a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `noneByAsync` function which invokes the predicate function for each collection element sequentially:\n* var noneByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* noneByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn noneByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction noneByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* noneByAsync( files, predicate, done );\n*/\nfunction noneByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default noneByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection fail a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/none-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import noneByAsync from '@stdlib/utils/async/none-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* noneByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'none-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions, and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `noneByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var noneByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* noneByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn noneByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction noneByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* noneByRightAsync( files, predicate, done );\n*/\nfunction noneByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default noneByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/none-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import noneByRightAsync from '@stdlib/utils/async/none-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* noneByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'reduce-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {*} acc - initial value\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, acc, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, acc );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], cb );\n\t\t} else if ( fcn.length === 4 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, collection, cb ); // eslint-disable-line max-len\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - accumulation result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Accumulator: %s', JSON.stringify( result ) );\n\t\t\tacc = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to apply a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var opts = {\n*     'series': false\n* };\n*\n* // Create a `reduceAsync` function which invokes `read` for each collection element concurrently:\n* var reduceAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* // Run `read` for each element in `files`:\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series === void 0 && opts.limit === void 0 ) {\n\t\topts.series = true;\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn reduceAsync;\n\n\t/**\n\t* Applies a function against an accumulator and each element in a collection and return the accumulated result.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {*} initial - initial value\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction reduceAsync( collection, initial, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, initial, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [acc] - accumulated value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, acc ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {*} initial - initial value\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, read, done );\n*/\nfunction reduceAsync( collection, initial, options, fcn, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, initial, fcn );\n\t}\n\tfactory( options, fcn )( collection, initial, done );\n}\n\n\n// EXPORTS //\n\nexport default reduceAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* @module @stdlib/utils/async/reduce\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import reduceAsync from '@stdlib/utils/async/reduce';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'reduce-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {*} acc - initial value\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, acc, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, acc );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], cb );\n\t\t} else if ( fcn.length === 4 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, collection, cb ); // eslint-disable-line max-len\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - accumulation result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Accumulator: %s', JSON.stringify( result ) );\n\t\t\tacc = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var opts = {\n*     'series': false\n* };\n*\n* // Create a `reduceRightAsync` function which invokes `read` for each collection element concurrently:\n* var reduceRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* // Run `read` for each element in `files`:\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series === void 0 && opts.limit === void 0 ) {\n\t\topts.series = true;\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn reduceRightAsync;\n\n\t/**\n\t* Applies a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {*} initial - initial value\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction reduceRightAsync( collection, initial, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, initial, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [acc] - accumulated value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, acc ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {*} initial - initial value\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, read, done );\n*/\nfunction reduceRightAsync( collection, initial, options, fcn, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, initial, fcn );\n\t}\n\tfactory( options, fcn )( collection, initial, done );\n}\n\n\n// EXPORTS //\n\nexport default reduceRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunctionArray from '@stdlib/assert/is-function-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a reusable waterfall function.\n*\n* @param {FunctionArray} fcns - array of functions\n* @param {Callback} clbk - callback to invoke upon completion\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be an array of functions\n* @throws {TypeError} second argument must be a function\n* @returns {Function} waterfall function\n*\n* @example\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* var waterfall = factory( fcns, done );\n*\n* waterfall();\n* waterfall();\n* waterfall();\n*/\nfunction factory( fcns, clbk, thisArg ) {\n\tif ( !isFunctionArray( fcns ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of functions. Value: `%s`.', fcns ) );\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\treturn waterfall;\n\n\t/**\n\t* Executes functions in series, passing the results of one function as arguments to the next function.\n\t*\n\t* @private\n\t*/\n\tfunction waterfall() {\n\t\tvar idx = -1;\n\t\tnext(); // eslint-disable-line node/callback-return\n\n\t\t/**\n\t\t* Executes the next function in the series.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {...*} args - results to pass to next callback\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next() {\n\t\t\tvar args;\n\t\t\tvar len;\n\t\t\tvar i;\n\n\t\t\t// Check for an error...\n\t\t\tif ( arguments[ 0 ] ) {\n\t\t\t\treturn clbk( arguments[ 0 ] );\n\t\t\t}\n\t\t\t// Update the counter and check if we have run all functions...\n\t\t\tidx += 1;\n\t\t\tif ( idx >= fcns.length ) {\n\t\t\t\treturn clbk();\n\t\t\t}\n\t\t\t// Copy the remaining arguments...\n\t\t\tlen = arguments.length;\n\t\t\targs = new Array( len );\n\t\t\tfor ( i = 0; i < len-1; i++ ) {\n\t\t\t\targs[ i ] = arguments[ i+1 ];\n\t\t\t}\n\t\t\t// Add the callback:\n\t\t\targs[ i ] = next;\n\n\t\t\t// Apply the arguments to the next function in the waterfall:\n\t\t\tfcns[ idx ].apply( thisArg, args );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Executes functions in series, passing the results of one function as arguments to the next function.\n*\n* @param {FunctionArray} fcns - array of functions\n* @param {Callback} clbk - callback to invoke upon completion\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be an array of functions\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* waterfall( fcns, done );\n*/\nfunction waterfall( fcns, clbk, thisArg ) {\n\tfactory( fcns, clbk, thisArg )();\n}\n\n\n// EXPORTS //\n\nexport default waterfall;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* @module @stdlib/utils/async/reduce-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import reduceRightAsync from '@stdlib/utils/async/reduce-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Execute functions in series, passing the results of one function as arguments to the next function.\n*\n* @module @stdlib/utils/async/series-waterfall\n*\n* @example\n* import waterfall from '@stdlib/utils/async/series-waterfall';\n*\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* waterfall( fcns, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'some-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, n, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar cnt;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0; // processed element count\n\tidx = -1;\n\tcnt = 0; // success count\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tcnt += 1;\n\t\t\tif ( cnt === n ) {\n\t\t\t\tflg = true;\n\t\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\t\treturn done( null, true );\n\t\t\t}\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `someByAsync` function which invokes the predicate function for each collection element sequentially:\n* var someByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* someByAsync( files, 2, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn someByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {PositiveInteger} n - number of elements\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction someByAsync( collection, n, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isPositiveInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* someByAsync( files, 2, predicate, done );\n*/\nfunction someByAsync( collection, n, options, predicate, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, n, predicate );\n\t}\n\tfactory( options, predicate )( collection, n, done );\n}\n\n\n// EXPORTS //\n\nexport default someByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/some-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import someByAsync from '@stdlib/utils/async/some-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* someByAsync( files, 2, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'some-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, n, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar cnt;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0; // processed element count\n\tidx = len;\n\tcnt = 0; // success count\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tcnt += 1;\n\t\t\tif ( cnt === n ) {\n\t\t\t\tflg = true;\n\t\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\t\treturn done( null, true );\n\t\t\t}\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `someByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var someByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* someByRightAsync( files, 2, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn someByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {PositiveInteger} n - number of elements\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction someByRightAsync( collection, n, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isPositiveInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* someByRightAsync( files, 2, predicate, done );\n*/\nfunction someByRightAsync( collection, n, options, predicate, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, n, predicate );\n\t}\n\tfactory( options, predicate )( collection, n, done );\n}\n\n\n// EXPORTS //\n\nexport default someByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/some-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import someByRightAsync from '@stdlib/utils/async/some-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* someByRightAsync( files, 2, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport indexOf from './../../../index-of';\n\n\n// VARIABLES //\n\nvar debug = logger( 'tabulate-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = [];\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\ttmp = [];\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tvar i;\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Determine if we've seen the group/category before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\t\t\ti = indexOf( tmp, group );\n\t\t\tif ( i === -1 ) {\n\t\t\t\ttmp.push( group );\n\t\t\t\tout.push( [ group, 1, 0 ] );\n\t\t\t} else {\n\t\t\t\tout[ i ][ 1 ] += 1;\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\t// Compute percentages...\n\t\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t\t\t}\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for generating a frequency table according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* -   The output frequency table is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `tabulateByAsync` function which invokes the indicator function for each collection element sequentially:\n* var tabulateByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* tabulateByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn tabulateByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction tabulateByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - frequency table\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Generates a frequency table according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* -   The output frequency table is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* tabulateByAsync( files, indicator, done );\n*/\nfunction tabulateByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default tabulateByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a frequency table according to an indicator function.\n*\n* @module @stdlib/utils/async/tabulate-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import tabulateByAsync from '@stdlib/utils/async/tabulate-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* tabulateByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name anyByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/any-by}\n*/\nimport anyByAsync from './../../async/any-by';\nsetReadOnly( ns, 'anyByAsync', anyByAsync );\n\n/**\n* @name anyByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/any-by-right}\n*/\nimport anyByRightAsync from './../../async/any-by-right';\nsetReadOnly( ns, 'anyByRightAsync', anyByRightAsync );\n\n/**\n* @name bifurcateByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/bifurcate-by}\n*/\nimport bifurcateByAsync from './../../async/bifurcate-by';\nsetReadOnly( ns, 'bifurcateByAsync', bifurcateByAsync );\n\n/**\n* @name composeAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/compose}\n*/\nimport composeAsync from './../../async/compose';\nsetReadOnly( ns, 'composeAsync', composeAsync );\n\n/**\n* @name countByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/count-by}\n*/\nimport countByAsync from './../../async/count-by';\nsetReadOnly( ns, 'countByAsync', countByAsync );\n\n/**\n* @name doUntilAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/do-until}\n*/\nimport doUntilAsync from './../../async/do-until';\nsetReadOnly( ns, 'doUntilAsync', doUntilAsync );\n\n/**\n* @name doWhileAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/do-while}\n*/\nimport doWhileAsync from './../../async/do-while';\nsetReadOnly( ns, 'doWhileAsync', doWhileAsync );\n\n/**\n* @name everyByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/every-by}\n*/\nimport everyByAsync from './../../async/every-by';\nsetReadOnly( ns, 'everyByAsync', everyByAsync );\n\n/**\n* @name everyByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/every-by-right}\n*/\nimport everyByRightAsync from './../../async/every-by-right';\nsetReadOnly( ns, 'everyByRightAsync', everyByRightAsync );\n\n/**\n* @name forEachAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/for-each}\n*/\nimport forEachAsync from './../../async/for-each';\nsetReadOnly( ns, 'forEachAsync', forEachAsync );\n\n/**\n* @name forEachRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/for-each-right}\n*/\nimport forEachRightAsync from './../../async/for-each-right';\nsetReadOnly( ns, 'forEachRightAsync', forEachRightAsync );\n\n/**\n* @name functionSequenceAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/function-sequence}\n*/\nimport functionSequenceAsync from './../../async/function-sequence';\nsetReadOnly( ns, 'functionSequenceAsync', functionSequenceAsync );\n\n/**\n* @name groupByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/group-by}\n*/\nimport groupByAsync from './../../async/group-by';\nsetReadOnly( ns, 'groupByAsync', groupByAsync );\n\n/**\n* @name ifelseAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/if-else}\n*/\nimport ifelseAsync from './../../async/if-else';\nsetReadOnly( ns, 'ifelseAsync', ifelseAsync );\n\n/**\n* @name ifthenAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/if-then}\n*/\nimport ifthenAsync from './../../async/if-then';\nsetReadOnly( ns, 'ifthenAsync', ifthenAsync );\n\n/**\n* @name inmapAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/inmap}\n*/\nimport inmapAsync from './../../async/inmap';\nsetReadOnly( ns, 'inmapAsync', inmapAsync );\n\n/**\n* @name inmapRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/inmap-right}\n*/\nimport inmapRightAsync from './../../async/inmap-right';\nsetReadOnly( ns, 'inmapRightAsync', inmapRightAsync );\n\n/**\n* @name mapFunAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-function}\n*/\nimport mapFunAsync from './../../async/map-function';\nsetReadOnly( ns, 'mapFunAsync', mapFunAsync );\n\n/**\n* @name mapKeysAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-keys}\n*/\nimport mapKeysAsync from './../../async/map-keys';\nsetReadOnly( ns, 'mapKeysAsync', mapKeysAsync );\n\n/**\n* @name mapValuesAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-values}\n*/\nimport mapValuesAsync from './../../async/map-values';\nsetReadOnly( ns, 'mapValuesAsync', mapValuesAsync );\n\n/**\n* @name noneByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/none-by}\n*/\nimport noneByAsync from './../../async/none-by';\nsetReadOnly( ns, 'noneByAsync', noneByAsync );\n\n/**\n* @name noneByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/none-by-right}\n*/\nimport noneByRightAsync from './../../async/none-by-right';\nsetReadOnly( ns, 'noneByRightAsync', noneByRightAsync );\n\n/**\n* @name reduceAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/reduce}\n*/\nimport reduceAsync from './../../async/reduce';\nsetReadOnly( ns, 'reduceAsync', reduceAsync );\n\n/**\n* @name reduceRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/reduce-right}\n*/\nimport reduceRightAsync from './../../async/reduce-right';\nsetReadOnly( ns, 'reduceRightAsync', reduceRightAsync );\n\n/**\n* @name waterfall\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/series-waterfall}\n*/\nimport waterfall from './../../async/series-waterfall';\nsetReadOnly( ns, 'waterfall', waterfall );\n\n/**\n* @name someByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/some-by}\n*/\nimport someByAsync from './../../async/some-by';\nsetReadOnly( ns, 'someByAsync', someByAsync );\n\n/**\n* @name someByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/some-by-right}\n*/\nimport someByRightAsync from './../../async/some-by-right';\nsetReadOnly( ns, 'someByRightAsync', someByRightAsync );\n\n/**\n* @name tabulateByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/tabulate-by}\n*/\nimport tabulateByAsync from './../../async/tabulate-by';\nsetReadOnly( ns, 'tabulateByAsync', tabulateByAsync );\n\n/**\n* @name trycatchAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/try-catch}\n*/\nimport trycatchAsync from './../../async/try-catch';\nsetReadOnly( ns, 'trycatchAsync', trycatchAsync );\n\n/**\n* @name trythenAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/try-then}\n*/\nimport trythenAsync from './../../async/try-then';\nsetReadOnly( ns, 'trythenAsync', trythenAsync );\n\n/**\n* @name untilAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/until}\n*/\nimport untilAsync from './../../async/until';\nsetReadOnly( ns, 'untilAsync', untilAsync );\n\n/**\n* @name whileAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/while}\n*/\nimport whileAsync from './../../async/while';\nsetReadOnly( ns, 'whileAsync', whileAsync );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function composition.\n*\n* @param {...Function} f - functions to compose\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} composite function\n*\n* @example\n* function a( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, 2*x );\n*     }\n* }\n*\n* function b( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x+3 );\n*     }\n* }\n*\n* function c( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x/5 );\n*     }\n* }\n*\n* var f = composeAsync( c, b, a );\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n*     // => 3\n* }\n*\n* f( 6, done );\n*/\nfunction composeAsync() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to compose.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn composite;\n\n\t/**\n\t* Composite function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @param {Callback} done - callback to invoke after invoking all functions\n\t*/\n\tfunction composite() {\n\t\tvar done;\n\t\tvar args;\n\t\tvar i;\n\n\t\t// Cache the callback function:\n\t\tdone = arguments[ arguments.length-1 ];\n\n\t\t// Copy arguments which should be provided to the first invoked function...\n\t\targs = new Array( arguments.length-1 );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\t// Append the callback an invoked function should call upon completion:\n\t\targs.push( next );\n\n\t\t// Start invoking provided functions:\n\t\ti = nFuncs - 1;\n\t\tf[ i ].apply( null, args );\n\n\t\t/**\n\t\t* Callback invoked upon completion of a composed function.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {*} result - result to pass to next function\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\ti -= 1;\n\t\t\tif ( i < 0 ) {\n\t\t\t\treturn done( null, result );\n\t\t\t}\n\t\t\tf[ i ]( result, next );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default composeAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function predicate( i, clbk ) {\n*     clbk( null, i >= 5 );\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* doUntilAsync( fcn, predicate, done );\n*/\nfunction doUntilAsync( fcn, predicate, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tfcn.call( thisArg, idx, next );\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default doUntilAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function predicate( i, clbk ) {\n*     clbk( null, i < 5 );\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* doWhileAsync( fcn, predicate, done );\n*/\nfunction doWhileAsync( fcn, predicate, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tfcn.call( thisArg, idx, next );\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default doWhileAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function sequence.\n*\n* @param {...Function} f - functions to evaluate in sequential order\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} pipeline function\n*\n* @example\n* function a( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, 2*x );\n*     }\n* }\n*\n* function b( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x+3 );\n*     }\n* }\n*\n* function c( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x/5 );\n*     }\n* }\n*\n* var f = funseqAsync( a, b, c );\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n*     // => 3\n* }\n*\n* f( 6, done );\n*/\nfunction funseqAsync() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to execute sequentially.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @param {Callback} done - callback to invoke after invoking all functions\n\t*/\n\tfunction pipeline() {\n\t\tvar done;\n\t\tvar args;\n\t\tvar i;\n\n\t\t// Cache the callback function:\n\t\tdone = arguments[ arguments.length-1 ];\n\n\t\t// Copy arguments which should be provided to the first invoked function...\n\t\targs = new Array( arguments.length-1 );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\t// Append the callback an invoked function should call upon completion:\n\t\targs.push( next );\n\n\t\t// Start invoking provided functions:\n\t\ti = 0;\n\t\tf[ i ].apply( null, args );\n\n\t\t/**\n\t\t* Callback invoked upon completion of a provided function.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {*} result - result to pass to next function\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tif ( i === nFuncs ) {\n\t\t\t\treturn done( null, result );\n\t\t\t}\n\t\t\tf[ i ]( result, next );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default funseqAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a predicate function returns a truthy value, returns `x`; otherwise, returns `y`.\n*\n* @param {Function} predicate - predicate function\n* @param {*} x - value to return if a condition is truthy\n* @param {*} y - value to return if a condition is falsy\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function predicate( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, randu() > 0.5 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n* ifelseAsync( predicate, 1.0, -1.0, done );\n*/\nfunction ifelseAsync( predicate, x, y, done ) {\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tpredicate( clbk );\n\n\t/**\n\t* Callback invoked by a predicate function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - condition\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, bool ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( bool ) {\n\t\t\treturn done( null, x );\n\t\t}\n\t\tdone( null, y );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ifelseAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a predicate function returns a truthy value, invokes `x`; otherwise, invokes `y`.\n*\n* @param {Function} predicate - predicate function\n* @param {Function} x - function to invoke if a condition is truthy\n* @param {Function} y - function to invoke if a condition is falsy\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function predicate( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, randu() > 0.5 );\n*     }\n* }\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, 1.0 );\n*     }\n* }\n*\n* function y( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, -1.0 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n* ifthenAsync( predicate, x, y, done );\n*/\nfunction ifthenAsync( predicate, x, y, done ) {\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tpredicate( clbk1 );\n\n\t/**\n\t* Callback invoked by a predicate function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - condition\n\t* @returns {void}\n\t*/\n\tfunction clbk1( error, bool ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( bool ) {\n\t\t\treturn x( clbk2 );\n\t\t}\n\t\ty( clbk2 );\n\t}\n\n\t/**\n\t* Callback invoked by either `x` or `y`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - results\n\t* @returns {void}\n\t*/\n\tfunction clbk2( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ifthenAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not return an error, invokes a callback with the function result; otherwise, invokes a callback with a value `y`.\n*\n* @param {Function} x - function to invoke\n* @param {*} y - value to return if `x` returns an error\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         if ( randu() > 0.5 ) {\n*             return clbk( null, 1.0 );\n*         }\n*         clbk( new Error( 'beep' ) );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         console.log( error.message );\n*     }\n*     console.log( result );\n* }\n*\n* trycatchAsync( x, -1.0, done );\n*/\nfunction trycatchAsync( x, y, done ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tx( clbk );\n\n\t/**\n\t* Callback invoked by `x`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {*} result - result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error, y );\n\t\t}\n\t\tdone( null, result );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trycatchAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not return an error, invokes a callback with the function result; otherwise, invokes a second function `y`.\n*\n* @param {Function} x - function to invoke\n* @param {Function} y - function to invoke if `x` returns an error\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         if ( randu() > 0.5 ) {\n*             return clbk( null, 1.0 );\n*         }\n*         clbk( new Error( 'beep' ) );\n*     }\n* }\n*\n* function y( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, -1.0 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* trythenAsync( x, y, done );\n*/\nfunction trythenAsync( x, y, done ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tx( clbk1 );\n\n\t/**\n\t* Callback invoked by `x`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - function results\n\t* @returns {void}\n\t*/\n\tfunction clbk1( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\tif ( y.length === 1 ) {\n\t\t\t\treturn y( clbk2 );\n\t\t\t}\n\t\t\treturn y( error, clbk2 );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\treturn done.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked by `y`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - function results\n\t* @returns {void}\n\t*/\n\tfunction clbk2( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\treturn done.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trythenAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function predicate( i, clbk ) {\n*     clbk( null, i >= 5 );\n* }\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* untilAsync( predicate, fcn, done );\n*/\nfunction untilAsync( predicate, fcn, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tpredicate( idx, onPredicate );\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default untilAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function predicate( i, clbk ) {\n*     clbk( null, i < 5 );\n* }\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* whileAsync( predicate, fcn, done );\n*/\nfunction whileAsync( predicate, fcn, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tpredicate( idx, onPredicate );\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default whileAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport returnValues from '@stdlib/array/base/bifurcate-values';\nimport returnIndices from '@stdlib/array/base/bifurcate-indices';\nimport returnPairs from '@stdlib/array/base/bifurcate-entries';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Collection} filter - collection indicating which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a collection\n* @throws {RangeError} first and last arguments must be the same length\n* @returns {(Array|ArrayArray)} results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcate( arr, filter );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcate( collection, options, filter ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tf = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = filter;\n\t}\n\tif ( !isCollection( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a collection. Value: `%s`.', f ) );\n\t}\n\tif ( collection.length !== f.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and last arguments must be the same length.' );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, f );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, f );\n\t}\n\treturn returnPairs( collection, f );\n}\n\n\n// EXPORTS //\n\nexport default bifurcate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnIndices from './return_indices.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function indicating which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, predicate );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n* var out = bifurcateBy( arr, opts, predicate );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = bifurcateBy( arr, opts, predicate );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateBy( collection, options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = predicate;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, opts, cb );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, opts, cb );\n\t}\n\treturn returnPairs( collection, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the predicate function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input collection belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, {}, predicate );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateBy( collection, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tbool = predicate.call( thisArg, v, i );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as element indices.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, {}, predicate );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\nfunction bifurcateBy( collection, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar len;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tbool = predicate.call( thisArg, collection[ i ], i );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( i );\n\t\t} else {\n\t\t\tout[ 1 ].push( i );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as index-element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the predicate function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input collection belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, {}, predicate );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateBy( collection, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tbool = predicate.call( thisArg, v, i );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ i, v ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Splits an object's own and inherited property values into two groups according to a predicate function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = bifurcateIn( obj, opts, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = bifurcateIn( obj, opts, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateIn( obj, options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = predicate;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, {}, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateIn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tflg = false;\n\t\tv = obj[ key ];\n\t\tbool = predicate.call( thisArg, v, key );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function specifying which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, {}, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*/\nfunction bifurcateIn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tflg = false;\n\t\tbool = predicate.call( thisArg, obj[ key ], key );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( key );\n\t\t} else {\n\t\t\tout[ 1 ].push( key );\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, {}, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateIn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tflg = false;\n\t\tv = obj[ key ];\n\t\tbool = predicate.call( thisArg, v, key );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( [ key, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ key, v ] );\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Splits an object's own property values into two groups according to a predicate function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = bifurcateOwn( obj, opts, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': '*'\n* };\n* var out = bifurcateOwn( obj, opts, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateOwn( obj, options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = predicate;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, {}, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateOwn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tflg = false;\n\t\t\tv = obj[ key ];\n\t\t\tbool = predicate.call( thisArg, v, key );\n\t\t\tif ( bool ) {\n\t\t\t\tout[ 0 ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( v );\n\t\t\t}\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function specifying which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, {}, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*/\nfunction bifurcateOwn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tflg = false;\n\t\t\tbool = predicate.call( thisArg, obj[ key ], key );\n\t\t\tif ( bool ) {\n\t\t\t\tout[ 0 ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( key );\n\t\t\t}\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, {}, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateOwn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tflg = false;\n\t\t\tv = obj[ key ];\n\t\t\tbool = predicate.call( thisArg, v, key );\n\t\t\tif ( bool ) {\n\t\t\t\tout[ 0 ].push( [ key, v ] );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( [ key, v ] );\n\t\t\t}\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts the first letter of each object key to uppercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'aa': 1,\n*     'bb': 2\n* };\n*\n* var obj2 = capitalizeKeys( obj1 );\n* // returns { 'Aa': 1, 'Bb': 2 }\n*/\nfunction capitalizeKeys( obj ) {\n\tvar out;\n\tvar key;\n\tvar k;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tif ( key === '' ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t} else {\n\t\t\t\tk = key.charAt( 0 ).toUpperCase() + key.slice( 1 );\n\t\t\t\tout[ k ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default capitalizeKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns the common own property names of two or more objects.\n*\n* @param {*} obj1 - first object\n* @param {*} obj2 - second object\n* @param {...*} [obj] - additional objects\n* @throws {Error} must provide at least two objects\n* @returns {(StringArray|EmptyArray)} common keys\n*\n* @example\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var keys = commonKeys( obj, obj2 );\n* // returns [ 'a', 'b' ]\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj3 = {\n*     'a': 1,\n* };\n*\n* var keys = commonKeys( obj1, obj2, obj3 );\n* // returns [ 'a' ]\n*/\nfunction commonKeys() {\n\tvar nargs;\n\tvar keys;\n\tvar arg;\n\tvar ptr;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tnargs = arguments.length;\n\tif ( nargs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least two objects.' );\n\t}\n\tkeys = objectKeys( arguments[ 0 ] );\n\tN = keys.length;\n\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\targ = arguments[ i ];\n\t\tptr = 0;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( hasOwnProp( arg, keys[ j ] ) ) {\n\t\t\t\tkeys[ ptr ] = keys[ j ];\n\t\t\t\tptr += 1;\n\t\t\t}\n\t\t}\n\t\tN = ptr;\n\t}\n\tkeys.length = N;\n\treturn keys;\n}\n\n\n// EXPORTS //\n\nexport default commonKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property names.\n*\n* @param {ObjectLike} obj - input object\n* @returns {Array} key array\n*\n* @example\n* function Foo() {\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var keys = keysIn( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keysIn( obj ) {\n\tvar out;\n\tvar key;\n\n\tout = [];\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tout.push( key );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keysIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keysIn from './../../keys-in';\nimport hasProp from '@stdlib/assert/has-property';\n\n\n// MAIN //\n\n/**\n* Returns the common own and inherited property names of two or more objects.\n*\n* @param {*} obj1 - first object\n* @param {*} obj2 - second object\n* @param {...*} [obj] - additional objects\n* @throws {Error} must provide at least two objects\n* @returns {(StringArray|EmptyArray)} common keys\n*\n* @example\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var keys = commonKeysIn( obj, obj2 );\n* // returns [ 'a', 'b' ]\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj3 = {\n*     'a': 1,\n* };\n*\n* var keys = commonKeysIn( obj1, obj2, obj3 );\n* // returns [ 'a' ]\n*/\nfunction commonKeysIn() {\n\tvar nargs;\n\tvar keys;\n\tvar arg;\n\tvar ptr;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tnargs = arguments.length;\n\tif ( nargs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least two objects.' );\n\t}\n\tkeys = keysIn( arguments[ 0 ] );\n\tN = keys.length;\n\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\targ = arguments[ i ];\n\t\tptr = 0;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( hasProp( arg, keys[ j ] ) ) {\n\t\t\t\tkeys[ ptr ] = keys[ j ];\n\t\t\t\tptr += 1;\n\t\t\t}\n\t\t}\n\t\tN = ptr;\n\t}\n\tkeys.length = N;\n\treturn keys;\n}\n\n\n// EXPORTS //\n\nexport default commonKeysIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function composition.\n*\n* @param {...Function} f - functions to compose\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} composite function\n*\n* @example\n* function a( x ) {\n*     return 2 * x;\n* }\n*\n* function b( x ) {\n*     return x + 3;\n* }\n*\n* function c( x ) {\n*     return x / 5;\n* }\n*\n* var f = compose( c, b, a );\n*\n* var z = f( 6 );\n* // returns 3\n*/\nfunction compose() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to compose.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn composite;\n\n\t/**\n\t* Composite function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} result\n\t*/\n\tfunction composite() {\n\t\tvar args;\n\t\tvar i;\n\t\targs = new Array( arguments.length );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\targs = f[ nFuncs-1 ].apply( null, args );\n\t\tfor ( i = nFuncs-2; i >= 0; i-- ) {\n\t\t\targs = f[ i ]( args );\n\t\t}\n\t\treturn args;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default compose;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Creates a function which always returns the same value.\n*\n* @param {*} [value] - value to always return\n* @returns {Function} constant function\n*\n* @example\n* var fcn = wrap( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\nfunction wrap( value ) {\n\treturn constantFunction;\n\n\t/**\n\t* Constant function.\n\t*\n\t* @private\n\t* @returns {*} constant value\n\t*/\n\tfunction constantFunction() {\n\t\treturn value;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport reExtendedLengthPath from '@stdlib/regexp/extended-length-path';\nimport lowercase from '@stdlib/string/base/lowercase';\nimport replace from '@stdlib/string/replace';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar RE_WIN_DEVICE_ROOT = /^([A-Za-z]):[\\\\\\/]+/; // eslint-disable-line no-useless-escape\nvar RE_POSIX_DEVICE_ROOT =/^\\/([A-Za-z])\\//;\n\n\n// MAIN //\n\n/**\n* Converts between POSIX and Windows paths.\n*\n* @param {string} from - path to convert\n* @param {string} to - output path convention\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {RangeError} second argument must be a recognized output path convention\n* @throws {Error} cannot convert a Windows extended-length path to a non-Windows path convention\n* @returns {string} converted path\n*\n* @example\n* var p = convertPath( '/c/foo/bar/beep.c', 'win32' );\n* // returns 'c:\\foo\\bar\\beep.c'\n*\n* @example\n* var p = convertPath( '/c/foo/bar/beep.c', 'mixed' );\n* // returns 'c:/foo/bar/beep.c'\n*\n* @example\n* var p = convertPath( 'C:\\\\foo\\\\bar\\\\beep.c', 'posix' );\n* // returns '/c/foo/bar/beep.c'\n*\n* @example\n* var p = convertPath( 'C:\\\\foo\\\\bar\\\\beep.c', 'mixed' );\n* // returns 'C:/foo/bar/beep.c'\n*/\nfunction convertPath( from, to ) {\n\tvar device;\n\tvar parts;\n\tvar out;\n\tif ( !isString( from ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', from ) );\n\t}\n\tif ( !isString( to ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', to ) );\n\t}\n\tif (\n\t\tto !== 'win32' &&\n\t\tto !== 'mixed' &&\n\t\tto !== 'posix'\n\t) {\n\t\tthrow new Error( format( 'invalid argument. Second argument must be a recognized output path convention. Value: `%s`.', to ) );\n\t}\n\tout = from;\n\n\t// Convert to a Windows path convention by transforming a POSIX device root (if present) and using a Windows path separator...\n\tif ( to === 'win32' ) {\n\t\tparts = RE_POSIX_DEVICE_ROOT.exec( out );\n\t\tif ( parts ) {\n\t\t\tdevice = parts[ 1 ]+':\\\\';\n\t\t\tout = replace( out, RE_POSIX_DEVICE_ROOT, device );\n\t\t}\n\t\treturn replace( out, '/', '\\\\' );\n\t}\n\t// Check for Windows extended-length paths...\n\tif ( reExtendedLengthPath.REGEXP.test( from ) ) {\n\t\tthrow new Error( format( 'invalid argument. Cannot convert Windows extended-length paths to POSIX paths. Value: `%s`.', from ) );\n\t}\n\t// Convert to a mixed path convention by combining a Windows drive letter convention with a POSIX path separator...\n\tif ( to === 'mixed' ) {\n\t\tparts = RE_POSIX_DEVICE_ROOT.exec( out );\n\t\tif ( parts ) {\n\t\t\tdevice = parts[ 1 ]+':/';\n\t\t\tout = replace( out, RE_POSIX_DEVICE_ROOT, device );\n\t\t} else {\n\t\t\tparts = RE_WIN_DEVICE_ROOT.exec( out );\n\t\t\tif ( parts ) {\n\t\t\t\tdevice = parts[ 1 ]+':/';\n\t\t\t\tout = replace( out, RE_WIN_DEVICE_ROOT, device );\n\t\t\t}\n\t\t}\n\t\treturn replace( out, '\\\\', '/' );\n\t}\n\t// Convert to a POSIX path convention by transforming a Windows device root (if present) and using a POSIX path separator...\n\tparts = RE_WIN_DEVICE_ROOT.exec( out );\n\tif ( parts ) {\n\t\tdevice = '/'+lowercase( parts[ 1 ] )+'/';\n\t\tout = replace( out, RE_WIN_DEVICE_ROOT, device );\n\t}\n\treturn replace( out, '\\\\', '/' );\n}\n\n\n// EXPORTS //\n\nexport default convertPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport reRegExp from '@stdlib/regexp/regexp';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Parses a regular expression string and returns a new regular expression.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} must provide a regular expression string\n* @returns {(RegExp|null)} regular expression or null\n*\n* @example\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\nfunction reFromString( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = reRegExp().exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n}\n\n\n// EXPORTS //\n\nexport default reFromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyNames !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\n\n\n// VARIABLES //\n\nvar propertyNames = Object.getOwnPropertyNames;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn propertyNames( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable and non-enumerable property names.\n*\n* @module @stdlib/utils/property-names\n*\n* @example\n* import getOwnPropertyNames from '@stdlib/utils/property-names';\n*\n* var keys = getOwnPropertyNames({\n*   'foo': 'bar',\n*   'beep': 'boop'\n* });\n* // e.g., returns [ 'foo', 'beep' ]\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\nimport keys from './../../keys';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n* -   In environments lacking support for `Object.getOwnPropertyNames()`, property descriptors are unavailable, and thus all properties can be safely assumed to be enumerable. Hence, we can defer to calling `Object.keys`, which retrieves all own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptor !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tvar desc;\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\tdesc = propertyDescriptor( value, property );\n\treturn ( desc === void 0 ) ? null : desc;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a property descriptor for an object's own property.\n*\n* @module @stdlib/utils/property-descriptor\n*\n* @example\n* import getOwnPropertyDescriptor from '@stdlib/utils/property-descriptor';\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':'bar'}\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n* -   In environments lacking `Object.getOwnPropertyDescriptor()` support, property descriptors do not exist. In non-supporting environment, if an object has a provided property, this function returns a descriptor object equivalent to that returned in a supporting environment; otherwise, the function returns `null`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tif ( hasOwnProp( value, property ) ) {\n\t\treturn {\n\t\t\t'configurable': true,\n\t\t\t'enumerable': true,\n\t\t\t'writable': true,\n\t\t\t'value': value[ property ]\n\t\t};\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport Object from '@stdlib/object/ctor';\nimport getProto from './proto.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\nimport getProto from './detect.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array/int8';\nimport Uint8Array from '@stdlib/array/uint8';\nimport Uint8ClampedArray from '@stdlib/array/uint8c';\nimport Int16Array from '@stdlib/array/int16';\nimport Uint16Array from '@stdlib/array/uint16';\nimport Int32Array from '@stdlib/array/int32';\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float32Array from '@stdlib/array/float32';\nimport Float64Array from '@stdlib/array/float64';\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nexport default hash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArray from '@stdlib/assert/is-array';\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport isError from '@stdlib/assert/is-error';\nimport typeOf from './../../type-of';\nimport regexp from './../../regexp-from-string';\nimport indexOf from './../../index-of';\nimport objectKeys from './../../keys';\nimport propertyNames from './../../property-names';\nimport propertyDescriptor from './../../property-descriptor';\nimport getPrototypeOf from './../../get-prototype-of';\nimport defineProperty from './../../define-property';\nimport copyBuffer from '@stdlib/buffer/from-buffer';\nimport typedArrays from './typed_arrays.js';\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nexport default deepCopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport deepCopy from './deep_copy.js';\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', level ) );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nexport default copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and returns group counts.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} counts\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = countBy( arr, indicator );\n* // returns { 'b': 3, 'f': 1 }\n*/\nfunction countBy( collection, options, indicator ) {\n\tvar thisArg;\n\tvar opts;\n\tvar err;\n\tvar out;\n\tvar len;\n\tvar cb;\n\tvar g;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = cb.call( thisArg, collection[ i ], i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ] += 1;\n\t\t} else {\n\t\t\tout[ g ] = 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default countBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a function into a sequence of functions each accepting a single argument.\n*\n* @param {Function} fcn - function to curry\n* @param {PositiveInteger} [arity=fcn.length] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} first argument must be a function having at least one parameter\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} curry function\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var f = curry( add );\n*\n* var sum = f( 2 )( 3 );\n* // returns 5\n*/\nfunction curry( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t} else {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t\tcontext = arity;\n\t}\n\treturn createCurried( [] );\n\n\t/**\n\t* Returns a curry function.\n\t*\n\t* @private\n\t* @param {Array} args - arguments\n\t* @returns {Function} curry function\n\t*/\n\tfunction createCurried( args ) {\n\t\treturn curried;\n\n\t\t/**\n\t\t* Curry function.\n\t\t*\n\t\t* @private\n\t\t* @param {*} v - curried function parameter\n\t\t* @returns {(Function|*)} partially applied curry function or curried function result\n\t\t*/\n\t\tfunction curried( v ) {\n\t\t\tvar cargs = args.slice();\n\t\t\tcargs.push( v );\n\t\t\tif ( cargs.length < len ) {\n\t\t\t\treturn createCurried( cargs );\n\t\t\t}\n\t\t\treturn fcn.apply( context, cargs );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default curry;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a function into a sequence of functions each accepting a single argument.\n*\n* @param {Function} fcn - function to curry\n* @param {PositiveInteger} [arity=fcn.length] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} first argument must be a function having at least one parameter\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} curry function\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var f = curryRight( add );\n*\n* var sum = f( 2 )( 3 );\n* // returns 5\n*/\nfunction curryRight( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t} else {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t\tcontext = arity;\n\t}\n\treturn createCurried( [] );\n\n\t/**\n\t* Returns a curry function.\n\t*\n\t* @private\n\t* @param {Array} args - arguments\n\t* @returns {Function} curry function\n\t*/\n\tfunction createCurried( args ) {\n\t\treturn curried;\n\n\t\t/**\n\t\t* Curry function.\n\t\t*\n\t\t* @private\n\t\t* @param {*} v - curried function parameter\n\t\t* @returns {(Function|*)} partially applied curry function or curried function result\n\t\t*/\n\t\tfunction curried( v ) {\n\t\t\tvar cargs = args.slice();\n\t\t\tcargs.unshift( v );\n\t\t\tif ( cargs.length < len ) {\n\t\t\t\treturn createCurried( cargs );\n\t\t\t}\n\t\t\treturn fcn.apply( context, cargs );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default curryRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Applies provided arguments to a function and passes the result to another function.\n*\n* @private\n* @param {Function} fcn - function\n* @param {Array} args - function arguments\n* @param {Function} after - function to invoke with the result of `fcn`\n* @param {*} thisArg - evaluation context for `after`\n* @returns {*} result\n*/\nfunction apply( fcn, args, after, thisArg ) {\n\tvar r1 = fcn.apply( null, args );\n\tvar r2 = after.call( thisArg, r1 );\n\treturn ( r2 === void 0 ) ? r1 : r2;\n}\n\n\n// MAIN //\n\n/**\n* Decorates a provided function such that the function's return value is provided as an argument to another function.\n*\n* @param {Function} fcn - function to decorate\n* @param {NonNegativeInteger} arity - number of parameters\n* @param {Function} after - function to invoke with the result of the decorated function\n* @param {*} [thisArg] - evaluation context for `after`\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a function\n* @returns {Function} decorator\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, 1, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, 1, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*/\nfunction decorateAfter( fcn, arity, after, thisArg ) {\n\tvar fcns;\n\tvar f;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( after ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', after ) );\n\t}\n\t// NOTE: we select a specific signature so that `fcn.length` is preserved, thus matching the definition of a \"decorator\" where the decorator function should be transparent to external clients (i.e., have a matching signature). While more recent JavaScript environments allow `Function.prototype.length` to be configurable, older environments do not and error when attempting to manually specify the value for a function's length. We cap support for matching signature length as signatures with many parameters are likely to be exceedingly rare, especially when used in conjunction with this API...\n\tfcns = [ fN, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 ];\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tif ( arity < fcns.length ) {\n\t\tf = fcns[ arity ];\n\t} else {\n\t\tf = fN;\n\t}\n\treturn f;\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {...*} [args] - arguments\n\t* @returns {*} result\n\t*/\n\tfunction fN() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @returns {*} result\n\t*/\n\tfunction f1( x0 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\t// NOTE: the use of a `for` loop is intentional (both here and below), as JavaScript does not require that only a fixed number of arguments be provided; the number of provided arguments may be more or less than the signature specifies.\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @returns {*} result\n\t*/\n\tfunction f2( x0, x1 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @returns {*} result\n\t*/\n\tfunction f3( x0, x1, x2 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @returns {*} result\n\t*/\n\tfunction f4( x0, x1, x2, x3 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @returns {*} result\n\t*/\n\tfunction f5( x0, x1, x2, x3, x4 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @returns {*} result\n\t*/\n\tfunction f6( x0, x1, x2, x3, x4, x5 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @returns {*} result\n\t*/\n\tfunction f7( x0, x1, x2, x3, x4, x5, x6 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @returns {*} result\n\t*/\n\tfunction f8( x0, x1, x2, x3, x4, x5, x6, x7 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @param {*} x8 - ninth argument\n\t* @returns {*} result\n\t*/\n\tfunction f9( x0, x1, x2, x3, x4, x5, x6, x7, x8 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @param {*} x8 - ninth argument\n\t* @param {*} x9 - tenth argument\n\t* @returns {*} result\n\t*/\n\tfunction f10( x0, x1, x2, x3, x4, x5, x6, x7, x8, x9 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default decorateAfter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { REGEXP as reNativeFunction } from '@stdlib/regexp/native-function';\nimport function2string from '@stdlib/function/to-string';\nimport Fcn from '@stdlib/function/ctor';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\n/**\n* Captures everything that is not a right parenthesis immediately after the first left parenthesis.\n*\n* Regular expression: `/^\\s*function[^(]*\\(([^)]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `\\(`\n*     -   Match a left parenthesis `(`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^)]*`\n*     -   Match anything except a right parenthesis `)` zero or more times\n*\n* -   `)`\n*     -   Match a right parenthesis `)`\n*\n* -   `/i`\n*     -   Ignore case\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /^\\s*function[^(]*\\(([^)]*)/i\n*/\nvar RE_PARAMETERS = /^\\s*function[^(]*\\(([^)]*)/i;\n\n\n// MAIN //\n\n/**\n* Decorates a provided function such that the function's return value is provided as an argument to another function.\n*\n* @param {Function} fcn - function to decorate\n* @param {NonNegativeInteger} arity - number of parameters\n* @param {Function} after - function to invoke with the result of the decorated function\n* @param {*} [thisArg] - evaluation context for `after`\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a function\n* @returns {Function} decorator\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, abs.length, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, abs.length, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, abs.length, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*/\nfunction decorateAfter( fcn, arity, after, thisArg ) {\n\tvar params;\n\tvar str;\n\tvar len;\n\tvar f;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tif ( !isFunction( after ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', after ) );\n\t}\n\tstr = function2string( fcn );\n\n\t// Code generation. Start with the function definition for creating the decorator:\n\tf = 'return function make(__$$fcn$$__,__$$after$$__,__$$thisArg$$__){';\n\n\t// Include the \"use strict\" directive:\n\tf += '\"use strict\";';\n\n\t// Generate a list of function parameters:\n\tif ( reNativeFunction.test( str ) ) {\n\t\tparams = [];\n\t\tfor ( i = 0; i < arity; i++ ) {\n\t\t\tparams.push( 'x'+i );\n\t\t}\n\t} else {\n\t\tparams = str.match( RE_PARAMETERS )[ 1 ];\n\t\tif ( params ) {\n\t\t\tparams = params.split( ',' );\n\t\t} else {\n\t\t\tparams = [];\n\t\t}\n\t\tlen = params.length;\n\t\tif ( len < arity ) {\n\t\t\tfor ( i = len; i < arity; i++ ) {\n\t\t\t\tparams.push( '__$$x'+i+'$$__' );\n\t\t\t}\n\t\t} else if ( len > arity ) {\n\t\t\tparams.length = arity;\n\t\t}\n\t}\n\tparams = params.join( ',' );\n\n\t// Create the decorator definition:\n\tf += 'return function decorator(' + params + '){';\n\n\t// Initialize an array for storing provided arguments:\n\tf += 'var __$$args$$__=[];';\n\n\t// Gather provided arguments:\n\tf += 'for (var __$$i$$__=0;__$$i$$__<arguments.length;__$$i$$__++){__$$args$$__.push(arguments[__$$i$$__]);}';\n\n\t// Invoke the decorated function:\n\tf += 'var __$$r1$$__ = __$$fcn$$__.apply(null,__$$args$$__);';\n\n\t// Provide the result to the `after` function:\n\tf += 'var __$$r2$$__ = __$$after$$__.call(__$$thisArg$$__,__$$r1$$__);';\n\n\t// Return the result:\n\tf += 'return (__$$r2$$__ === void 0) ? __$$r1$$__ : __$$r2$$__;';\n\n\t// Close the decorator function:\n\tf += '}';\n\n\t// Close the outer function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=decorateAfter.factory.js';\n\n\t// Create the function the global scope:\n\treturn (new Fcn( f ))()( fcn, after, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default decorateAfter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns a nested property value.\n*\n* @private\n* @param {ObjectLike} obj - input object\n* @param {Array} props - list of properties defining a key path\n* @returns {*} nested property value\n*/\nfunction deepGet( obj, props ) {\n\tvar len = props.length;\n\tvar v = obj;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif (\n\t\t\tisObjectLike( v ) &&\n\t\t\thasOwnProp( v, props[ i ] )\n\t\t) {\n\t\t\tv = v[ props[ i ] ];\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default deepGet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dget from './dget.js';\n\n\n// MAIN //\n\n/**\n* Returns a nested property value.\n*\n* @param {ObjectLike} obj - input object\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {*} nested property value\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, 'a.b.c' );\n* // returns 'd'\n*\n* @example\n* var arr = [\n*     { 'a': [ {'x': 5} ] },\n*     { 'a': [ {'x': 10} ] }\n* ];\n* var val = deepGet( arr, '1.a.0.x' );\n* // returns 10\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, ['a','b','c'] );\n* // returns 'd'\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, 'a/b/c', {\n*     'sep': '/'\n* });\n* // returns 'd'\n*/\nfunction deepGet( obj, path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\treturn;\n\t}\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn dget( obj, props );\n}\n\n\n// EXPORTS //\n\nexport default deepGet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'sep': '.'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dget from './dget.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for retrieving a nested property value.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} deep get function\n*\n* @example\n* var dget = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepGet;\n\n\t/**\n\t* Returns a nested property value.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - input object\n\t* @returns {*} nested property value\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var val = deepGet( obj );\n\t*/\n\tfunction deepGet( obj ) {\n\t\tif ( isObjectLike( obj ) ) {\n\t\t\treturn dget( obj, props );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as deepGet } from './../../deep-get';\nimport isArray from '@stdlib/assert/is-array';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Extracts a nested property value from each element of an object array.\n*\n* @param {Array} arr - source array\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=true] - boolean indicating whether to return a new data structure\n* @param {string} [options.sep=\".\"] - key path separator\n* @throws {TypeError} first argument must be an array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} destination array\n*\n* @example\n* var arr = [\n*     {'a':{'b':{'c':1}}},\n*     {'a':{'b':{'c':2}}}\n* ];\n*\n* var out = deepPluck( arr, 'a.b.c' );\n* // returns [ 1, 2 ]\n*\n* @example\n* var arr = [\n*     {'a':[0,1,2]},\n*     {'a':[3,4,5]}\n* ];\n*\n* var out = deepPluck( arr, ['a',1] );\n* // returns [ 1, 4 ]\n*\n* @example\n* var arr = [\n*     {'a':{'b':{'c':1}}},\n*     {'a':{'b':{'c':2}}}\n* ];\n*\n* var out = deepPluck( arr, 'a.b.c', {'copy':false} );\n* // returns [ 1, 2 ]\n*\n* var bool = ( arr[ 0 ] === out[ 0 ] );\n* // returns true\n*\n* @example\n* var arr = [\n*     {'a':{'b':{'c':1}}},\n*     {'a':{'b':{'c':2}}}\n* ];\n*\n* var out = deepPluck( arr, 'a|b|c', {'sep':'|'} );\n* // returns [ 1, 2 ]\n*/\nfunction deepPluck( arr, path, options ) {\n\tvar dget;\n\tvar opts;\n\tvar out;\n\tvar err;\n\tvar i;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array. Value: `%s`.', arr ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.copy ) {\n\t\tout = new Array( arr.length );\n\t} else {\n\t\tout = arr;\n\t}\n\tdget = deepGet( path, {\n\t\t'sep': opts.sep\n\t});\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tout[ i ] = dget( arr[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default deepPluck;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'copy': true,\n\t\t'sep': '.'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {boolean} [options.copy] - boolean indicating whether to return a new data structure\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'copy': true,\n*     'sep': '-',\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {boolean} [options.create] - boolean indicating whether to create a path if the key path does not already exist\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'create' ) ) {\n\t\topts.create = options.create;\n\t\tif ( !isBoolean( opts.create ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'create', opts.create ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isFunction from '@stdlib/assert/is-function';\n\n\n// MAIN //\n\n/**\n* Sets a nested property.\n*\n* @private\n* @param {ObjectLike} obj - input object\n* @param {Array} props - list of properties defining a key path\n* @param {boolean} create - boolean indicating whether to create a path if the key path does not already exist\n* @param {*} val - value to set\n* @returns {boolean} boolean indicating if the property was successfully set\n*/\nfunction deepSet( obj, props, create, val ) {\n\tvar bool;\n\tvar len;\n\tvar v;\n\tvar p;\n\tvar i;\n\n\tlen = props.length;\n\tbool = false;\n\tv = obj;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tp = props[ i ];\n\t\tif ( isObjectLike( v ) ) {\n\t\t\tif ( !hasOwnProp( v, p ) ) {\n\t\t\t\tif ( create ) {\n\t\t\t\t\tv[ p ] = {};\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( i === len-1 ) {\n\t\t\t\tif ( isFunction( val ) ) {\n\t\t\t\t\tv[ p ] = val( v[ p ] );\n\t\t\t\t} else {\n\t\t\t\t\tv[ p ] = val;\n\t\t\t\t}\n\t\t\t\tbool = true;\n\t\t\t} else {\n\t\t\t\tv = v[ p ];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default deepSet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dset from './dset.js';\n\n\n// MAIN //\n\n/**\n* Sets a nested property value.\n*\n* @param {ObjectLike} obj - input object\n* @param {(string|Array)} path - key path\n* @param {*} value - value to set\n* @param {Options} [options] - function options\n* @param {boolean} [options.create=false] - boolean indicating whether to create a path if the key path does not already exist\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {boolean} boolean indicating if the property was successfully set\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.b.c', 'woot' );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.beep.c', 'boop' );\n* // returns false\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( null, 'a.beep.c', 'boop' );\n* // returns false\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* bool = deepSet( 'bap', 'a.beep.c', 'boop' );\n* // returns false\n*\n* @example\n* var arr = [\n*     { 'a': [ {'x': 5} ] },\n*     { 'a': [ {'x': 10} ] }\n* ];\n* var bool = deepSet( arr, '1.a.0.x', 25 );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a/b/c', 'beep', {\n*     'sep': '/'\n* });\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.e.c', 'boop', {\n*     'create': true\n* });\n* // returns true\n*/\nfunction deepSet( obj, path, value, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\treturn false;\n\t}\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn dset( obj, props, opts.create, value );\n}\n\n\n// EXPORTS //\n\nexport default deepSet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'create': false,\n\t\t'sep': '.'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setConfigurableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setConfigurableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setConfigurableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setConfigurableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* var name = 'bar';\n* var obj = {};\n*\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* setConfigurableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setConfigurableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable write-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} setter - accessor\n*\n* @example\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setConfigurableWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\nfunction setConfigurableWriteOnlyAccessor( obj, prop, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableWriteOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines a memoized object property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} desc - property descriptor\n* @param {boolean} [desc.configurable=false] - boolean indicating if the property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [desc.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [desc.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {Function} desc.value - function whose return value will be memoized\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {TypeError} property descriptor `value` property must be a function\n*\n* @example\n* var obj = {};\n*\n* function foo() {\n*     return 'bar';\n* }\n*\n* defineMemoizedProperty( obj, 'foo', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': foo\n* });\n*\n* var v = obj.foo;\n* // returns 'bar'\n*/\nfunction defineMemoizedProperty( obj, prop, desc ) {\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isObject( desc ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', desc ) );\n\t}\n\tif ( !isFunction( desc.value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. The `value` property of the property descriptor must be a function. Value: `%s`.', desc.value ) );\n\t}\n\t// Copy descriptor properties to a new data descriptor object:\n\tdesc = {\n\t\t'configurable': ( desc.configurable === void 0 ) ? false : desc.configurable,\n\t\t'enumerable': ( desc.enumerable === void 0 ) ? false : desc.enumerable,\n\t\t'writable': ( desc.writable === void 0 ) ? false : desc.writable,\n\t\t'value': desc.value\n\t};\n\n\t// Define a configurable (at least temporarily) accessor property:\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': desc.enumerable,\n\t\t'get': getter,\n\t\t'set': ( desc.writable ) ? memoize : void 0\n\t});\n\n\t/**\n\t* Temporary get accessor.\n\t*\n\t* @private\n\t* @returns {*} property value\n\t*/\n\tfunction getter() {\n\t\tvar value = desc.value.call( obj );\n\t\tmemoize( value );\n\t\treturn value;\n\t}\n\n\t/**\n\t* Defines a memoized object property.\n\t*\n\t* @private\n\t* @param {*} value - value to set\n\t*/\n\tfunction memoize( value ) {\n\t\tdesc.value = value;\n\t\tdefineProperty( obj, prop, desc );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default defineMemoizedProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport defineMemoizedProperty from './../../define-memoized-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines a configurable memoized read-only object property.\n*\n* ## Notes\n*\n* -   Configurable read-only properties are **enumerable**.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} fcn - function whose return value will be memoized and set as the property value\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* var obj = {};\n*\n* function foo() {\n*     return 'bar';\n* }\n*\n* setMemoizedConfigurableReadOnly( obj, 'foo', foo );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*/\nfunction setMemoizedConfigurableReadOnly( obj, prop, fcn ) { // eslint-disable-line id-length\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tdefineMemoizedProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': fcn\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setMemoizedConfigurableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport defineMemoizedProperty from './../../define-memoized-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines a memoized read-only object property.\n*\n* ## Notes\n*\n* -   Read-only properties are **enumerable** and **non-configurable**.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} fcn - function whose return value will be memoized and set as the property value\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* var obj = {};\n*\n* function foo() {\n*     return 'bar';\n* }\n*\n* setMemoizedReadOnly( obj, 'foo', foo );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*/\nfunction setMemoizedReadOnly( obj, prop, fcn ) {\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tdefineMemoizedProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': fcn\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setMemoizedReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* import objectKeys from '@stdlib/utils/keys';\n*\n* var obj = {};\n*\n* setNonEnumerableProperty( obj, 'foo', 'bar' );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*\n* var keys = objectKeys( obj );\n* // returns []\n*/\nfunction setNonEnumerableProperty( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setNonEnumerableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable write-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} setter - accessor\n*\n* @example\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setNonEnumerableWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\nfunction setNonEnumerableWriteOnlyAccessor( obj, prop, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableWriteOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Decorate a provided function such that the function's return value is provided as an argument to another function.\n*\n* @module @stdlib/utils/decorate-after\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, 1, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, 1, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter.factory( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Get a nested property value.\n*\n* @module @stdlib/utils/deep-get\n*\n* @example\n* import deepGet from '@stdlib/utils/deep-get';\n*\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* var val = deepGet( obj, 'a.b.c' );\n* // returns 'd'\n*\n* var dget = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*\n* obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* val = dget( obj );\n* // returns 'd'\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set a nested property value.\n*\n* @module @stdlib/utils/deep-set\n*\n* @example\n* import deepSet from '@stdlib/utils/deep-set';\n*\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.b.c', 'beep' );\n* // returns true\n*\n* var dset = deepSet.factory( 'a/b/c', {\n*     'create': true,\n*     'sep': '/'\n* });\n*\n* obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* bool = dset( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dset from './dset.js';\n\n\n// MAIN //\n\n/**\n* Creates a reusable deep set function.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {boolean} [options.create=false] - boolean indicating whether to create a path if the key path does not already exist\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} deep set function\n*\n* @example\n* var dset = factory( 'a/b/c', {\n*     'create': true,\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepSet;\n\n\t/**\n\t* Sets a nested property.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - input object\n\t* @param {*} value - value to set\n\t* @returns {boolean} boolean indicating if the property was successfully set\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var bool = dset( obj, 'beep' );\n\t*/\n\tfunction deepSet( obj, value ) {\n\t\tif ( isObjectLike( obj ) ) {\n\t\t\treturn dset( obj, props, opts.create, value );\n\t\t}\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) object properties.\n*\n* @name defineProperties\n* @type {Function}\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nvar defineProperties = Object.defineProperties;\n\n\n// EXPORTS //\n\nexport default defineProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (and/or modify) properties.\n*\n* @module @stdlib/utils/define-properties\n*\n* @example\n* import defineProperties from '@stdlib/utils/define-properties';\n*\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar',\n*         'writable': false,\n*         'configurable': false,\n*         'enumerable': true\n*     },\n*     'baz': {\n*         'value': 13\n*     }\n* });\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.log( err.message );\n* }\n*/\n\n// MODULES //\n\nimport hasDefinePropertiesSupport from '@stdlib/assert/has-define-properties-support'; // eslint-disable-line id-length\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperties;\nif ( hasDefinePropertiesSupport() ) {\n\tdefineProperties = builtin;\n} else {\n\tdefineProperties = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport objectKeys from './../../keys';\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) properties.\n*\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nfunction defineProperties( obj, props ) {\n\tvar keys;\n\tvar name;\n\tvar i;\n\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isObject( props ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an object containing property descriptors. Value: `%s`.', props ) );\n\t}\n\tkeys = objectKeys( props );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tname = keys[ i ];\n\t\tdefineProperty( obj, name, props[ name ] );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnlyAccessor( obj, prop, getter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setReadWriteAccessor( obj, prop, getter, setter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a write-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} setter - accessor\n*\n* @example\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\nfunction setWriteOnlyAccessor( obj, prop, setter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setWriteOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\nimport { REGEXP as RE_DIRNAME } from '@stdlib/regexp/dirname';\n\n\n// MAIN //\n\n/**\n* Returns a path dirname.\n*\n* @param {string} path - path\n* @throws {TypeError} must provide a string primitive\n* @returns {string} directory name\n*\n* @example\n* var dir = dirname( './foo/bar/index.js' );\n* // returns './foo/bar'\n*/\nfunction dirname( path ) {\n\tif ( !isString( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Path must be a string. Value: `%s`.', path ) );\n\t}\n\treturn RE_DIRNAME.exec( path )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default dirname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to stop invoking a function\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i <= 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* doUntil( beep, predicate );\n*/\nfunction doUntil( fcn, predicate, thisArg ) {\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t} while ( !predicate( i ) );\n}\n\n\n// EXPORTS //\n\nexport default doUntil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* doUntilEach( arr, log, predicate );\n*/\nfunction doUntilEach( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t} while (\n\t\ti < len &&\n\t\t!predicate( collection[ i-1 ], i-1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doUntilEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `doUntilEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `doUntilEach()`, `[].push()` behavior is consistent with `doUntilEachRight()` `[].unshift()` behavior.\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* doUntilEachRight( arr, log, predicate );\n*/\nfunction doUntilEachRight( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = len - 1;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t} while (\n\t\ti >= 0 &&\n\t\t!predicate( collection[ i+1 ], i+1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doUntilEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i < 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* doWhile( beep, predicate );\n*/\nfunction doWhile( fcn, predicate, thisArg ) {\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t} while ( predicate( i ) );\n}\n\n\n// EXPORTS //\n\nexport default doWhile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* doWhileEach( arr, log, predicate );\n*/\nfunction doWhileEach( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t} while (\n\t\ti < len &&\n\t\tpredicate( collection[ i-1 ], i-1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doWhileEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `doWhileEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `doWhileEach()`, `[].push()` behavior is consistent with `doWhileEachRight()` `[].unshift()` behavior.\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* doWhileEachRight( arr, log, predicate );\n*/\nfunction doWhileEachRight( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = len - 1;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t} while (\n\t\ti >= 0 &&\n\t\tpredicate( collection[ i+1 ], i+1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doWhileEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n\n\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\nfunction rescape( str ) {\n\tvar len;\n\tvar s;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Check if the string starts with a forward slash...\n\tif ( str[ 0 ] === '/' ) {\n\t\t// Find the last forward slash...\n\t\tlen = str.length;\n\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\tif ( str[ i ] === '/' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\tif ( i === void 0 || i <= 0 ) {\n\t\treturn str.replace( RE_CHARS, '\\\\$&' );\n\t}\n\t// We need to de-construct the string...\n\ts = str.substring( 1, i );\n\n\t// Only escape the characters between the `/`:\n\ts = s.replace( RE_CHARS, '\\\\$&' );\n\n\t// Reassemble:\n\tstr = str[ 0 ] + s + str.substring( i );\n\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport noop from './../../../../noop';\n\n\n// FUNCTIONS //\n\n/**\n* Throws a provided exception.\n*\n* @private\n* @param {Error} err - error object\n* @throws {Error} exception\n*/\nfunction throwError( err ) {\n\tthrow err;\n}\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t// Character sequence appearing at the beginning of a row which demarcates that the row content should be parsed as a commented line. A commented line ends upon encountering the first newline character sequence, regardless of whether that newline character sequence is preceded by an escape character sequence.\n\t\t'comment': '',\n\n\t\t// Character sequence separating record fields (e.g., use `','` for CSV and use `'\\t'` for TSV).\n\t\t'delimiter': ',',\n\n\t\t// Flag indicating how quote sequences should be escaped within a quoted field. When `true`, a quote sequence must be escaped by another quote sequence. When `false`, a quote sequence must be escaped by the escape sequence.\n\t\t'doublequote': true,\n\n\t\t// Character sequence for escaping character sequences having special meaning (i.e., delimiter, newline, escape, and comment outside of quoted fields, and the quote sequence within quoted fields when `doublequote` is `false`).\n\t\t'escape': '',\n\n\t\t// Flag indicating whether to trim leading whitespace from field values. If `false`, leading whitespace is not trimmed (e.g., `a, b, c` parses as `[ 'a', ' b', ' c' ]`). If `true`, leading whitespace is trimmed (e.g., `a, b, c` parses as `[ 'a', 'b', 'c' ]`).\n\t\t'ltrim': false,\n\n\t\t// Maximum number of records to process.\n\t\t'maxRows': 1e308,\n\n\t\t// Character sequence separating rows.\n\t\t'newline': '\\r\\n',\n\n\t\t// Callback to be invoked upon closing the parser.\n\t\t'onClose': noop,\n\n\t\t// Callback to be invoked upon processing a field.\n\t\t'onColumn': noop,\n\n\t\t// Callback to be invoked upon processing a commented line.\n\t\t'onComment': null,\n\n\t\t// Callback to be invoked upon encountering an unrecoverable parse error.\n\t\t'onError': throwError,\n\n\t\t// Callback to be invoked upon processing a record.\n\t\t'onRow': noop,\n\n\t\t// Callback to be invoked upon skipping a line.\n\t\t'onSkip': null,\n\n\t\t// When `strict` is `false`, a callback to be invoked upon encountering invalid DSV.\n\t\t'onWarn': null,\n\n\t\t// Character sequence demarcating the beginning and ending of a quoted field.\n\t\t'quote': '\"',\n\n\t\t// Flag indicating whether to enable special processing of quote character sequences (i.e., whether a quote sequence should demarcate a quoted field).\n\t\t'quoting': true,\n\n\t\t// Array-like object for storing the field values of the most recently processed record. This allows reusing memory and avoiding copies upon invocation of the `onRow` callback.\n\t\t'rowBuffer': [],\n\n\t\t// Flag indicating whether to trim trailing whitespace from field values. If `false`, trailing whitespace is not trimmed (e.g., `a ,b , c` parses as `[ 'a ', 'b ', ' c' ]`). If `true`, trailing whitespace is trimmed (e.g., `a ,b ,c` parses as `[ 'a', 'b', 'c' ]`).\n\t\t'rtrim': false,\n\n\t\t// Character sequence appearing at the beginning of a row which demarcates that the row content should be skipped.\n\t\t'skip': '',\n\n\t\t// Flag indicating whether to skip over rows which are either empty or containing only whitespace.\n\t\t'skipBlankRows': false,\n\n\t\t// Callback whose return value indicates whether to skip over a row.\n\t\t'skipRow': null,\n\n\t\t// Flag indicating whether to raise an exception upon encountering invalid DSV.\n\t\t'strict': true,\n\n\t\t// Flag indicating whether to trim leading whitespace in commented lines.\n\t\t'trimComment': true,\n\n\t\t// List of characters to be treated as whitespace.\n\t\t'whitespace': [ ' ' ]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enum2state from './enum2state.json';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a table mapping state names to enumeration constants.\n*\n* @private\n* @returns {Object} mapping table\n*/\nfunction table() {\n\tvar out;\n\tvar i;\n\n\tout = {};\n\tfor ( i = 0; i < enum2state.length; i++ ) {\n\t\tout[ enum2state[ i ] ] = i;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Table mapping state names to enumeration constants.\n*\n* @private\n* @name state2enum\n* @type {Object}\n*/\nvar state2enum = table(); // eslint-disable-line vars-on-top\n\n\n// EXPORTS //\n\nexport default state2enum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\n// Possible transition states...\nvar CLOSED = state2enum[ 'closed' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for closing a parser.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next() {\n\t\tparser._changeState( CLOSED );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:comment' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a commented line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar newlineLastIndex;\n\tvar newline;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t// Check for the end of the commented line...\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for a parser error state.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next() {\n\t\tparser._changeState( ERROR );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @private\n* @param {NonNegativeInteger} x - first value\n* @param {NonNegativeInteger} y - second value\n* @returns {NonNegativeInteger} maximum value\n*\n* @example\n* var v = max( 2, 3 );\n* // returns 3\n*\n* @example\n* var v = max( 3, 2 );\n* // returns 3\n*\n* @example\n* var v = max( 2, 2 );\n* // returns 2\n*/\nfunction max( x, y ) {\n\treturn ( x < y ) ? y : x;\n}\n\n\n// EXPORTS //\n\nexport default max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:escape' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar FIELD = state2enum[ 'field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence.\n*\n* ## Notes\n*\n* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar skipLastIndex;\n\tvar escapeLength;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar escape;\n\tvar strict;\n\tvar skip;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescapeLength = parser._escapeLength;\n\tescape = parser._escape;\n\n\tstrict = parser._strict;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), escapeLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\td === delimiterLastIndex &&\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, delimiterLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\td === newlineLastIndex &&\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, newlineLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape sequence.\n\t\t*/\n\t\tif (\n\t\t\td === escapeLastIndex &&\n\t\t\tch === escape[ escapeLastIndex ] &&\n\t\t\tparser._scan( escape, escapeLastIndex )\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, escapeLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a comment sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Comment sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                 // user specified a comment character sequence, so should check for comments\n\t\t\tcursor-commentLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === comment[ commentLastIndex ] &&      // we have a potential match\n\t\t\tparser._scan( comment, commentLastIndex )  // we found a match\n\t\t) {\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._copyWithin( idx-commentLastIndex, idx+1, commentLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a skip sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Skip sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                 // user specified a skip character sequence, so should check for a skipped line\n\t\t\tcursor-skipLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === skip[ skipLastIndex ] &&         // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )     // we found a match\n\t\t) {\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._copyWithin( idx-skipLastIndex, idx+1, skipLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In strict mode, field separators, row separators, and escaped sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the escape sequence which led to the current state. Once this happens, we're in an invalid state and must raise an exception, as not clear how the parser should interpret the preceding values (e.g., was the preceding escape sequence supposed to be escaped? was the preceding escape sequence a mistake and should be ignored? are we missing a delimiter or newline sequence? etc.).\n\t\t* -   In non-strict mode, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= max ) {\n\t\t\tif ( strict ) {\n\t\t\t\tdebug( 'Error.' );\n\t\t\t\tparser._setErrorState( 'INVALID_ESCAPE' )._changeState( ERROR );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Return to normal field processing:\n\t\t\tdebug( 'Escape sequence is not followed by a special character sequence.' );\n\t\t\tparser._raiseWarning( 'INVALID_ESCAPE' )._push( ch )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:field' );\n\n// Possible transition states...\nvar ESCAPE = state2enum[ 'escape' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a field.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor - parser._cidx + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n\t\t* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting ) {\n\t\t\t\t// Rewind the cursor to point to the last character before the quote character sequence:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._rewind( quoteLastIndex )._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting && parser._isWhitespace( parser._cidx, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\t// Rewind the cursor to point to the last character of the preceding field:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._raiseWarning( 'INVALID_OPENING_QUOTE' )\n\t\t\t\t\t._rewind( idx )\n\t\t\t\t\t._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:init' );\n\n// Possible transition states...\nvar COMMENT = state2enum[ 'comment' ];\nvar FIELD = state2enum[ 'field' ];\nvar ESCAPE = state2enum[ 'escape' ];\nvar INIT = state2enum[ 'init' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\nvar SKIP = state2enum[ 'skip' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing the initial characters of a row.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar skipLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\tvar skip;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for the start of a commented line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a commented line, the comment sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                // user specified a comment character sequence, so should check for comments\n\t\t\tidx-commentLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === comment[ commentLastIndex ] &&     // we have a potential comment match\n\t\t\tparser._scan( comment, commentLastIndex ) // we found a match\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the comment character sequence:\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._rewind( commentLastIndex )._changeState( COMMENT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for the start of a skipped line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a skipped line, the skip sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                // user specified a skip character sequence, so should check for skipped lines\n\t\t\tidx-skipLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === skip[ skipLastIndex ] &&        // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )    // we found a match\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the skip character sequence:\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._rewind( skipLastIndex )._changeState( SKIP );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n\t\t* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting ) {\n\t\t\t\t// Rewind the cursor to point to the last character before the quote character sequence:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._rewind( quoteLastIndex )._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting && parser._isWhitespace( 0, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\t// Rewind the cursor to the beginning of the buffer:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._raiseWarning( 'INVALID_OPENING_QUOTE' )\n\t\t\t\t\t._rewind( idx )\n\t\t\t\t\t._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:invalid_quote_end' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\n\n\n// FUNCTIONS //\n\n/**\n* Removes whitespace following a closing quote sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @param {NonNegativeInteger} state - next state\n* @returns {void}\n*/\nfunction removeWhitespace( parser, state ) {\n\t// Check whether the character sequence consists only of whitespace:\n\tif ( parser._isWhitespace( parser._qidx+1, parser._cursor ) ) {\n\t\t// Rewind the cursor and resume normal processing:\n\t\tparser._raiseWarning( 'INVALID_CLOSING_QUOTE' )\n\t\t\t._rewind( parser._cursor-parser._qidx )\n\t\t\t._changeState( state );\n\t\treturn;\n\t}\n\t// Non-whitespace characters came after a closing quote, leaving us in an ambiguous state: was the closing quote intended and we're missing a delimiter/newline, or was the closing quote a mistake and should have been escaped? We don't know, and so we must raise an exception:\n\tdebug( 'Error.' );\n\tparser._setErrorState( 'INVALID_CLOSING_QUOTE' )._changeState( ERROR );\n}\n\n\n// MAIN //\n\n/**\n* Returns a function for processing field characters after an ending quote sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar delimiter;\n\tvar newline;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex );\n\n\t\t\t// Remove whitespace and resume processing:\n\t\t\tremoveWhitespace( parser, FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex );\n\n\t\t\t// Remove whitespace and resume processing:\n\t\t\tremoveWhitespace( parser, INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:quote_end' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\nvar INVALID_QUOTE_END = state2enum[ 'invalid_quote_end' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an ending quote sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar delimiter;\n\tvar newline;\n\tvar strict;\n\tvar quote;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\tstrict = parser._strict;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), quoteLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `doublequote` is `true`, quote character sequences are escaped by a preceding quote character sequence.\n\t\t* -   When `doublequote` is `false`, quote character sequences must be explicitly escaped using an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\t// Keep the escaped quote character sequence and transition back to a quoted field state:\n\t\t\tdebug( 'Double quote.' );\n\t\t\tparser._push( ch )._changeState( QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Field separators, row separators, and escaped quote sequences must immediately follow a potential closing quote sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the quote sequence which led to the current state. Once this happens, we're in an invalid state and must raise an exception, as not clear how the parser should interpret the preceding values (e.g., was the preceding quote supposed to be escaped? was the preceding quote a mistake and should be ignored? are we missing a delimiter or newline sequence? etc.). In strict mode, we raise an exception. In non-strict mode, we only raise an exception if non-whitespace characters follow the potential closing quote sequence.\n\t\t*/\n\t\tif ( parser._cursor-parser._qidx >= max ) {\n\t\t\tif ( strict ) {\n\t\t\t\tdebug( 'Error.' );\n\t\t\t\tparser._setErrorState( 'INVALID_CLOSING_QUOTE' )._changeState( ERROR );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdebug( 'Invalid closing quote.' );\n\t\t\tparser._push( ch )._changeState( INVALID_QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:quoted_escape' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence within a quoted field.\n*\n* ## Notes\n*\n* -   Within a quoted field, an escape sequence (only) escapes the quote sequence.\n* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar escapeLength;\n\tvar strict;\n\tvar quote;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescapeLength = parser._escapeLength;\n\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote sequence.\n\t\t*/\n\t\tif (\n\t\t\td === quoteLastIndex &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, quoteLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In strict mode, quote sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in a quote sequence, meaning that a quote sequence does not immediately follow the escape sequence which led to the current state. Once this happens, we're in an invalid state and must raise an exception, as not clear how the parser should interpret the preceding values (e.g., was the preceding escape sequence a mistake and should be ignored? are we missing a quote sequence? etc.).\n\t\t* -   In non-strict mode, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= quoteLastIndex ) {\n\t\t\tif ( strict ) {\n\t\t\t\tdebug( 'Error.' );\n\t\t\t\tparser._setErrorState( 'INVALID_QUOTED_ESCAPE' )._changeState( ERROR );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Return to normal field processing:\n\t\t\tdebug( 'Escape sequence is not followed by a quote sequence.' );\n\t\t\tparser._raiseWarning( 'INVALID_QUOTED_ESCAPE' )._push( ch )._changeState( QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:quoted_field' );\n\n// Possible transition states...\nvar QUOTE_END = state2enum[ 'quote_end' ];\nvar QUOTED_ESCAPE = state2enum[ 'quoted_escape' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a quoted field.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar escape;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote === false &&                // double quoting is disabled\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( QUOTED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an ending quote character sequence.\n\t\t*/\n\t\tif (\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the quote character sequence:\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._rewind( quoteLastIndex )._changeState( QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skip' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\nvar SKIP = state2enum[ 'skip' ];\nvar SKIPPED_COMMENT = state2enum[ 'skipped_comment' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_ESCAPE = state2enum[ 'skipped_escape' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar skipLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\tvar skip;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for the start of a commented line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a commented line, the comment sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                // user specified a comment character sequence, so should check for comments\n\t\t\tidx-commentLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === comment[ commentLastIndex ] &&     // we have a potential comment match\n\t\t\tparser._scan( comment, commentLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_COMMENT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for the start of a skipped line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a skipped line, the skip sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                // user specified a skip character sequence, so should check for skipped lines\n\t\t\tidx-skipLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === skip[ skipLastIndex ] &&        // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )    // we found a match\n\t\t) {\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._push( ch )._changeState( SKIP );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting && parser._isWhitespace( 0, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_comment' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a skipped commented line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar newlineLastIndex;\n\tvar newline;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t// Check for the end of the commented line...\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_escape' );\n\n// Possible transition states...\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence within a skipped line.\n*\n* ## Notes\n*\n* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar skipLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar escape;\n\tvar skip;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), escapeLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\td === delimiterLastIndex &&\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\td === newlineLastIndex &&\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape sequence.\n\t\t*/\n\t\tif (\n\t\t\td === escapeLastIndex &&\n\t\t\tch === escape[ escapeLastIndex ] &&\n\t\t\tparser._scan( escape, escapeLastIndex )\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a comment sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Comment sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                 // user specified a comment character sequence, so should check for comments\n\t\t\tcursor-commentLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === comment[ commentLastIndex ] &&      // we have a potential match\n\t\t\tparser._scan( comment, commentLastIndex )  // we found a match\n\t\t) {\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a skip sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Skip sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                 // user specified a skip character sequence, so should check for a skipped line\n\t\t\tcursor-skipLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === skip[ skipLastIndex ] &&         // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )     // we found a match\n\t\t) {\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Field separators, row separators, and escaped sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the escape sequence which led to the current state. Once this happens, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= max ) {\n\t\t\tdebug( 'Normal character sequence.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_field' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\nvar SKIPPED_ESCAPE = state2enum[ 'skipped_escape' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a field within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor - parser._cidx + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tparser._push( ch );\n\t\t\tif ( quoting ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tparser._push( ch );\n\t\t\tif ( quoting && parser._isWhitespace( parser._cidx, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_invalid_quote_end' );\n\n// Possible transition states...\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar INIT = state2enum[ 'init' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing field characters after an ending quote sequence within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar delimiter;\n\tvar newline;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_quote_end' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_INVALID_QUOTE_END = state2enum[ 'skipped_invalid_quote_end' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an ending quote sequence within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar delimiter;\n\tvar newline;\n\tvar quote;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), quoteLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `doublequote` is `true`, quote character sequences are escaped by a preceding quote character sequence.\n\t\t* -   When `doublequote` is `false`, quote character sequences must be explicitly escaped using an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\tdebug( 'Double quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Field separators, row separators, and escaped quote sequences must immediately follow a potential closing quote sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the quote sequence which led to the current state. Once this happens, we in an invalid state.\n\t\t*/\n\t\tif ( parser._cursor-parser._qidx >= max ) {\n\t\t\tdebug( 'Invalid closing quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_INVALID_QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_quoted_escape' );\n\n// Possible transition states...\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence within a quoted field within a skipped line.\n*\n* ## Notes\n*\n* -   Within a quoted field, an escape sequence (only) escapes the quote sequence.\n* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar quoteLastIndex;\n\tvar quote;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote sequence.\n\t\t*/\n\t\tif (\n\t\t\td === quoteLastIndex &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Quote sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in a quote sequence, meaning that a quote sequence does not immediately follow the escape sequence which led to the current state. Once this happens, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= quoteLastIndex ) {\n\t\t\t// Return to normal field processing:\n\t\t\tdebug( 'Escape sequence is not followed by a quote sequence.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_quoted_field' );\n\n// Possible transition states...\nvar SKIPPED_QUOTE_END = state2enum[ 'skipped_quote_end' ];\nvar SKIPPED_QUOTED_ESCAPE = state2enum[ 'skipped_quoted_escape' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a quoted field within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar escape;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote === false &&                // double quoting is disabled\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an ending quote character sequence.\n\t\t*/\n\t\tif (\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enum2state from './enum2state.json';\nimport closed from './closed.js'; // eslint-disable-line stdlib/no-redeclare\nimport comment from './comment.js';\nimport error from './error.js';\nimport escape from './escape.js'; // eslint-disable-line stdlib/no-redeclare\nimport field from './field.js';\nimport init from './init.js';\nimport invalidQuoteEnd from './invalid_quote_end.js';\nimport quoteEnd from './quote_end.js';\nimport quotedEscape from './quoted_escape.js';\nimport quotedField from './quoted_field.js';\nimport skip from './skip.js';\nimport skippedComment from './skipped_comment.js';\nimport skippedEscape from './skipped_escape.js';\nimport skippedField from './skipped_field.js';\nimport skippedInvalidQuoteEnd from './skipped_invalid_quote_end.js';\nimport skippedQuoteEnd from './skipped_quote_end.js';\nimport skippedQuotedEscape from './skipped_quoted_escape.js';\nimport skippedQuotedField from './skipped_quoted_field.js';\n\n\n// VARIABLES //\n\nvar table = {\n\t'closed': closed,\n\t'comment': comment,\n\t'escape': escape,\n\t'error': error,\n\t'field': field,\n\t'init': init,\n\t'invalid_quote_end': invalidQuoteEnd,\n\t'quote_end': quoteEnd,\n\t'quoted_escape': quotedEscape,\n\t'quoted_field': quotedField,\n\t'skip': skip,\n\t'skipped_comment': skippedComment,\n\t'skipped_escape': skippedEscape,\n\t'skipped_field': skippedField,\n\t'skipped_invalid_quote_end': skippedInvalidQuoteEnd,\n\t'skipped_quote_end': skippedQuoteEnd,\n\t'skipped_quoted_escape': skippedQuotedEscape,\n\t'skipped_quoted_field': skippedQuotedField\n};\n\n\n// MAIN //\n\n/**\n* Returns an object mapping state enumeration constants to state functions.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Array<Function>} table\n*/\nfunction states( parser ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < enum2state.length; i++ ) {\n\t\tout.push( table[ enum2state[ i ] ]( parser ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default states;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this, max-len, no-underscore-dangle, max-lines */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport setReadOnly from './../../../../define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from './../../../../define-nonenumerable-read-only-accessor';\nimport Boolean from '@stdlib/boolean/ctor';\nimport format from '@stdlib/string/format';\nimport rescape from './../../../../escape-regexp-string';\nimport replace from '@stdlib/string/base/replace';\nimport defaults from './defaults.js';\nimport state2enum from './states/state2enum.js';\nimport enum2state from './states/enum2state.json';\nimport states from './states';\n\n\n// VARIABLES //\n\nvar debug = logger( 'parser' );\n\n// Parser states:\nvar CLOSED = state2enum[ 'closed' ];\nvar COMMENT = state2enum[ 'comment' ];\nvar ERROR = state2enum[ 'error' ];\nvar ESCAPE = state2enum[ 'escape' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\nvar INVALID_QUOTE_END = state2enum[ 'invalid_quote_end' ];\nvar QUOTE_END = state2enum[ 'quote_end' ];\nvar QUOTED_ESCAPE = state2enum[ 'quoted_escape' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\nvar SKIP = state2enum[ 'skip' ];\nvar SKIPPED_COMMENT = state2enum[ 'skipped_comment' ];\nvar SKIPPED_ESCAPE = state2enum[ 'skipped_escape' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_INVALID_QUOTE_END = state2enum[ 'skipped_invalid_quote_end' ];\nvar SKIPPED_QUOTE_END = state2enum[ 'skipped_quote_end' ];\nvar SKIPPED_QUOTED_ESCAPE = state2enum[ 'skipped_quoted_escape' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// FUNCTIONS //\n\n/**\n* Returns a regular expression pattern which matches a list of strings.\n*\n* @private\n* @param {StringArray} list - list of strings to match\n* @returns {string} regular expression pattern\n*/\nfunction array2pattern( list ) {\n\tvar pattern;\n\tvar i;\n\n\tpattern = '(?:';\n\tfor ( i = 0; i < list.length-1; i++ ) {\n\t\tpattern += rescape( list[ i ] ) + '|';\n\t}\n\treturn pattern + rescape( list[ i ] ) + ')';\n}\n\n\n// MAIN //\n\n/**\n* Returns an incremental parser for delimiter-separated values.\n*\n* @constructor\n* @param {Options} options - options object\n* @returns {Parser} parser instance\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*\n* // ...\n*\n* parser.close();\n*\n* // ...\n*\n* var bool = parser.done;\n* // returns true\n*/\nfunction Parser( options ) {\n\tvar opts;\n\n\tif ( !( this instanceof Parser ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new Parser( options );\n\t\t}\n\t\treturn new Parser();\n\t}\n\t// TODO: option validation; enforce quote, comment, skip, delimiter, escape, and newline all being different and none can be a substring of the other (i.e., no escape equal to `,,` and delimiter equal to `,`, and no delimiter equal to `,` and newline being `,,` and vice versa; is `,,` an escape or simply an empty field?); should probably require that \"whitespace\" does not conflict with any of the special character sequences; require at least one whitespace character\n\toptions = options || {};\n\topts = defaults();\n\n\t// Buffer for tracking internal state:\n\tthis._buffer = [];\n\n\t// Index of the most recently processed character:\n\tthis._cursor = -1;\n\n\t// Index marking the beginning of the current field:\n\tthis._cidx = 0;\n\n\t// Indices marking the most recent unescaped quote sequence:\n\tthis._qidx = -1;\n\n\t// Indices marking the most recent escape sequence:\n\tthis._eidx = -1;\n\n\t// Buffer for storing the field values for the current row:\n\tthis._rowBufferFLG = Boolean( options.rowBuffer );\n\tthis._rowBuffer = options.rowBuffer || opts.rowBuffer;\n\n\t// Column, row, and line counters:\n\tthis._col = 0;\n\tthis._row = 0;\n\tthis._line = 0;\n\n\t// Initialize flags indicating whether we're processing a commented/skipped line:\n\tthis._commented = false;\n\tthis._skipped = false;\n\n\t// Initialize the error state:\n\tthis._errname = '';\n\n\t// Extract various options:\n\tthis._comment = options.comment || opts.comment;\n\tthis._delimiter = options.delimiter || opts.delimiter;\n\tthis._doublequote = ( options.doublequote === void 0 ) ? opts.doublequote : options.doublequote;\n\tthis._escape = options.escape || opts.escape;\n\tthis._ltrim = ( options.ltrim === void 0 ) ? opts.ltrim : options.ltrim;\n\tthis._maxRows = ( options.maxRows === void 0 ) ? opts.maxRows : options.maxRows;\n\tthis._newline = options.newline || opts.newline;\n\tthis._quote = options.quote || opts.quote;\n\tthis._quoting = ( options.quoting === void 0 ) ? opts.quoting : options.quoting;\n\tthis._rtrim = ( options.rtrim === void 0 ) ? opts.rtrim : options.rtrim;\n\tthis._skip = options.skip || opts.skip;\n\tthis._skipBlankRows = ( options.skipBlankRows === void 0 ) ? opts.skipBlankRows : options.skipBlankRows;\n\tthis._skipRow = options.skipRow || opts.skipRow;\n\tthis._strict = ( options.strict === void 0 ) ? opts.strict : options.strict;\n\tthis._trimComment = ( options.trimComment === void 0 ) ? opts.trimComment : options.trimComment;\n\tthis._whitespace = array2pattern( options.whitespace || opts.whitespace );\n\n\tthis._reWhitespace = new RegExp( '^'+this._whitespace+'*([\\\\S\\\\s]*?)'+this._whitespace+'*$' );\n\tthis._reWhitespaceLeft = new RegExp( '^'+this._whitespace+'*' );\n\tthis._reWhitespaceRight = new RegExp( this._whitespace+'*$' );\n\n\tthis._onClose = options.onClose || opts.onClose;\n\tthis._onColumn = options.onColumn || opts.onColumn;\n\tthis._onComment = options.onComment || opts.onComment;\n\tthis._onRow = options.onRow || opts.onRow;\n\tthis._onSkip = options.onSkip || opts.onSkip;\n\n\tthis._onError = options.onError || opts.onError;\n\tthis._onWarn = options.onWarn || opts.onWarn;\n\n\tthis._commentLength = this._comment.length;\n\tthis._commentLastIndex = this._commentLength - 1;\n\n\tthis._delimiterLength = this._delimiter.length;\n\tthis._delimiterLastIndex = this._delimiterLength - 1;\n\n\tthis._escapeLength = this._escape.length;\n\tthis._escapeLastIndex = this._escapeLength - 1;\n\n\tthis._newlineLength = this._newline.length;\n\tthis._newlineLastIndex = this._newlineLength - 1;\n\n\tthis._quoteLength = this._quote.length;\n\tthis._quoteLastIndex = this._quoteLength - 1;\n\n\tthis._skipLength = this._skip.length;\n\tthis._skipLastIndex = this._skipLength - 1;\n\n\t// Initialize the state flag:\n\tif ( this._skipRow && this._skipRow( 0, 0 ) ) {\n\t\tthis._state = SKIP;\n\t\tthis._skipped = true;\n\t} else {\n\t\tthis._state = INIT;\n\t}\n\t// Initialize state processors...\n\tthis._states = states( this ); // NOTE: this should come after all other initialization!\n\n\treturn this;\n}\n\n/**\n* Updates state by adding a processed character to an internal buffer.\n*\n* @private\n* @name _push\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} ch - character\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_push', function push( ch ) {\n\tvar buf = this._buffer;\n\n\t// Increment the internal buffer pointer:\n\tthis._cursor += 1;\n\n\t// Only expand the internal buffer if we've run out of previously allocated memory...\n\tif ( this._cursor >= buf.length ) {\n\t\tbuf.push( ch );\n\t\tdebug( 'Internal buffer size increased. Length: %d.', buf.length );\n\t} else {\n\t\t// Reuse existing memory:\n\t\tbuf[ this._cursor ] = ch;\n\t}\n\tdebug( 'Cursor: %d. Push: %s', this._cursor, ch );\n\treturn this;\n});\n\n/**\n* Rewinds the internal buffer cursor by a specified amount.\n*\n* @private\n* @name _rewind\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} N - number of elements to rewind\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_rewind', function rewind( N ) {\n\tthis._cursor -= N;\n\n\tdebug( 'Rewind: %d. Cursor: %d.', N, this._cursor );\n\treturn this;\n});\n\n/**\n* Copies a sequence of internal buffer elements to an earlier position in the buffer.\n*\n* @private\n* @name _copyWithin\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} target - starting position to which to copy elements\n* @param {NonNegativeInteger} start - staring index of the elements to copy (inclusive)\n* @param {NonNegativeInteger} N - number of elements to copy\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_copyWithin', function copyWithin( target, start, N ) {\n\tvar buf;\n\tvar i;\n\n\tbuf = this._buffer;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tbuf[ target+i ] = buf[ start+i ];\n\t}\n\treturn this;\n});\n\n/**\n* Returns the contents of a buffer slice.\n*\n* @private\n* @name _slice\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} start - starting character index (inclusive)\n* @param {NonNegativeInteger} end - ending character index (inclusive)\n* @returns {string} buffer contents\n*/\nsetReadOnly( Parser.prototype, '_slice', function slice( start, end ) {\n\treturn this._buffer.slice( start, end+1 ).join( '' );\n});\n\n/**\n* Checks whether the contents of a buffer slice consists of only whitespace.\n*\n* @private\n* @name _isWhitespace\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} start - starting character index (inclusive)\n* @param {NonNegativeInteger} end - ending character index (inclusive)\n* @returns {boolean} boolean indicating whether a buffer slice consists of only whitespace\n*/\nsetReadOnly( Parser.prototype, '_isWhitespace', function isWhitespace( start, end ) {\n\treturn ( replace( this._slice( start, end ), this._reWhitespaceLeft, '' ) === '' );\n});\n\n/**\n* Resets the parser.\n*\n* @private\n* @name _reset\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_reset', function reset() {\n\t// Reset counters and indices:\n\tthis._col = 0;\n\tthis._cidx = 0;\n\tthis._qidx = -1;\n\tthis._eidx = -1;\n\n\t// Reset the parser state...\n\tif ( this._skipRow && this._skipRow( this._row, this._line ) ) {\n\t\tthis._state = SKIP;\n\t\tthis._skipped = true;\n\t} else {\n\t\tthis._state = INIT;\n\t\tthis._skipped = false;\n\t}\n\tthis._commented = false;\n\n\t// Reset the buffer:\n\tthis._cursor = -1;\n\n\tdebug( 'Parser reset.' );\n\treturn this;\n});\n\n/**\n* Sets a field value in an internal row buffer.\n*\n* @private\n* @name _set\n* @memberof Parser.prototype\n* @type {Function}\n* @param {*} value - field value\n* @param {NonNegativeInteger} idx - field index\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_setField', function set( value, idx ) {\n\tvar buf = this._rowBuffer;\n\n\t// FIXME: as buffer may be provided from userland, use `set` accessor and consider using `@stdlib/utils/push` to allow support of dynamically resizing fixed length buffers\n\n\t// Only expand the row buffer if we've run out of previously allocated memory...\n\tif ( idx >= buf.length ) {\n\t\tbuf.push( value );\n\t\tdebug( 'Row buffer size increased. Length: %d.', buf.length );\n\t} else {\n\t\t// Reuse existing memory:\n\t\tbuf[ idx ] = value;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a field value.\n*\n* @private\n* @name _getField\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} start - starting character index (inclusive)\n* @param {NonNegativeInteger} end - ending character index (inclusive)\n* @returns {string} field value\n*/\nsetReadOnly( Parser.prototype, '_getField', function get( start, end ) {\n\tvar v = this._slice( start, end );\n\tif ( this._ltrim ) {\n\t\tif ( this._rtrim ) {\n\t\t\treturn replace( v, this._reWhitespace, '$1' );\n\t\t}\n\t\treturn replace( v, this._reWhitespaceLeft, '' );\n\t}\n\tif ( this._rtrim ) {\n\t\treturn replace( v, this._reWhitespaceRight, '' );\n\t}\n\treturn v;\n});\n\n/**\n* Returns the current row of values.\n*\n* @private\n* @name _getRow\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {ArrayLikeObject} row of values\n*/\nsetReadOnly( Parser.prototype, '_getRow', function get() {\n\tif ( this._rowBufferFLG ) {\n\t\treturn this._rowBuffer;\n\t}\n\t// Return a shallow copy to avoid mutating internal state:\n\treturn this._rowBuffer.slice( 0, this._col );\n});\n\n/**\n* Scans the internal buffer for a specified character sequence.\n*\n* ## Notes\n*\n* -   Given an internal buffer\n*\n*     ```text\n*     | ... | a | b |\n*     ```\n*\n*     search character sequence\n*\n*     ```text\n*     | a | b | c |\n*     ```\n*\n*     and `N` equal to `2`, the method will begin scanning from the position of `a` in the internal buffer above and compare to each element of the first `N` characters of the search character sequence.\n*\n*     This method is intended to be used in scenarios where we already know that an incoming character matches the last character of the search sequence, and we want to know whether the rest of the search sequence matches the most recently added elements in the internal buffer.\n*\n* @private\n* @name _scan\n* @memberof Parser.prototype\n* @type {Function}\n* @param {StringArray} search - character sequence\n* @param {NonNegativeInteger} N - number of characters to search\n* @returns {boolean} boolean indicating whether a match was found\n*/\nsetReadOnly( Parser.prototype, '_scan', function scan( search, N ) {\n\tvar buf;\n\tvar idx;\n\tvar i;\n\n\tbuf = this._buffer;\n\tidx = this._cursor - N + 1;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( buf[ idx+i ] !== search[ i ] ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ( i === N );\n});\n\n/**\n* Processes a field.\n*\n* @private\n* @name _onField\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onField', function onField() {\n\t// Extract the field value:\n\tvar v = this._getField( this._cidx, this._cursor );\n\n\t// Insert the field value into the row buffer:\n\tthis._setField( v, this._col );\n\n\t// Invoke a callback for receiving field values:\n\tthis._onColumn( v, this._row, this._col, this._line );\n\tdebug( 'Field. Line: %d. Row: %d. Column: %d. Value: %s', this._line, this._row, this._col, v );\n\n\t// Increment the field counter to record that we've moved on to the next field:\n\tthis._col += 1;\n\n\t// Increment the index marking the beginning of the next field:\n\tthis._cidx = this._cursor + 1; // +1 as the cursor currently points to the last character in the current field, and, thus, the next field should start at the next index\n\n\t// Reset indices:\n\tthis._qidx = -1;\n\tthis._eidx = -1;\n\n\treturn this;\n});\n\n/**\n* Processes a record.\n*\n* @private\n* @name _onRecord\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onRecord', function onRecord() {\n\tvar v;\n\n\t// Extract the field value:\n\tv = this._getField( this._cidx, this._cursor );\n\n\t// Check for a blank row (i.e., a row consisting only of whitespace):\n\tif ( this._skipBlankRows && this._col === 0 ) {\n\t\tif ( v === '' || replace( v, this._reWhitespaceLeft, '' ) === '' ) {\n\t\t\treturn this._onSkippedRow();\n\t\t}\n\t}\n\t// Insert the field value into the row buffer:\n\tthis._setField( v, this._col );\n\n\t// Invoke a callback for receiving field values:\n\tthis._onColumn( v, this._row, this._col, this._line );\n\tthis._col += 1;\n\n\t// Invoke a callback for receiving rows:\n\tthis._onRow( this._getRow(), this._row, this._col, this._line );\n\tdebug( 'Record. Line: %d. Fields: %d.', this._line, this._col );\n\n\t// Increment row and line counters to indicate that we've moved on to the next row/line:\n\tthis._row += 1;\n\tthis._line += 1;\n\n\t// Reset the parser:\n\tthis._reset();\n\n\t// Check whether we have processed a desired number of rows...\n\tif ( this._row >= this._maxRows ) {\n\t\tthis._changeState( CLOSED );\n\t}\n\treturn this;\n});\n\n/**\n* Processes a commented row.\n*\n* @private\n* @name _onCommentedRow\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onCommentedRow', function onCommentedRow() {\n\tvar v;\n\n\t// Invoke a callback for receiving commented lines:\n\tif ( this._onComment ) {\n\t\tv = this._slice( 0, this._cursor );\n\t\tif ( this._trimComment ) {\n\t\t\tv = replace( v, this._reWhitespaceLeft, '' );\n\t\t}\n\t\tthis._onComment( v, this._line );\n\t\tdebug( 'Comment. Line: %d. Value: %s', this._line, v );\n\t} else {\n\t\tdebug( 'Comment. Line: %d.', this._line );\n\t}\n\t// Increment the counter for how many lines have been processed:\n\tthis._line += 1;\n\n\t// Reset the parser:\n\tthis._reset();\n\n\treturn this;\n});\n\n/**\n* Processes a skipped row.\n*\n* @private\n* @name _onSkippedRow\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onSkippedRow', function onSkippedRow() {\n\tvar v;\n\n\t// Invoke a callback for receiving skipped lines:\n\tif ( this._onSkip ) {\n\t\tv = this._slice( 0, this._cursor );\n\t\tthis._onSkip( v, this._line );\n\t\tdebug( 'Skipped row. Line: %d. Value: %s', this._line, v );\n\t} else {\n\t\tdebug( 'Skipped row. Line: %d.', this._line );\n\t}\n\t// Increment the counter for how many lines have been processed:\n\tthis._line += 1;\n\n\t// Reset the parser:\n\tthis._reset();\n\n\treturn this;\n});\n\n/**\n* Processes a closing quote sequence.\n*\n* @private\n* @name _onClosingQuote\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onClosingQuote', function onClosingQuote() {\n\t// Cache the cursor position marking the end of the closing quote sequence:\n\tthis._qidx = this._cursor;\n\treturn this;\n});\n\n/**\n* Processes an escape sequence.\n*\n* @private\n* @name _onEscape\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onEscape', function onEscape() {\n\t// Cache the cursor position marking the end of the escape sequence:\n\tthis._eidx = this._cursor;\n\treturn this;\n});\n\n/**\n* Creates a parser exception.\n*\n* @private\n* @name _createException\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} name - exception name\n* @returns {Error} parser exception\n*/\nsetReadOnly( Parser.prototype, '_createException', function createException( name ) {\n\tvar err;\n\n\tswitch ( name ) {\n\tcase 'INVALID_CLOSING_QUOTE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains a closing quote which is not immediately followed by a delimiter or newline.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'INVALID_OPENING_QUOTE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains an opening quote which does not immediately follow a delimiter or newline.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'INVALID_ESCAPE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains an escape sequence which is not immediately followed by a special character sequence.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'INVALID_QUOTED_ESCAPE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains an escape sequence within a quoted field which is not immediately followed by a quote sequence.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'CLOSED':\n\t\terr = new Error( 'invalid operation. Parser is unable to parse new chunks, as the parser has been closed. To parse new chunks, create a new parser instance.' );\n\t\tbreak;\n\tdefault:\n\t\terr = new Error( 'invalid operation. Parser is in an unrecoverable error state. To parse new chunks, create a new parser instance.' );\n\t\tbreak;\n\t}\n\treturn err;\n});\n\n/**\n* Raises a parser warning.\n*\n* @private\n* @name _raiseWarning\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} name - exception name\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_raiseWarning', function raiseWarning( name ) {\n\tvar err;\n\n\tif ( this._onWarn ) {\n\t\terr = this._createException( name );\n\n\t\tdebug( 'Warning: %s', err.message );\n\t\tthis._onWarn( err );\n\t}\n\treturn this;\n});\n\n/**\n* Raises a parser exception.\n*\n* @private\n* @name _raiseException\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_raiseException', function raiseException() {\n\tvar err = this._createException( this._errname );\n\n\tdebug( 'Error: %s', err.message );\n\tthis._onError( err );\n\n\treturn this;\n});\n\n/**\n* Updates the parser state.\n*\n* @private\n* @name _changeState\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} state - state enumeration constant\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_changeState', function changeState( state ) {\n\tdebug( 'State transition: %s -> %s.', enum2state[ this._state ], enum2state[ state ] );\n\n\tswitch ( state ) { // eslint-disable-line default-case\n\tcase CLOSED:\n\t\tthis._close();\n\t\tbreak;\n\tcase COMMENT:\n\t\tthis._commented = true;\n\t\tbreak;\n\tcase ERROR:\n\t\tthis._raiseException();\n\t\tbreak;\n\tcase ESCAPE:\n\t\tthis._onEscape();\n\t\tbreak;\n\tcase FIELD:\n\t\tif ( this._state !== ESCAPE ) {\n\t\t\tthis._onField();\n\t\t}\n\t\tbreak;\n\tcase INIT:\n\t\tif ( this._commented ) {\n\t\t\tthis._onCommentedRow();\n\t\t} else if ( this._skipped ) {\n\t\t\tthis._onSkippedRow();\n\t\t} else {\n\t\t\tthis._onRecord();\n\t\t}\n\t\tbreak;\n\tcase INVALID_QUOTE_END:\n\t\tbreak;\n\tcase QUOTE_END:\n\t\tthis._onClosingQuote();\n\t\tbreak;\n\tcase QUOTED_ESCAPE:\n\t\tthis._onEscape();\n\t\tbreak;\n\tcase QUOTED_FIELD:\n\t\tbreak;\n\tcase SKIP:\n\t\tthis._skipped = true;\n\t\tbreak;\n\tcase SKIPPED_COMMENT:\n\tcase SKIPPED_ESCAPE:\n\tcase SKIPPED_FIELD:\n\tcase SKIPPED_INVALID_QUOTE_END:\n\tcase SKIPPED_QUOTE_END:\n\tcase SKIPPED_QUOTED_ESCAPE:\n\tcase SKIPPED_QUOTED_FIELD:\n\t\tbreak;\n\t}\n\tthis._state = state;\n\treturn this;\n});\n\n/**\n* Sets the parser's error state.\n*\n* @private\n* @name _setErrorState\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} name - error name\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_setErrorState', function setErrorState( name ) {\n\tif ( name ) {\n\t\tdebug( 'Error: %s.', name );\n\t} else {\n\t\tdebug( 'Reset error state.' );\n\t}\n\tthis._errname = name;\n\treturn this;\n});\n\n/**\n* Closes the parser.\n*\n* @private\n* @name _close\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_close', function close() {\n\tvar state;\n\tvar v;\n\n\tif ( this.done ) {\n\t\tthis._setErrorState( CLOSED )._changeState( ERROR );\n\t\treturn this;\n\t}\n\tif ( this._cursor >= 0 ) {\n\t\tstate = this._state;\n\t\tif ( state === INIT || state === FIELD || state === QUOTE_END ) {\n\t\t\t// If the current state is \"field\" or \"quote end\", we're in a valid state and can simply transition to our initial state to indicate that we've processed a record:\n\t\t\tthis._changeState( INIT )._onClose();\n\t\t} else {\n\t\t\t// Check if we were able to process part of a row...\n\t\t\tif ( this._col ) {\n\t\t\t\t// This may be an incomplete row!!!\n\t\t\t\tthis._onRow( this._getRow(), this._row, this._col );\n\t\t\t}\n\t\t\t// Extract however much of the current field we were able to process:\n\t\t\tv = this._slice( this._cidx, this._cursor );\n\n\t\t\t// Return the unfinished field to the client (although this may not be equal to the original character sequence, as escape sequences may have already been stripped!):\n\t\t\tdebug( 'Flush: %s', v );\n\t\t\tthis._onClose( v );\n\t\t}\n\t} else {\n\t\tthis._onClose();\n\t}\n\tdebug( 'Closed.' );\n\treturn this;\n});\n\n/**\n* Parses the next chunk.\n*\n* @name next\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} chunk - chunk\n* @throws {Error} unable to parse new chunks\n* @throws {Error} invalid field\n* @throws {Error} invalid record\n* @returns {Parser} parser instance\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*/\nsetReadOnly( Parser.prototype, 'next', function next( chunk ) {\n\tvar states;\n\tvar i;\n\n\tdebug( 'Chunk: %s', chunk );\n\n\tif ( this.done ) {\n\t\tthis._setErrorState( CLOSED )._changeState( ERROR );\n\t\treturn this;\n\t}\n\tstates = this._states;\n\tfor ( i = 0; i < chunk.length; i++ ) {\n\t\tstates[ this._state ]( chunk[ i ] );\n\t\tif ( this._state === CLOSED || this._state === ERROR ) {\n\t\t\treturn this;\n\t\t}\n\t}\n\treturn this;\n});\n\n/**\n* Closes the parser.\n*\n* @name close\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*\n* // ...\n*\n* parser.close();\n*/\nsetReadOnly( Parser.prototype, 'close', function close() {\n\tif ( this.done ) {\n\t\treturn this;\n\t}\n\tthis._changeState( CLOSED );\n\treturn this;\n});\n\n/**\n* Boolean indicating whether a parser is able to process new chunks.\n*\n* @name done\n* @memberof Parser.prototype\n* @readonly\n* @type {boolean}\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*\n* // ...\n*\n* parser.close();\n*\n* // ...\n*\n* var bool = parser.done;\n* // returns true\n*/\nsetReadOnlyAccessor( Parser.prototype, 'done', function get() {\n\treturn ( this._state === CLOSED ) || ( this._state === ERROR );\n});\n\n\n// EXPORTS //\n\nexport default Parser;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name parse\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/utils/dsv/base/parse}\n*/\nimport parse from './../../../dsv/base/parse';\nsetReadOnly( ns, 'parse', parse );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name base\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/utils/dsv/base}\n*/\nimport base from './../../dsv/base';\nsetReadOnly( ns, 'base', base );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property `[key, value]` pairs.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} array containing key-value pairs\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 'bar'\n* };\n*\n* var entries = objectEntries( obj );\n* // e.g., returns [ ['beep', 'boop'], ['foo', 'bar'] ]\n*/\nfunction objectEntries( obj ) {\n\tvar keys;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( [ keys[i], obj[ keys[i] ] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property `[key, value]` pairs.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} array containing key-value pairs\n*\n* @example\n* function Foo() {\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var entries = objectEntriesIn( obj );\n* // e.g., returns [ ['beep', 'boop'], ['foo', 'bar'] ]\n*/\nfunction objectEntriesIn( obj ) {\n\tvar key;\n\tvar out;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tout = [];\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tout.push( [ key, obj[ key ] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectEntriesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertySymbols !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\n\n\n// VARIABLES //\n\nvar propertySymbols = Object.getOwnPropertySymbols;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own symbol properties\n*\n* @example\n* var symbols = getOwnPropertySymbols( {} );\n*/\nfunction getOwnPropertySymbols( value ) {\n\treturn propertySymbols( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own symbol properties.\n*\n* @module @stdlib/utils/property-symbols\n*\n* @example\n* import getOwnPropertySymbols from '@stdlib/utils/property-symbols';\n*\n* var symbols = getOwnPropertySymbols( {} );\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {EmptyArray} a list of own symbol properties\n*\n* @example\n* var symbols = getOwnPropertySymbols( {} );\n* // returns []\n*/\nfunction getOwnPropertySymbols() {\n\treturn [];\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './../../keys';\nimport propertySymbols from './../../property-symbols';\nimport isEnumerable from '@stdlib/assert/is-enumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property enumerable names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = enumerableProperties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction enumerableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tout = keys( value );\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isEnumerable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default enumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isEnumerable from '@stdlib/assert/is-enumerable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited enumerable property names and symbols\n*\n* @example\n* var props = enumerablePropertiesIn( [] );\n* // returns []\n*/\nfunction enumerablePropertiesIn( value ) {\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting enumerable properties...\n\tcache = {};\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a name more than once\n\t\t\t\tisEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default enumerablePropertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable symbol properties\n*\n* @example\n* var symbols = enumerablePropertySymbols( {} );\n*/\nfunction enumerablePropertySymbols( value ) {\n\tvar symbols;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tsymbols = getOwnPropertySymbols( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tif ( isEnumerableProperty( value, symbols[ i ] ) ) {\n\t\t\tsymbols[ n ] = symbols[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tsymbols.length = n;\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default enumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited enumerable symbol properties\n*\n* @example\n* var symbols = enumerablePropertySymbolsIn( {} );\n*/\nfunction enumerablePropertySymbolsIn( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting enumerable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default enumerablePropertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Alias for `eval` global.\n*\n* @module @stdlib/utils/eval\n*\n* @example\n* import evil from '@stdlib/utils/eval';\n*\n* var v = evil( '5*4*3*2*1' );\n* // returns 120\n*/\n\n// MODULES //\n\nvar evil = eval; // eslint-disable-line no-eval\n\n\n// EXPORTS //\n\nexport default evil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport base from '@stdlib/array/base/every';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection are truthy.\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} must provide a collection\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var arr = [ 1, 1, 1, 1, 1 ];\n*\n* var bool = every( arr );\n* // returns true\n*/\nfunction every( collection ) {\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a collection. Value: `%s`.', collection ) );\n\t}\n\treturn base( collection );\n}\n\n\n// EXPORTS //\n\nexport default every;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var bool = everyBy( arr, isPositive );\n* // returns true\n*/\nfunction everyBy( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( !out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default everyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `every` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `every()`, `[].push()` behavior is consistent with `everyByRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var bool = everyByRight( arr, isPositive );\n* // returns true\n*/\nfunction everyByRight( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( !out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default everyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { REGEXP as RE_EXTNAME } from '@stdlib/regexp/extname';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a filename extension.\n*\n* @param {string} filename - filename\n* @throws {TypeError} must provide a string primitive\n* @returns {string} filename extension\n*\n* @example\n* var ext = extname( 'index.js' );\n* // returns '.js'\n*/\nfunction extname( filename ) {\n\tif ( !isString( filename ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Filename must be a string. Value: `%s`.', filename ) );\n\t}\n\treturn RE_EXTNAME.exec( filename )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default extname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function according to a predicate function.\n*\n* ## Notes\n*\n-   The predicate function is provided the following arguments:\n*\n*     -   **value**: argument value.\n*     -   **index**: argument index.\n*\n* -   Only those arguments in which the predicate function returns a truthy value are applied to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} wrapped function\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* function predicate( v ) {\n*     return ( v !== 2 );\n* }\n*\n* var bar = filterArguments( foo, predicate );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction filterArguments( fcn, predicate, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\treturn wrap;\n\n\t/**\n\t* Invokes a function according to a predicate function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction wrap() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( predicate( v, i ) ) {\n\t\t\t\targs.push( v );\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default filterArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isCollection from '@stdlib/assert/is-collection';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar RETURNS = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Finds elements in an array-like object that satisfy a test condition.\n*\n* @param {(Collection|string)} arr - object from which elements will be tested\n* @param {Options} [options] - function options\n* @param {integer} [options.k=arr.length] - limits the number of returned elements\n* @param {string} [options.returns='indices'] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} clbk - function invoked for each array element. If the return value is truthy, the value is considered to have satisfied the test condition.\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} `options.k` must be an integer\n* @throws {TypeError} `options.returns` must be a string equal to `values`, `indices` or `*`\n* @returns {Array} array of indices, element values, or arrays of index-value pairs\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var vals = find( data, condition );\n* // returns [ 0, 2, 3 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': 2,\n*     'returns': 'values'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ 30, 50 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var vals = find( data, condition );\n* // returns []\n*\n* function condition( val ) {\n*     return val > 1000;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': -2,\n*     'returns': 'values'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ 60, 50 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': -2,\n*     'returns': '*'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ [3, 60], [2, 50] ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*/\nfunction find( arr, options, clbk ) { // eslint-disable-line stdlib/no-redeclare\n\tvar count;\n\tvar mode;\n\tvar opts;\n\tvar len;\n\tvar out;\n\tvar ret;\n\tvar cb;\n\tvar i;\n\tvar k;\n\tvar v;\n\n\tmode = 0;\n\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( arguments.length < 3 ) {\n\t\topts = {};\n\t\tcb = options;\n\t} else {\n\t\topts = options;\n\t\tcb = clbk;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( !isObject( opts ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t}\n\tif ( hasOwnProp( opts, 'k' ) ) {\n\t\tk = opts.k;\n\t\tif ( !isInteger( k ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'k', k ) );\n\t\t}\n\t} else {\n\t\tk = len;\n\t}\n\tif ( hasOwnProp( opts, 'returns' ) ) {\n\t\tret = opts.returns;\n\t\tif ( !isString( ret ) || indexOf( RETURNS, ret ) === -1 ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', RETURNS.join( '\", \"' ), ret ) );\n\t\t}\n\t\tif ( ret === 'values' ) {\n\t\t\tmode = 1;\n\t\t} else if ( ret === '*' ) {\n\t\t\tmode = 2;\n\t\t}\n\t}\n\tout = [];\n\tcount = 0;\n\n\tif ( k === 0 ) {\n\t\treturn out;\n\t}\n\tif ( k > 0 ) {\n\t\t// Search moving from begin-to-end [0,1,...]:\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = arr[ i ];\n\t\t\tif ( cb( v, i, arr ) ) { // eslint-disable-line node/callback-return\n\t\t\t\tif ( mode === 2 ) {\n\t\t\t\t\tout.push( [ i, v ] );\n\t\t\t\t} else if ( mode === 1 ) {\n\t\t\t\t\tout.push( v );\n\t\t\t\t} else {\n\t\t\t\t\tout.push( i );\n\t\t\t\t}\n\t\t\t\tcount += 1;\n\t\t\t\tif ( count === k ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// Search moving from end-to-begin [...,2,1,0]:\n\tk = -k;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tv = arr[ i ];\n\t\tif ( cb( v, i, arr ) ) { // eslint-disable-line node/callback-return\n\t\t\tif ( mode === 2 ) {\n\t\t\t\tout.push( [ i, v ] );\n\t\t\t} else if ( mode === 1 ) {\n\t\t\t\tout.push( v );\n\t\t\t} else {\n\t\t\t\tout.push( i );\n\t\t\t}\n\t\t\tcount += 1;\n\t\t\tif ( count === k ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default find;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_MAX from '@stdlib/constants/float64/max';\n\n\n// MAIN //\n\nvar defaults = {\n\t'copy': false,\n\t'depth': FLOAT64_MAX\n};\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\n\n\n// MAIN //\n\n/**\n* Recursively flattens an array.\n*\n* @private\n* @param {Array} out - output array\n* @param {ArrayLikeObject} arr - input array\n* @param {NonNegativeInteger} depth - recursion depth\n* @returns {Array} output array\n*/\nfunction recurse( out, arr, depth ) {\n\tvar v;\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( depth && isArrayLikeObject( v ) ) {\n\t\t\trecurse( out, v, depth-1 );\n\t\t} else {\n\t\t\tout.push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default recurse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from './../../copy';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport recurse from './recurse.js';\n\n\n// MAIN //\n\n/**\n* Flattens an array.\n*\n* @param {ArrayLikeObject} arr - input array\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy array elements\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} flattened array\n*\n* @example\n* var arr = [ 1, [2, [3, [4, [ 5 ], 6], 7], 8], 9 ];\n*\n* var out = flattenArray( arr );\n* // returns [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n*/\nfunction flattenArray( arr, options ) {\n\tvar opts;\n\tvar err;\n\tvar out;\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\topts = {\n\t\t'copy': defaults.copy,\n\t\t'depth': defaults.depth\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.depth === 0 ) {\n\t\tout = arr;\n\t} else {\n\t\tout = recurse( [], arr, opts.depth );\n\t}\n\tif ( opts.copy ) {\n\t\treturn copy( out );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flattenArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - depth to flatten\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy array elements\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'depth': 10,\n*     'copy': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'depth' ) ) {\n\t\topts.depth = options.depth;\n\t\tif ( !isNonNegativeInteger( opts.depth ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'depth', opts.depth ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_MAX from '@stdlib/constants/float64/max';\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'delimiter': '.',\n\t\t'depth': FLOAT64_MAX,\n\t\t'copy': false\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - depth to flatten\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter] - key path delimiter\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'depth': 10,\n*     'copy': false,\n*     'delimiter': '|',\n*     'flattenArrays': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'depth' ) ) {\n\t\topts.depth = options.depth;\n\t\tif ( !isNonNegativeInteger( opts.depth ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'depth', opts.depth ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'flattenArrays' ) ) {\n\t\topts.flattenArrays = options.flattenArrays;\n\t\tif ( !isBoolean( opts.flattenArrays ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'flattenArrays', opts.flattenArrays ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'delimiter' ) ) {\n\t\topts.delimiter = options.delimiter;\n\t\tif ( !isString( opts.delimiter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'delimiter', opts.delimiter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isPlainObject from '@stdlib/assert/is-plain-object';\nimport isArray from '@stdlib/assert/is-array';\n\n\n// MAIN //\n\n/**\n* Recursively flattens an object.\n*\n* @private\n* @param {Object} out - output object\n* @param {ObjectLike} obj - input object\n* @param {string} prefix - key prefix\n* @param {NonNegativeInteger} depth - recursion depth\n* @param {Options} opts - options\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} output object\n*/\nfunction recurse( out, obj, prefix, depth, opts ) {\n\tvar keys;\n\tvar val;\n\tvar key;\n\tvar i;\n\tif ( prefix ) {\n\t\tprefix += opts.delimiter;\n\t}\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tval = obj[ keys[i] ];\n\t\tkey = prefix + keys[ i ];\n\t\tif ( depth ) {\n\t\t\tif (\n\t\t\t\t(isPlainObject( val ) && objectKeys( val ).length) ||\n\t\t\t\t(opts.flattenArrays && isArray( val ))\n\t\t\t) {\n\t\t\t\trecurse( out, val, key, depth-1, opts );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tout[ key ] = val;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default recurse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from './../../copy';\nimport recurse from './recurse.js';\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @private\n* @param {ObjectLike} obj - object to flatten\n* @param {Object} opts - options\n* @param {NonNegativeInteger} opts.depth - maximum depth to flatten\n* @param {boolean} opts.copy - boolean indicating whether to deep copy\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} flattened object\n*/\nfunction flatten( obj, opts ) {\n\tvar out;\n\tif ( opts.depth === 0 ) {\n\t\tout = obj;\n\t} else {\n\t\tout = recurse( {}, obj, '', opts.depth, opts );\n\t}\n\tif ( opts.copy ) {\n\t\treturn copy( out );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport flatten from './flatten.js';\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @param {ObjectLike} obj - object to flatten\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {ObjectLike} flattened object\n*\n* @example\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*/\nfunction flattenObject( obj, options ) {\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\treturn flatten( obj, opts );\n}\n\n\n// EXPORTS //\n\nexport default flattenObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* forEach( arr, log );\n*/\nfunction forEach( collection, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default forEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `forEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `forEach()`, `[].push()` behavior is consistent with `forEachRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* forEachRight( arr, log );\n*/\nfunction forEachRight( collection, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default forEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own and inherited enumerable property of an object.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n*\n* @param {Object} obj - input object\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} obj - input object\n*\n* @example\n* function log( v, key ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* function Foo() {\n*     this.a = 1;\n*     this.b = 2;\n*     return this;\n* }\n*\n* Foo.prototype.c = 3;\n* Foo.prototype.d = 4;\n*\n* var obj = new Foo();\n*\n* forIn( obj, log );\n*/\nfunction forIn( obj, fcn, thisArg ) {\n\tvar bool;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tbool = fcn.call( thisArg, obj[ key ], key, obj );\n\t\tif ( bool === false ) {\n\t\t\treturn obj;\n\t\t}\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default forIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own enumerable property of an object.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n*\n* @param {Object} obj - input object\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} obj - input object\n*\n* @example\n* function log( v, key ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3,\n*     'd': 4\n* };\n*\n* forOwn( obj, log );\n*/\nfunction forOwn( obj, fcn, thisArg ) {\n\tvar keys;\n\tvar bool;\n\tvar len;\n\tvar k;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tk = keys[ i ];\n\t\tbool = fcn.call( thisArg, obj[ k ], k, obj );\n\t\tif ( bool === false ) {\n\t\t\treturn obj;\n\t\t}\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default forOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayArray from '@stdlib/assert/is-array-array';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Creates an object from an array of key-value pairs.\n*\n* @param {ArrayArray} entries - input object\n* @throws {TypeError} must provide an array of arrays\n* @returns {Object} object created from `[key, value]` pairs\n*\n* @example\n* var entries = [ ['beep', 'boop'], ['foo', 'bar'] ];\n*\n* var obj = objectFromEntries( entries );\n* // returns {'beep': 'boop', 'foo': 'bar'}\n*/\nfunction objectFromEntries( entries ) {\n\tvar out;\n\tvar i;\n\tif ( !isArrayArray( entries ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array of arrays. Value: `%s`.', entries ) );\n\t}\n\tout = {};\n\tfor ( i = 0; i < entries.length; i++ ) {\n\t\tout[ entries[i][0] ] = entries[ i ][ 1 ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectFromEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an array.\n*\n* @module @stdlib/utils/flatten-array\n*\n* @example\n* import flattenArray from '@stdlib/utils/flatten-array';\n*\n* var arr = [ 1, [2, [3, [4, [ 5 ], 6], 7], 8], 9 ];\n*\n* var out = flattenArray( arr );\n* // returns [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n*\n* @example\n* import flattenArray from '@stdlib/utils/flatten-array';\n*\n* var flatten = flattenArray.factory( [2,2], {\n*     'copy': false\n* });\n*\n* var out = flatten( [[1,2],[3,4]] );\n* // returns [ 1, 2, 3, 4 ]\n*\n* out = flatten( [[5,6],[7,8]] );\n* // returns [ 5, 6, 7, 8 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { primitives as isPositiveIntegerArray } from '@stdlib/assert/is-positive-integer-array';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport genFcn from './gen_fcn.js';\nimport wrapFlatten from './wrap_flatten.js';\nimport wrapFlattenCopy from './wrap_flatten_copy.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for flattening arrays having specified dimensions.\n*\n* @param {PositiveIntegerArray} dims - dimensions\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy array elements\n* @throws {TypeError} first argument must be an array of positive integers\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} flatten function\n*\n* @example\n* var flatten = factory( [2,2], {\n*     'copy': false\n* });\n*\n* var out = flatten( [[1,2],[3,4]] );\n* // returns [ 1, 2, 3, 4 ]\n*\n* out = flatten( [[5,6],[7,8]] );\n* // returns [ 5, 6, 7, 8 ]\n*/\nfunction factory( dims, options ) {\n\tvar copyFLG;\n\tvar flatten;\n\tif ( !isPositiveIntegerArray( dims ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of positive integers. Value: `%s`.', dims ) );\n\t}\n\tcopyFLG = defaults.copy;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\tcopyFLG = options.copy;\n\t\t\tif ( !isBoolean( copyFLG ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', copyFLG ) );\n\t\t\t}\n\t\t}\n\t}\n\tflatten = genFcn( dims );\n\tif ( copyFLG ) {\n\t\treturn wrapFlattenCopy( flatten );\n\t}\n\treturn wrapFlatten( flatten );\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Fcn from '@stdlib/function/ctor';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array containing elements all having the same dimensions.\n*\n* @private\n* @param {PositiveIntegerArray} dims - dimensions\n* @returns {Function} flatten function\n*/\nfunction genFcn( dims ) {\n\tvar len;\n\tvar n;\n\tvar f;\n\tvar i;\n\n\t// Code generation. Start with the function definition:\n\tf = 'return function flattenArray(x){';\n\n\t// Create the function body...\n\tlen = dims.length;\n\tn = len - 1;\n\n\t// Create the variables...\n\tf += 'var o=[];var ';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += 'i' + i;\n\t\tif ( i < n ) {\n\t\t\tf += ',';\n\t\t} else {\n\t\t\tf += ';';\n\t\t}\n\t}\n\t// Create the nested for loops...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += 'for(i' + i + '=0;i' + i + '<' + dims[ i ] + ';i' + i + '++){';\n\t}\n\t// Create the code which accesses the nested array values and pushes them onto the flattened array.\n\tf += 'o.push(x';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += '[i' + i + ']';\n\t}\n\tf += ');';\n\n\t// Closing braces...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += '}';\n\t}\n\tf += 'return o;';\n\n\t// Close the function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=flatten_array.gen_fcn.js';\n\n\t// Create the function in the global scope:\n\treturn ( new Fcn( f ) )();\n\n\t/*\n\t* e.g.,\n\t*\n\t*   function flattenArray( x ) {\n\t*       var o = [];\n\t*       var i0, i1;\n\t*       for ( i0 = 0; i0 < 2; i0++ ) {\n\t*           for ( i1 = 0; i1 < 2; i1++ ) {\n\t*               o.push( x[i0][i1] );\n\t*           }\n\t*       }\n\t*       return o;\n\t*   }\n\t*/\n}\n\n\n// EXPORTS //\n\nexport default genFcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport format from '@stdlib/string/format';\nimport copy from './../../copy';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array and deep copy.\n*\n* @private\n* @param {Function} flatten - flatten function\n* @returns {Function} wrapped flatten function\n*/\nfunction wrap( flatten ) {\n\treturn flattenArray;\n\n\t/**\n\t* Flattens an array and deep copies array elements.\n\t*\n\t* @private\n\t* @param {ArrayLikeObject} arr - array to flatten\n\t* @throws {TypeError} must provide an array-like object\n\t* @returns {Array} flattened array\n\t*/\n\tfunction flattenArray( arr ) {\n\t\tif ( !isArrayLikeObject( arr ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t\t}\n\t\treturn copy( flatten( arr ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array.\n*\n* @private\n* @param {Function} flatten - flatten function\n* @returns {Function} wrapped flatten function\n*/\nfunction wrap( flatten ) {\n\treturn flattenArray;\n\n\t/**\n\t* Flattens an array.\n\t*\n\t* @private\n\t* @param {ArrayLikeObject} arr - array to flatten\n\t* @throws {TypeError} must provide an array-like object\n\t* @returns {Array} flattened array\n\t*/\n\tfunction flattenArray( arr ) {\n\t\tif ( !isArrayLikeObject( arr ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t\t}\n\t\treturn flatten( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an object.\n*\n* @module @stdlib/utils/flatten-object\n*\n* @example\n* import flattenObject from '@stdlib/utils/flatten-object';\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*\n* @example\n* import flattenObject from '@stdlib/utils/flatten-object';\n*\n* var flatten = flattenObject.factory({\n*     'depth': 1,\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flatten( obj );\n* // returns {'a|b':{'c':'d'}}\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport flatten from './flatten.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an object.\n*\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} flatten function\n*\n* @example\n* var flatten = factory({\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n* var out = flatten( obj );\n* // throws <RangeError>\n*/\nfunction factory( options ) {\n\tvar opts;\n\tvar err;\n\n\topts = defaults();\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn flattenObject;\n\n\t/**\n\t* Flattens an object.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - object to flatten\n\t* @throws {TypeError} first argument must be object-like\n\t* @returns {Object} flattened object\n\t*/\n\tfunction flattenObject( obj ) {\n\t\tif ( !isObjectLike( obj ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t\t}\n\t\treturn flatten( obj, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport hasFunctionNameSupport from '@stdlib/assert/has-function-name-support';\nimport format from '@stdlib/string/format';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\n\n\n// VARIABLES //\n\nvar isFunctionNameSupported = hasFunctionNameSupport();\n\n\n// MAIN //\n\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/\nfunction functionName( fcn ) {\n\t// TODO: add support for generator functions?\n\tif ( isFunction( fcn ) === false ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isFunctionNameSupported ) {\n\t\treturn fcn.name;\n\t}\n\treturn RE.exec( fcn.toString() )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default functionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function sequence.\n*\n* @param {...Function} f - functions to evaluate in sequential order\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} pipeline function\n*\n* @example\n* function a( x ) {\n*     return 2 * x;\n* }\n*\n* function b( x ) {\n*     return x + 3;\n* }\n*\n* function c( x ) {\n*     return x / 5;\n* }\n*\n* var f = funseq( a, b, c );\n*\n* var z = f( 6 );\n* // returns 3\n*/\nfunction funseq() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to execute sequentially.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} result\n\t*/\n\tfunction pipeline() {\n\t\tvar args;\n\t\tvar i;\n\t\targs = new Array( arguments.length );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\targs = f[ 0 ].apply( null, args );\n\t\tfor ( i = 1; i < nFuncs; i++ ) {\n\t\t\targs = f[ i ]( args );\n\t\t}\n\t\treturn args;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default funseq;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport returnValues from '@stdlib/array/base/group-values';\nimport returnIndices from '@stdlib/array/base/group-indices';\nimport returnPairs from '@stdlib/array/base/group-entries';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Groups values as arrays associated with distinct keys.\n*\n* @param {Collection} collection - collection to group\n* @param {Options} [options] - function options\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Collection} groups - collection defining which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a collection\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} first and last arguments must be the same length\n* @returns {Object} group results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = group( arr, groups );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction group( collection, options, groups ) {\n\tvar opts;\n\tvar err;\n\tvar g;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tg = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tg = groups;\n\t}\n\tif ( !isCollection( g ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a collection. Value: `%s`.', g ) );\n\t}\n\tif ( collection.length !== g.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and last arguments must be the same length.' );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, g );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, g );\n\t}\n\treturn returnPairs( collection, g );\n}\n\n\n// EXPORTS //\n\nexport default group;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnIndices from './return_indices.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function.\n*\n* @param {Collection} collection - collection to group\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, indicator );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n* var out = groupBy( arr, opts, indicator );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = groupBy( arr, opts, indicator );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction groupBy( collection, options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, opts, cb );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, opts, cb );\n\t}\n\treturn returnPairs( collection, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the indicator function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, {}, indicator );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupBy( collection, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tg = indicator.call( thisArg, v, i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( v );\n\t\t} else {\n\t\t\tout[ g ] = [ v ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results according to element indices.\n*\n* ## Notes\n*\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, {}, indicator );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*/\nfunction groupBy( collection, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = indicator.call( thisArg, collection[ i ], i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( i );\n\t\t} else {\n\t\t\tout[ g ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as index-element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the indicator function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, {}, indicator );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction groupBy( collection, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tg = indicator.call( thisArg, v, i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ i, v ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Groups an object's own and inherited property values according to an indicator function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = groupIn( obj, opts, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = groupIn( obj, opts, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupIn( obj, options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupIn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tv = obj[ key ];\n\t\tg = indicator.call( thisArg, v, key );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( v );\n\t\t} else {\n\t\t\tout[ g ] = [ v ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*/\nfunction groupIn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tg = indicator.call( thisArg, obj[ key ], key );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( key );\n\t\t} else {\n\t\t\tout[ g ] = [ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, {}, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupIn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tv = obj[ key ];\n\t\tg = indicator.call( thisArg, v, key );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( [ key, v ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ key, v ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Groups an object's own property values according to an indicator function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = groupOwn( obj, opts, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': '*'\n* };\n* var out = groupOwn( obj, opts, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupOwn( obj, options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupOwn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tv = obj[ key ];\n\t\t\tg = indicator.call( thisArg, v, key );\n\t\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\t\tout[ g ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ g ] = [ v ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*/\nfunction groupOwn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tg = indicator.call( thisArg, obj[ key ], key );\n\t\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\t\tout[ g ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ g ] = [ key ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, {}, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupOwn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tv = obj[ key ];\n\t\t\tg = indicator.call( thisArg, v, key );\n\t\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\t\tout[ g ].push( [ key, v ] );\n\t\t\t} else {\n\t\t\t\tout[ g ] = [ [ key, v ] ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Identity function.\n*\n* @param {*} x - input value\n* @returns {*} input value\n*\n* @example\n* var v = identity( 3.14 );\n* // returns 3.14\n*/\nfunction identity( x ) {\n\treturn x;\n}\n\n\n// EXPORTS //\n\nexport default identity;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* If a condition is truthy, returns `x`; otherwise, returns `y`.\n*\n* @param {boolean} bool - condition\n* @param {*} x - value to return if a condition is truthy\n* @param {*} y - value to return if a condition is falsy\n* @returns {*} either `x` or `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* var z = ifelse( randu() > 0.5, 1.0, -1.0 );\n* // returns <number>\n*/\nfunction ifelse( bool, x, y ) {\n\tif ( bool ) {\n\t\treturn x;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default ifelse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a condition is truthy, invokes `x`; otherwise, invokes `y`.\n*\n* @param {boolean} bool - condition\n* @param {Function} x - function to invoke if a condition is truthy\n* @param {Function} y - function to invoke if a condition is falsy\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {*} return value of either `x` or `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x() {\n*     return randu() * 100.0;\n* }\n*\n* function y() {\n*     return -1.0 * randu() * 100.0;\n* }\n*\n* var z = ifthen( randu() > 0.5, x, y );\n* // returns <number>\n*/\nfunction ifthen( bool, x, y ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( bool ) {\n\t\treturn x();\n\t}\n\treturn y();\n}\n\n\n// EXPORTS //\n\nexport default ifthen;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests that a value is a valid constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var ctor = function ctor() {};\n*\n* var err = validate( ctor );\n* // returns null\n*\n* err = validate( null );\n* // returns <TypeError>\n*/\nfunction validate( value ) {\n\tvar type = typeof value;\n\tif (\n\t\tvalue === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\treturn new TypeError( format( 'invalid argument. A provided constructor must be either an object (except null) or a function. Value: `%s`.', value ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Object.create;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Ctor() {\n\t// Empty...\n}\n\n\n// MAIN //\n\n/**\n* An `Object.create` shim for older JavaScript engines.\n*\n* @private\n* @param {Object} proto - prototype\n* @returns {Object} created object\n*\n* @example\n* var obj = createObject( Object.prototype );\n* // returns {}\n*/\nfunction createObject( proto ) {\n\tCtor.prototype = proto;\n\treturn new Ctor();\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar createObject;\nif ( typeof builtin === 'function' ) {\n\tcreateObject = builtin;\n} else {\n\tcreateObject = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport createObject from './detect.js';\n\n\n// MAIN //\n\n/**\n* Implements prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* ## Notes\n*\n* -   This implementation is not designed to work with ES2015/ES6 classes. For ES2015/ES6 classes, use `class` with `extends`.\n* -   For reference, see [node#3455](https://github.com/nodejs/node/pull/3455), [node#4179](https://github.com/nodejs/node/issues/4179), [node#3452](https://github.com/nodejs/node/issues/3452), and [node commit](https://github.com/nodejs/node/commit/29da8cf8d7ab8f66b9091ab22664067d4468461e#diff-3deb3f32958bb937ae05c6f3e4abbdf5).\n*\n* @param {(Object|Function)} ctor - constructor which will inherit\n* @param {(Object|Function)} superCtor - super (parent) constructor\n* @throws {TypeError} first argument must be either an object or a function which can inherit\n* @throws {TypeError} second argument must be either an object or a function from which a constructor can inherit\n* @throws {TypeError} second argument must have an inheritable prototype\n* @returns {(Object|Function)} child constructor\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\nfunction inherit( ctor, superCtor ) {\n\tvar err = validate( ctor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\terr = validate( superCtor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( typeof superCtor.prototype === 'undefined' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must have a prototype from which another object can inherit. Value: `%s`.', superCtor.prototype ) );\n\t}\n\t// Create a prototype which inherits from the parent prototype:\n\tctor.prototype = createObject( superCtor.prototype );\n\n\t// Set the constructor to refer to the child constructor:\n\tdefineProperty( ctor.prototype, 'constructor', {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': ctor\n\t});\n\n\treturn ctor;\n}\n\n\n// EXPORTS //\n\nexport default inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable property names and symbols\n*\n* @example\n* var props = inheritedEnumerableProperties( {} );\n*/\nfunction inheritedEnumerableProperties( value, level ) { // eslint-disable-line id-length\n\tvar props;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting enumerable properties...\n\tprops = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn props;\n}\n\n\n// EXPORTS //\n\nexport default inheritedEnumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable symbol properties\n*\n* @example\n* var symbols = inheritedEnumerablePropertySymbols( [] );\n*/\nfunction inheritedEnumerablePropertySymbols( value, level ) { // eslint-disable-line id-length\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting enumerable symbol properties...\n\tcache = {};\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedEnumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isEnumerable from '@stdlib/assert/is-enumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable property names\n*\n* @example\n* var keys = inheritedKeys( {} );\n*/\nfunction inheritedKeys( value, level ) {\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting enumerable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited non-enumerable property names and symbols\n*\n* @example\n* var props = inheritedNonEnumerableProperties( {} );\n*/\nfunction inheritedNonEnumerableProperties( value, level ) { // eslint-disable-line id-length\n\tvar props;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting non-enumerable properties...\n\tprops = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn props;\n}\n\n\n// EXPORTS //\n\nexport default inheritedNonEnumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited non-enumerable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited non-enumerable property names\n*\n* @example\n* var keys = inheritedNonEnumerablePropertyNames( {} );\n*/\nfunction inheritedNonEnumerablePropertyNames( value, level ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting non-enumerable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedNonEnumerablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited non-enumerable symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited non-enumerable symbol properties\n*\n* @example\n* var symbols = inheritedNonEnumerablePropertySymbols( [] );\n*/\nfunction inheritedNonEnumerablePropertySymbols( value, level ) { // eslint-disable-line id-length\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting non-enumerable symbol properties...\n\tcache = {};\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedNonEnumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport propertySymbols from './../../property-symbols';\nimport propertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited property names and symbols\n*\n* @example\n* var props = inheritedProperties( [] );\n* // returns [...]\n*/\nfunction inheritedProperties( value, level ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all properties...\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\ttmp = propertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport getOwnPropertyDescriptor from './../../property-descriptor';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's inherited property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have an inherited provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} third argument must be a positive integer\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var desc = inheritedPropertyDescriptor( {}, 'toString' );\n* // returns {...}\n*/\nfunction inheritedPropertyDescriptor( value, property, level ) { // eslint-disable-line id-length\n\tvar desc;\n\tvar obj;\n\tvar N;\n\tvar n;\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain in search of a specified property...\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\tdesc = getOwnPropertyDescriptor( obj, property );\n\t\tif ( desc ) {\n\t\t\treturn desc;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptors !== 'undefined' ); // eslint-disable-line node/no-unsupported-features/es-builtins\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\n\n\n// VARIABLES //\n\nvar propertyDescriptors = Object.getOwnPropertyDescriptors; // eslint-disable-line node/no-unsupported-features/es-builtins\n\n\n// MAIN //\n\n/**\n* Returns an object's own property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Object} property descriptors\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptors( obj );\n* // returns {...}\n*/\nfunction getOwnPropertyDescriptors( value ) {\n\treturn propertyDescriptors( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an object's own property descriptors.\n*\n* @module @stdlib/utils/property-descriptors\n*\n* @example\n* import getOwnPropertyDescriptors from '@stdlib/utils/property-descriptors';\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptors( obj, 'foo' );\n* // returns {...}\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\nimport propertyDescriptor from './../../property-descriptor';\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Returns an object's own property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Object} property descriptors\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptors( obj, 'foo' );\n* // returns {...}\n*/\nfunction getOwnPropertyDescriptors( value ) {\n\tvar symbols;\n\tvar names;\n\tvar desc;\n\tvar out;\n\tvar i;\n\n\tout = {};\n\n\t// Get the value's own enumerable and non-enumerable properties:\n\tnames = propertyNames( value );\n\n\t// For each property name, retrieve the property descriptor...\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tdesc = propertyDescriptor( value, names[ i ] );\n\t\tif ( desc ) {\n\t\t\t// The following is equivalent to `out[ names[i] ] = desc`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\tdefineProperty( out, names[ i ], {\n\t\t\t\t'configurable': true,\n\t\t\t\t'enumerable': true,\n\t\t\t\t'writable': true,\n\t\t\t\t'value': desc\n\t\t\t});\n\t\t}\n\t}\n\n\t// Get the value's symbol properties:\n\tsymbols = propertySymbols( value );\n\n\t// For each symbol property, retrieve the property descriptor...\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tdesc = propertyDescriptor( value, symbols[ i ] );\n\t\tif ( desc ) {\n\t\t\t// The following is equivalent to `out[ symbols[i] ] = desc`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\tdefineProperty( out, symbols[ i ], {\n\t\t\t\t'configurable': true,\n\t\t\t\t'enumerable': true,\n\t\t\t\t'writable': true,\n\t\t\t\t'value': desc\n\t\t\t});\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport getOwnPropertyDescriptors from './../../property-descriptors';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport objectKeys from './../../keys';\nimport defineProperty from './../../define-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an object's inherited property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Object} inherited property descriptors\n*\n* @example\n* var desc = inheritedPropertyDescriptors( [] );\n* // returns {...}\n*/\nfunction inheritedPropertyDescriptors( value, level ) { // eslint-disable-line id-length\n\tvar desc;\n\tvar keys;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn {};\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all property descriptors...\n\tdesc = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyDescriptors( obj );\n\t\tkeys = objectKeys( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a property name always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tkeys = getOwnPropertySymbols( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a symbol property always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\treturn desc;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertyDescriptors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport propertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable and non-enumerable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable and non-enumerable property names\n*\n* @example\n* var keys = inheritedPropertyNames( [] );\n*/\nfunction inheritedPropertyNames( value, level ) {\n\tvar names;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all enumerable and non-enumerable property names...\n\tnames = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( names, tmp[ i ] ) === false ) {\n\t\t\t\tnames.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport propertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited symbol properties\n*\n* @example\n* var symbols = inheritedPropertySymbols( [] );\n*/\nfunction inheritedPropertySymbols( value, level ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all symbol properties...\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable property names and symbols\n*\n* @example\n* var props = inheritedWritableProperties( {} );\n*/\nfunction inheritedWritableProperties( value, level ) { // eslint-disable-line id-length\n\tvar props;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable properties...\n\tprops = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn props;\n}\n\n\n// EXPORTS //\n\nexport default inheritedWritableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable property names\n*\n* @example\n* var keys = inheritedWritablePropertyNames( {} );\n*/\nfunction inheritedWritablePropertyNames( value, level ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedWritablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable symbol properties\n*\n* @example\n* var symbols = inheritedWritablePropertySymbols( [] );\n*/\nfunction inheritedWritablePropertySymbols( value, level ) { // eslint-disable-line id-length\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable symbol properties...\n\tcache = {};\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedWritablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates the collection in-place.\n*\n* ## Notes\n*\n* -   The invoked function's return value is cached prior to updating a collection. Before updating the collection, a collection must be inspected to ensure that a collection has not been resized during invocation such that an index no longer has a corresponding element in the collection. Were a return value automatically used to update a collection, an input collection could be converted into a sparse data structure. While some might consider this a feature, here, we take stance that a user should be less clever.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function scale( value, index, collection ) {\n*     return value * index;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = inmap( arr, scale );\n* // returns [ 0, 2, 6, 12 ]\n*\n* var bool = ( out === arr );\n* // returns true\n*/\nfunction inmap( collection, fcn, thisArg ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = fcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\tlen = collection.length;\n\t\t}\n\t\tif ( i < len ) {\n\t\t\tcollection[ i ] = v;\n\t\t}\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default inmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates the collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `inmap` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `inmap()`, `[].push()` behavior is consistent with `inmapRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function scale( value, index, collection ) {\n*     console.log( '%s: %d', index, value );\n*     return value * index;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = inmapRight( arr, scale );\n* // returns [ 0, 2, 6, 12 ]\n*\n* var bool = ( out === arr );\n* // returns true\n*/\nfunction inmapRight( collection, fcn, thisArg ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tv = fcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\tif ( i >= 0 && i < len ) {\n\t\t\tcollection[ i ] = v;\n\t\t}\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default inmapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts a collection to an object whose keys are determined by a provided function and whose values are the collection values.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} output object\n*\n* @example\n* function toKey( value, index ) {\n*     console.log( '%d: %s', index, JSON.stringify( value ) );\n*     return value.name;\n* }\n*\n* var collection = [\n*     { 'name': 'beep', 'a': 1 },\n*     { 'name': 'boop', 'b': 2 }\n* ];\n*\n* var obj = keyBy( collection, toKey );\n* // returns { 'beep': { 'name': 'beep', 'a': 1 }, 'boop': { 'name': 'boop', 'b': 2 } }\n*/\nfunction keyBy( collection, fcn, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar key;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = fcn.call( thisArg, collection[ i ], i );\n\t\tout[ key ] = collection[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts a collection to an object whose keys are determined by a provided function and whose values are the collection values, iterating from right to left.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} output object\n*\n* @example\n* function toKey( value, index ) {\n*     console.log( '%d: %s', index, JSON.stringify( value ) );\n*     return value.name;\n* }\n*\n* var collection = [\n*     { 'name': 'beep', 'a': 1 },\n*     { 'name': 'boop', 'b': 2 }\n* ];\n*\n* var obj = keyByRight( collection, toKey );\n* // returns { 'boop': { 'name': 'boop', 'b': 2 }, 'beep': { 'name': 'beep', 'a': 1 } }\n*/\nfunction keyByRight( collection, fcn, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar key;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tkey = fcn.call( thisArg, collection[ i ], i );\n\t\tout[ key ] = collection[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts each object key to lowercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'A': 1,\n*     'B': 2\n* };\n*\n* var obj2 = lowercaseKeys( obj1 );\n* // returns { 'a': 1, 'b': 2 }\n*/\nfunction lowercaseKeys( obj ) {\n\tvar out;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tout[ key.toLowerCase() ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default lowercaseKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an ndarray and assigns the result to an element in an output ndarray.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing output ndarray meta data\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* function scale( z ) {\n*     return new Complex64( realf(z)*10.0, imagf(z)*10.0 );\n* }\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': oy,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the unary function:\n* map( x, y, naryFunction( scale, 1 ) );\n*\n* var v = y.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction map( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar ordx;\n\tvar ordy;\n\tvar len;\n\tvar get;\n\tvar set;\n\tvar ref;\n\tvar shx;\n\tvar shy;\n\tvar sx;\n\tvar sy;\n\tvar ox;\n\tvar oy;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\tshy = y.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\tset( ybuf, oy, fcn.call( thisArg, get( xbuf, ox ), 0, ref ) );\n\t\treturn;\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tset( ybuf, iy, fcn.call( thisArg, get( xbuf, ix ), i, ref ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {Object} y - object containing output array data\n* @param {ArrayLikeObject} y.data - output array data\n* @param {Array<Function>} y.accessors - output array accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ -1, -2, -3, -4, -5, -6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* map( x, y, naryFunction( abs, 1 ) );\n*\n* var data = y.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction map( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar get;\n\tvar set;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Iterate over each element...\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tset( ybuf, i, fcn.call( thisArg, get( xbuf, i ), i, xbuf ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in a new array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction map( arr, fcn, thisArg ) {\n\tvar out;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tarr = ndarraylike2object( arr );\n\t\tout = ndzeros( arr.shape, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': arr.order\n\t\t});\n\t\tndarrayFcn( arr, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tout = zeros( arr.length );\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function after transforming arguments according to a callback function.\n*\n* ## Notes\n*\n-   The callback function is provided the following arguments:\n*\n*     -   **value**: argument value.\n*     -   **index**: argument index.\n*\n* @param {Function} fcn - input function\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} wrapped function\n*\n* @example\n* function foo( a, b, c ) {\n*     return [ a, b, c ];\n* }\n*\n* function clbk( v ) {\n*     return v * 2;\n* }\n*\n* var bar = mapArguments( foo, clbk );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 2, 4, 6 ]\n*/\nfunction mapArguments( fcn, clbk, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\treturn wrap;\n\n\t/**\n\t* Invokes a function after transforming arguments according to a callback function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction wrap() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( clbk( arguments[ i ], i ) ); // eslint-disable-line node/callback-return\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mapArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times and returns an array of accumulated function return values.\n*\n* @param {Function} fcn - function to invoke\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Array} accumulated results\n*\n* @example\n* function fcn( i ) {\n*     return i;\n* }\n*\n* var arr = mapFun( fcn, 5 );\n* // returns [ 0, 1, 2, 3, 4 ]\n*/\nfunction mapFun( fcn, n, thisArg ) {\n\tvar out;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t}\n\t// Note: we explicitly do not preallocate in order to ensure \"fast\" elements for large output arrays.\n\tout = [];\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout.push( fcn.call( thisArg, i ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mapFun;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Maps keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   We need to cache an object value to prevent the edge case where, during the invocation of the transform function, the value corresponding to a particular key is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @param {Object} obj - source object\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function transform( key, value ) {\n*     return key + value;\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = mapKeys( obj1, transform );\n* // returns { 'a1': 1, 'b2': 2 }\n*/\nfunction mapKeys( obj, transform ) {\n\tvar out;\n\tvar key;\n\tvar v;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( transform ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', transform ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tv = obj[ key ];\n\t\t\tkey = transform( key, v, obj );\n\t\t\tout[ key ] = v;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mapKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to each element in an array and assign the result to an element in an output array.\n*\n* @module @stdlib/utils/map\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import map from '@stdlib/utils/map';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import map from '@stdlib/utils/map';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import map from '@stdlib/utils/map';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import map from '@stdlib/utils/map';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* map.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} input and output arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* map( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction map( arr, out, fcn, thisArg ) {\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an ndarray, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\ttmp = ndarraylike2object( broadcast( arr, sh ) );\n\t\ttmp.ref = arr;\n\t\tarr = tmp;\n\n\t\tndarrayFcn( arr, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tif ( !isArrayLikeObject( out ) || isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an array-like object, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( arr.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cceil from '@stdlib/math/base/special/cceil';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = mapReduce( x, new Complex64( 0.0, 0.0 ), naryFunction( cceil, 1 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 20.0\n*\n* var im = imagf( v );\n* // returns 24.0\n*/\nfunction mapReduce( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn reducer.call( thisArg, initial, mapper( get( xbuf, ox ), 0, ref ), 0, ref ); // eslint-disable-line max-len\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, ix ), i, ref ), i, ref ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The mapping function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* -   The reducing function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: result of applying the mapping function against the current array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = mapReduce( arr, 0, square, sum );\n* // returns 30\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapReduce( arr, 0, naryFunction( abs, 1 ), naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction mapReduce( arr, initial, mapper, reducer, thisArg ) {\n\tif ( !isFunction( mapper ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', mapper ) );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapReduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum of squared values:\n* var out = mapReduce( x, 0, square, sum );\n* // returns 30\n*/\nfunction mapReduce( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, i ), i, xbuf ), i, xbuf ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cceil from '@stdlib/math/base/special/cceil';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = mapReduceRight( x, new Complex64( 0.0, 0.0 ), naryFunction( cceil, 1 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 20.0\n*\n* var im = imagf( v );\n* // returns 24.0\n*/\nfunction mapReduceRight( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn reducer.call( thisArg, initial, mapper( get( xbuf, ox ), 0, ref ), 0, ref ); // eslint-disable-line max-len\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, ix ), i, ref ), i, ref ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array while iterating from right to left and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The mapping function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* -   The reducing function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: result of applying the mapping function against the current array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = mapReduceRight( arr, 0, square, sum );\n* // returns 30\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapReduceRight( arr, 0, naryFunction( abs, 1 ), naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction mapReduceRight( arr, initial, mapper, reducer, thisArg ) {\n\tif ( !isFunction( mapper ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', mapper ) );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapReduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum of squared values:\n* var out = mapReduceRight( x, 0, square, sum );\n* // returns 30\n*/\nfunction mapReduceRight( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, i ), i, xbuf ), i, xbuf ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an ndarray and assigns the result to an element in an output ndarray, iterating from right to left.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing output ndarray meta data\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* function scale( z ) {\n*     return new Complex64( realf(z)*10.0, imagf(z)*10.0 );\n* }\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': oy,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the unary function:\n* mapRight( x, y, naryFunction( scale, 1 ) );\n*\n* var v = y.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction mapRight( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar ordx;\n\tvar ordy;\n\tvar len;\n\tvar get;\n\tvar set;\n\tvar ref;\n\tvar shx;\n\tvar shy;\n\tvar sx;\n\tvar sy;\n\tvar ox;\n\tvar oy;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\tshy = y.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\tset( ybuf, oy, fcn.call( thisArg, get( xbuf, ox ), 0, ref ) );\n\t\treturn;\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tset( ybuf, iy, fcn.call( thisArg, get( xbuf, ix ), i, ref ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array, iterating from right to left.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {Object} y - object containing output array data\n* @param {ArrayLikeObject} y.data - output array data\n* @param {Array<Function>} y.accessors - output array accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ -1, -2, -3, -4, -5, -6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* mapRight( x, y, naryFunction( abs, 1 ) );\n*\n* var data = y.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction mapRight( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar get;\n\tvar set;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Iterate over each element...\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tset( ybuf, i, fcn.call( thisArg, get( xbuf, i ), i, xbuf ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in a new array, iterating from right to left.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction mapRight( arr, fcn, thisArg ) {\n\tvar out;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tarr = ndarraylike2object( arr );\n\t\tout = ndzeros( arr.shape, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': arr.order\n\t\t});\n\t\tndarrayFcn( arr, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tout = zeros( arr.length );\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Maps values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function transform( value, key ) {\n*     return key + value;\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = mapValues( obj1, transform );\n* // returns { 'a': 'a1', 'b': 'b2' }\n*/\nfunction mapValues( obj, transform ) {\n\tvar out;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( transform ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', transform ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tout[ key ] = transform( obj[ key ], key, obj );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mapValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to each element in an array and assign the result to an element in an output array, iterating from right to left.\n*\n* @module @stdlib/utils/map-right\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* mapRight.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* mapRight.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array, iterating from right to left.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} input and output arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must have be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* mapRight( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* mapRight( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction mapRight( arr, out, fcn, thisArg ) {\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an ndarray, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\ttmp = ndarraylike2object( broadcast( arr, sh ) );\n\t\ttmp.ref = arr;\n\t\tarr = tmp;\n\n\t\tndarrayFcn( arr, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tif ( !isArrayLikeObject( out ) || isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an array-like object, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( arr.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing meta data for the first input ndarray\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing meta data for the second input ndarray\n* @param {string} y.ref - reference to original input ndarray-like object\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Object} z - object containing output ndarray meta data\n* @param {string} z.dtype - data type\n* @param {Collection} z.data - data buffer\n* @param {NonNegativeInteger} z.length - number of elements\n* @param {NonNegativeIntegerArray} z.shape - dimensions\n* @param {IntegerArray} z.strides - stride lengths\n* @param {NonNegativeInteger} z.offset - index offset\n* @param {string} z.order - specifies whether `z` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} z.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/complex/float32/base/add';\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var zbuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n* var sz = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n* var oz = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* y.ref = y;\n*\n* var z = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': zbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sz,\n*     'offset': oz,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the function:\n* map2( x, y, z, naryFunction( add, 2 ) );\n*\n* var v = z.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 2.0\n*\n* var im = imagf( v );\n* // returns 3.0\n*/\nfunction map2( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar ordx;\n\tvar ordy;\n\tvar ordz;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar xref;\n\tvar yref;\n\tvar shx;\n\tvar shy;\n\tvar shz;\n\tvar len;\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ox;\n\tvar oy;\n\tvar oz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the array shapes:\n\tshx = x.shape;\n\tshy = y.shape;\n\tshz = z.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\tsz = z.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\toz = z.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\tordz = z.order;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Cache references to the original input arrays:\n\txref = x.ref;\n\tyref = y.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 && shy.length === 0 ) {\n\t\tzset( zbuf, oz, fcn.call( thisArg, xget( xbuf, ox ), yget( ybuf, oy ), 0, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t\treturn;\n\t}\n\t// Iterate over the arrays based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tiz = vind2bind( shz, sz, oz, ordz, i, MODE );\n\t\tzset( zbuf, iz, fcn.call( thisArg, xget( xbuf, ix ), yget( ybuf, iy ), i, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing data for the first input array\n* @param {ArrayLikeObject} x.data - array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {Object} y - object containing data for the second input array\n* @param {ArrayLikeObject} y.data - array data\n* @param {Array<Function>} y.accessors - array element accessors\n* @param {Object} z - object containing output array data\n* @param {ArrayLikeObject} z.data - array data\n* @param {Array<Function>} z.accessors - array element accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ 1, 2, 3, 4, 5, 6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 1, 1, 1, 1, 1, 1 ],\n*     'accessors': [ getter, setter ]\n* };\n* var z = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* map2( x, y, z, naryFunction( add, 2 ) );\n*\n* var data = z.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Iterate over the elements...\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tzset( zbuf, i, fcn.call( thisArg, xget( xbuf, i ), yget( ybuf, i ), i, [ xbuf, ybuf ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport broadcastShapes from '@stdlib/ndarray/base/broadcast-shapes';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to a new array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} input arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input arrays must have the same length\n* @throws {Error} input ndarrays must be broadcast compatible\n* @throws {TypeError} third argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2( x, y, naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2( x, y, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar out;\n\tvar tmp;\n\tvar sh;\n\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\t// Broadcast `x` and `y` to a common shape:\n\t\tsh = broadcastShapes( [ x.shape, y.shape ] );\n\t\tif ( sh === null ) {\n\t\t\tthrow new Error( 'invalid arguments. Input ndarrays must be broadcast compatible.' );\n\t\t}\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\t// Create an output array:\n\t\tout = ndzeros( sh, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': x.order\n\t\t});\n\n\t\t// Apply the function to the input arrays:\n\t\tndarrayFcn( x, y, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( y.length !== x.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input arrays must have the same length.' );\n\t\t}\n\t\tout = zeros( x.length );\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in two input arrays and assign the results to an output array.\n*\n* @module @stdlib/utils/map2\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2 from '@stdlib/utils/map2';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2 from '@stdlib/utils/map2';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2( x, y, naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2 from '@stdlib/utils/map2';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2 from '@stdlib/utils/map2';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to an output array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be an array-like object or an ndarray\n* @throws {TypeError} fourth argument must be a function\n* @throws {TypeError} input and output arrays must be either all array-like objects or all ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2( x, y, out, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar isznd;\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tisznd = isndarrayLike( out );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( !isznd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are ndarrays, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\tndarrayFcn( x, y, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( isznd || !isArrayLikeObject( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are array-like objects, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( x.length !== y.length || y.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing meta data for the first input ndarray\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing meta data for the second input ndarray\n* @param {string} y.ref - reference to original input ndarray-like object\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Object} z - object containing output ndarray meta data\n* @param {string} z.dtype - data type\n* @param {Collection} z.data - data buffer\n* @param {NonNegativeInteger} z.length - number of elements\n* @param {NonNegativeIntegerArray} z.shape - dimensions\n* @param {IntegerArray} z.strides - stride lengths\n* @param {NonNegativeInteger} z.offset - index offset\n* @param {string} z.order - specifies whether `z` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} z.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/complex/float32/base/add';\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var zbuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n* var sz = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n* var oz = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* y.ref = y;\n*\n* var z = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': zbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sz,\n*     'offset': oz,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the function:\n* map2Right( x, y, z, naryFunction( add, 2 ) );\n*\n* var v = z.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 2.0\n*\n* var im = imagf( v );\n* // returns 3.0\n*/\nfunction map2Right( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar ordx;\n\tvar ordy;\n\tvar ordz;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar xref;\n\tvar yref;\n\tvar shx;\n\tvar shy;\n\tvar shz;\n\tvar len;\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ox;\n\tvar oy;\n\tvar oz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the array shapes:\n\tshx = x.shape;\n\tshy = y.shape;\n\tshz = z.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\tsz = z.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\toz = z.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\tordz = z.order;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Cache references to the original input arrays:\n\txref = x.ref;\n\tyref = y.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 && shy.length === 0 ) {\n\t\tzset( zbuf, oz, fcn.call( thisArg, xget( xbuf, ox ), yget( ybuf, oy ), 0, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t\treturn;\n\t}\n\t// Iterate over the arrays based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tiz = vind2bind( shz, sz, oz, ordz, i, MODE );\n\t\tzset( zbuf, iz, fcn.call( thisArg, xget( xbuf, ix ), yget( ybuf, iy ), i, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing data for the first input array\n* @param {ArrayLikeObject} x.data - array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {Object} y - object containing data for the second input array\n* @param {ArrayLikeObject} y.data - array data\n* @param {Array<Function>} y.accessors - array element accessors\n* @param {Object} z - object containing output array data\n* @param {ArrayLikeObject} z.data - array data\n* @param {Array<Function>} z.accessors - array element accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ 1, 2, 3, 4, 5, 6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 1, 1, 1, 1, 1, 1 ],\n*     'accessors': [ getter, setter ]\n* };\n* var z = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* map2Right( x, y, z, naryFunction( add, 2 ) );\n*\n* var data = z.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2Right( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Iterate over the elements...\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tzset( zbuf, i, fcn.call( thisArg, xget( xbuf, i ), yget( ybuf, i ), i, [ xbuf, ybuf ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport broadcastShapes from '@stdlib/ndarray/base/broadcast-shapes';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to a new array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} input arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input arrays must have the same length\n* @throws {Error} input ndarrays must be broadcast compatible\n* @throws {TypeError} third argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2Right( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2Right( x, y, naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2Right( x, y, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar out;\n\tvar tmp;\n\tvar sh;\n\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\t// Broadcast `x` and `y` to a common shape:\n\t\tsh = broadcastShapes( [ x.shape, y.shape ] );\n\t\tif ( sh === null ) {\n\t\t\tthrow new Error( 'invalid arguments. Input ndarrays must be broadcast compatible.' );\n\t\t}\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\t// Create an output array:\n\t\tout = ndzeros( sh, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': x.order\n\t\t});\n\n\t\t// Apply the function to the input arrays:\n\t\tndarrayFcn( x, y, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( y.length !== x.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input arrays must have the same length.' );\n\t\t}\n\t\tout = zeros( x.length );\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in an array of arrays and assigns the result to a nested element in a new array of arrays.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - array of arrays\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array of arrays\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} array of arrays\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ -1, -2, -3 ],\n*     [ -4, -5, -6 ]\n* ];\n*\n* var out = map2d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ 1, 2, 3 ], [ 4, 5, 6 ] ]\n*/\nfunction map2d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar tmp;\n\tvar M;\n\tvar N;\n\tvar a;\n\tvar i;\n\tvar j;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tM = arr.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( !isArrayLikeObject( a ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object containing array-like objects. Index: `%u`. Value: `%s`.', i, a ) );\n\t\t}\n\t\tN = a.length;\n\t\ttmp = [];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\ttmp.push( fcn.call( thisArg, a[ j ], [ i, j ], arr ) );\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in a three-dimensional nested array and assigns the result to a nested element in a new three-dimensional nested array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - three-dimensional nested array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be a three-dimensional nested array\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} three-dimensional nested array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ [ -1, -2, -3 ] ],\n*     [ [ -4, -5, -6 ] ]\n* ];\n*\n* var out = map3d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ [ 1, 2, 3 ] ], [ [ 4, 5, 6 ] ] ]\n*/\nfunction map3d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar a1;\n\tvar a2;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tS0 = arr.length;\n\tout = [];\n\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\ta1 = arr[ i0 ];\n\t\tif ( !isArrayLikeObject( a1 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a three-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t}\n\t\tS1 = a1.length;\n\t\tt1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta2 = a1[ i1 ];\n\t\t\tif ( !isArrayLikeObject( a2 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a three-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t\t}\n\t\t\tS2 = a2.length;\n\t\t\tt2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tt2.push( fcn.call( thisArg, a2[ i2 ], [ i0, i1, i2 ], arr ) );\n\t\t\t}\n\t\t\tt1.push( t2 );\n\t\t}\n\t\tout.push( t1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in a four-dimensional nested array and assigns the result to a nested element in a new four-dimensional nested array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - four-dimensional nested array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be a four-dimensional nested array\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} four-dimensional nested array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ [ [ -1, -2, -3 ] ] ],\n*     [ [ [ -4, -5, -6 ] ] ]\n* ];\n*\n* var out = map4d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ [ [ 1, 2, 3 ] ] ], [ [ [ 4, 5, 6 ] ] ] ]\n*/\nfunction map4d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tS0 = arr.length;\n\tout = [];\n\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\ta1 = arr[ i0 ];\n\t\tif ( !isArrayLikeObject( a1 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t}\n\t\tS1 = a1.length;\n\t\tt1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta2 = a1[ i1 ];\n\t\t\tif ( !isArrayLikeObject( a2 ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u). Value: `%s`.', i0, i1, a2 ) );\n\t\t\t}\n\t\t\tS2 = a2.length;\n\t\t\tt2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta3 = a2[ i2 ];\n\t\t\t\tif ( !isArrayLikeObject( a3 ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u, %u). Value: `%s`.', i0, i1, i2, a3 ) );\n\t\t\t\t}\n\t\t\t\tS3 = a3.length;\n\t\t\t\tt3 = [];\n\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\tt3.push( fcn.call( thisArg, a3[ i3 ], [ i0, i1, i2, i3 ], arr ) ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\tt2.push( t3 );\n\t\t\t}\n\t\t\tt1.push( t2 );\n\t\t}\n\t\tout.push( t1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in a five-dimensional nested array and assigns the result to a nested element in a new five-dimensional nested array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - five-dimensional nested array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be a five-dimensional nested array\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} five-dimensional nested array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ [ [ [ -1, -2, -3 ] ] ] ],\n*     [ [ [ [ -4, -5, -6 ] ] ] ]\n* ];\n*\n* var out = map5d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ [ [ [ 1, 2, 3 ] ] ] ], [ [ [ [ 4, 5, 6 ] ] ] ] ]\n*/\nfunction map5d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar t4;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar a4;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tS0 = arr.length;\n\tout = [];\n\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\ta1 = arr[ i0 ];\n\t\tif ( !isArrayLikeObject( a1 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t}\n\t\tS1 = a1.length;\n\t\tt1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta2 = a1[ i1 ];\n\t\t\tif ( !isArrayLikeObject( a2 ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u). Value: `%s`.', i0, i1, a2 ) );\n\t\t\t}\n\t\t\tS2 = a2.length;\n\t\t\tt2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta3 = a2[ i2 ];\n\t\t\t\tif ( !isArrayLikeObject( a3 ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u, %u). Value: `%s`.', i0, i1, i2, a3 ) );\n\t\t\t\t}\n\t\t\t\tS3 = a3.length;\n\t\t\t\tt3 = [];\n\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\ta4 = a3[ i3 ];\n\t\t\t\t\tif ( !isArrayLikeObject( a4 ) ) {\n\t\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u, %u, %u). Value: `%s`.', i0, i1, i2, i3, a4 ) );\n\t\t\t\t\t}\n\t\t\t\t\tS4 = a4.length;\n\t\t\t\t\tt4 = [];\n\t\t\t\t\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\t\t\t\t\tt4.push( fcn.call( thisArg, a4[ i4 ], [ i0, i1, i2, i3, i4 ], arr ) ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t\tt3.push( t4 );\n\t\t\t\t}\n\t\t\t\tt2.push( t3 );\n\t\t\t}\n\t\t\tt1.push( t2 );\n\t\t}\n\t\tout.push( t1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function according to a specified mask.\n*\n* ## Notes\n*\n* -   Only those arguments having a truthy mask value are applied to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {Collection} mask - argument mask\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a collection\n* @returns {Function} masked function\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* var bar = maskArguments( foo, [ 1, 0, 1 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction maskArguments( fcn, mask, thisArg ) {\n\tvar fcns;\n\tvar idx;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isCollection( mask ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', mask ) );\n\t}\n\tidx = [];\n\tfor ( i = 0; i < mask.length; i++ ) {\n\t\tif ( mask[ i ] ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( idx.length < fcns.length ) ? fcns[ idx.length ] : nary;\n\n\t/**\n\t* Invokes a nullary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ] );\n\t}\n\n\t/**\n\t* Invokes a binary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ] );\n\t}\n\n\t/**\n\t* Invokes a ternary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quaternary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quinary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ], arguments[ idx[4] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ idx[i] ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default maskArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport identity from './../../identity-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a memoized function.\n*\n* @param {Function} fcn - function to memoize\n* @param {Function} [hashFunction] - function to map a set of arguments to a single value identifying that set\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} memoized function\n*\n* @example\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\nfunction memoize( fcn, hashFunction ) {\n\tvar toKey;\n\tvar cache;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\ttoKey = identity;\n\t} else {\n\t\ttoKey = hashFunction;\n\t\tif ( !isFunction( toKey ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Hash function argument must be a function. Value: `%s`.', toKey ) );\n\t\t}\n\t}\n\tcache = {};\n\tsetReadOnly( memoized, 'cache', cache );\n\treturn memoized;\n\n\t/**\n\t* Memoized function.\n\t*\n\t* @private\n\t* @param {...*} args - function arguments\n\t* @returns {*} memoized function result\n\t*/\n\tfunction memoized() {\n\t\tvar args;\n\t\tvar out;\n\t\tvar key;\n\t\tvar i;\n\t\targs = new Array( arguments.length );\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\tkey = toKey( args ).toString();\n\t\tif ( hasOwnProp( cache, key ) ) {\n\t\t\treturn cache[ key ];\n\t\t}\n\t\tout = fcn.apply( null, args );\n\t\tcache[ key ] = out;\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default memoize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'level': PINF,\n\t\t'override': true,\n\t\t'extend': true,\n\t\t'copy': true\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isObject from '@stdlib/assert/is-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport isFunction from '@stdlib/assert/is-function';\nimport typeOf from './../../type-of';\nimport deepCopy from './../../copy';\n\n\n// MAIN //\n\n/**\n* Merges a source object into a target object.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @param {number} level - merge level\n* @param {boolean} copy - indicates whether to perform a deep copy of merged values\n* @param {(boolean|Function)} override - defines the merge strategy\n* @param {boolean} extend - indicates whether new properties can be added to the target object\n*/\nfunction deepMerge( target, source, level, copy, override, extend ) {\n\tvar hasProp;\n\tvar isFunc;\n\tvar name;\n\tvar keys;\n\tvar curr;\n\tvar key;\n\tvar val;\n\tvar tmp;\n\tvar i;\n\n\t// Determine if we were provided a custom override strategy:\n\tisFunc = isFunction( override );\n\n\t// Decrement the level:\n\tlevel -= 1;\n\n\t// Loop through the source keys and implement the merge strategy...\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\thasProp = hasOwnProp( target, key );\n\n\t\t// Can we add new properties to the target?\n\t\tif ( !hasProp && !extend ) {\n\t\t\tcontinue;\n\t\t}\n\t\tval = source[ key ];\n\n\t\tif ( hasProp ) {\n\t\t\tcurr = target[ key ];\n\t\t\tname = typeOf( curr );\n\n\t\t\t// Should we recurse to perform a deep(er) merge? (only if both the current value and the proposed value are objects and the level is > 0)\n\t\t\tif (\n\t\t\t\t!isBuffer( curr ) &&\n\t\t\t\tname === 'object' &&\n\t\t\t\tisObject( val ) &&\n\t\t\t\tlevel\n\t\t\t) {\n\t\t\t\tdeepMerge( curr, val, level, copy, override, extend );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Should we apply a custom merge (override) strategy?\n\t\t\tif ( isFunc ) {\n\t\t\t\ttmp = override( curr, val, key );\n\n\t\t\t\t// WARNING: the following check does NOT prevent shared (leaky) nested references. We only check for top-level reference equality. We will assume that the user knows best, given their having provided a custom override strategy.\n\t\t\t\tif ( copy && tmp !== curr && tmp === val ) {\n\t\t\t\t\ttmp = deepCopy( tmp );\n\t\t\t\t}\n\t\t\t\ttarget[ key ] = tmp;\n\t\t\t}\n\t\t\t// Are we allowed to override an existing target value?\n\t\t\telse if ( override ) {\n\t\t\t\tif ( copy ) {\n\t\t\t\t\ttarget[ key ] = deepCopy( val );\n\t\t\t\t} else {\n\t\t\t\t\ttarget[ key ] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// New property to be added to target object. Should we deep copy the source value?\n\t\telse if ( copy ) {\n\t\t\ttarget[ key ] = deepCopy( val );\n\t\t}\n\t\t// Perform a simple assignment...\n\t\telse {\n\t\t\ttarget[ key ] = val;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default deepMerge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport format from '@stdlib/string/format';\nimport deepMerge from './deepmerge.js';\n\n\n// MAIN //\n\n/**\n* Returns a merge function based on provided options.\n*\n* @private\n* @param {Options} opts - function options\n* @param {number} options.level - merge level\n* @param {boolean} options.copy - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} options.override - defines the merge strategy\n* @param {boolean} options.extend - boolean indicating whether new properties can be added to the target object\n* @returns {Function} merge function\n*\n* @example\n* var merge = mergefcn({\n*     'level': Number.POSITIVE_INFINITY,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* });\n* // returns <Function>\n*/\nfunction mergefcn( opts ) {\n\treturn merge;\n\n\t/**\n\t* Merges objects into a target object. Note that the target object is mutated.\n\t*\n\t* @private\n\t* @param {Object} target - target object\n\t* @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n\t* @throws {Error} must provide a target object and one or more source objects\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} source arguments must be objects\n\t* @returns {Object} merged (target) object\n\t*\n\t* @example\n\t* var target = {\n\t*     'a': 'beep'\n\t* };\n\t* var source = {\n\t*     'a': 'boop',\n\t*     'b': 'bap'\n\t* };\n\t*\n\t* var out = merge( target, source );\n\t* // returns {'a':'boop', 'b':'bap'}\n\t*/\n\tfunction merge( target ) {\n\t\tvar nargs;\n\t\tvar arg;\n\t\tvar src;\n\t\tvar i;\n\n\t\tnargs = arguments.length - 1;\n\t\tif ( nargs < 1 ) {\n\t\t\tthrow new Error( 'insufficient arguments. Must provide both a target object and one or more source objects.' );\n\t\t}\n\t\tif ( !isObject( target ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', target ) );\n\t\t}\n\t\tsrc = new Array( nargs );\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targ = arguments[ i+1 ];\n\n\t\t\t// WARNING: this is a porous check. Buffers, Numbers, Booleans, Strings, Dates, RegExp, custom class instances,... will all pass.\n\t\t\tif ( !isObject( arg ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be objects. Index: `%u`. Value: `%s`.', i, arg ) );\n\t\t\t}\n\t\t\tsrc[ i ] = arg;\n\t\t}\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tdeepMerge( target, src[ i ], opts.level, opts.copy, opts.override, opts.extend ); // eslint-disable-line max-len\n\t\t}\n\t\treturn target;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mergefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in two input arrays while iterating from right to left and assign the results to an output array.\n*\n* @module @stdlib/utils/map2-right\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2Right( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2Right( x, y, naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2Right.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2Right.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to an output array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be an array-like object or an ndarray\n* @throws {TypeError} fourth argument must be a function\n* @throws {TypeError} input and output arrays must be either all array-like objects or all ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2Right( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2Right( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2Right( x, y, out, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar isznd;\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tisznd = isndarrayLike( out );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( !isznd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are ndarrays, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\tndarrayFcn( x, y, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( isznd || !isArrayLikeObject( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are array-like objects, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( x.length !== y.length || y.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defaults from './defaults.js';\nimport mergefcn from './mergefcn.js';\n\n\n// MAIN //\n\n/**\n* Merges objects into a target object. Note that the target object is mutated.\n*\n* @name merge\n* @type {Function}\n* @param {Object} target - target object\n* @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n* @throws {Error} must provide a target object and one or more source objects\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} source arguments must be objects\n* @returns {Object} merged (target) object\n*\n* @example\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*/\nvar merge = mergefcn( defaults() );\n\n\n// EXPORTS //\n\nexport default merge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Moves a property from one object to another object.\n*\n* @param {Object} source - source object\n* @param {string} prop - property to move\n* @param {Object} target - target object\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @returns {boolean} boolean indicating whether operation was successful\n*\n* @example\n* var obj1 = { 'a': 'b' };\n* var obj2 = {};\n*\n* var bool = moveProperty( obj1, 'a', obj2 );\n* // returns true\n*\n* @example\n* var obj1 = { 'a': 'b' };\n* var obj2 = {};\n*\n* var bool = moveProperty( obj1, 'c', obj2 );\n* // returns false\n*/\nfunction moveProperty( source, prop, target ) {\n\tvar desc;\n\tif ( typeof source !== 'object' || source === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Source argument must be an object. Value: `%s`.', source ) );\n\t}\n\tif ( typeof target !== 'object' || target === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Target argument must be an object. Value: `%s`.', target ) );\n\t}\n\t// TODO: handle case where gOPD is not supported\n\tdesc = Object.getOwnPropertyDescriptor( source, prop );\n\tif ( desc === void 0 ) {\n\t\treturn false;\n\t}\n\tdelete source[ prop ];\n\tdefineProperty( target, prop, desc );\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default moveProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies a specified number of arguments to a provided function.\n*\n* ## Notes\n*\n* -   The returned function **always** invokes the wrapped function with a specified number of arguments, even when the returned function is provided fewer arguments. The value for the missing arguments is equal to `undefined`.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeInteger} arity - number of arguments\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Function} function wrapper\n*\n* @example\n* function foo() {\n*     var s;\n*     var i;\n*\n*     s = 0;\n*     for ( i = 0; i < arguments.length; i++ ) {\n*         s += arguments[ i ];\n*     }\n*     return s;\n* }\n*\n* var bar = naryFunction( foo, 2 );\n*\n* var out = bar( 1, 2, 3, 4, 5, 6 );\n* // returns 3\n*/\nfunction naryFunction( fcn, arity, thisArg ) {\n\tvar fcns;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( arity < fcns.length ) ? fcns[ arity ] : nary;\n\n\t/**\n\t* Invokes a nullary function.\n\t*\n\t* @private\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary( x ) {\n\t\treturn fcn.call( thisArg, x );\n\t}\n\n\t/**\n\t* Invokes a binary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary( x, y ) {\n\t\treturn fcn.call( thisArg, x, y );\n\t}\n\n\t/**\n\t* Invokes a ternary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary( x, y, z ) {\n\t\treturn fcn.call( thisArg, x, y, z );\n\t}\n\n\t/**\n\t* Invokes a quaternary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary( x, y, z, w ) {\n\t\treturn fcn.call( thisArg, x, y, z, w );\n\t}\n\n\t/**\n\t* Invokes a quinary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {*} v - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary( x, y, z, w, v ) {\n\t\treturn fcn.call( thisArg, x, y, z, w, v );\n\t}\n\n\t/**\n\t* Invokes an n-ary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {*} v - input value\n\t* @param {*} t - input value\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary( x, y, z, w, v, t ) {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ x, y, z, w, v, t ];\n\t\tfor ( i = 6; i < arity; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default naryFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Merge and extend objects.\n*\n* @module @stdlib/utils/merge\n*\n* @example\n* import merge from '@stdlib/utils/merge';\n*\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*\n* @example\n* import { factory as factory } from '@stdlib/utils/merge';\n*\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport mergefcn from './mergefcn.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for merging and extending objects.\n*\n* @param {Options} options - merge options\n* @param {number} [options.level=Infinity] - merge level\n* @param {boolean} [options.copy=true] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override=true] - defines the merge strategy\n* @param {boolean} [options.extend=true] - boolean indicating whether new properties can be added to the target object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which can be used to merge objects\n*\n* @example\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\nfunction factory( options ) {\n\tvar opts;\n\tvar err;\n\topts = defaults();\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn mergefcn( opts );\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {number} [options.level] - merge level\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override] - defines the merge strategy\n* @param {boolean} [options.extend] - boolean indicating whether new properties can be added to the target object\n* @returns {(Error|null)} error object or null\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'level' ) ) {\n\t\topts.level = options.level;\n\t\tif ( !isPositiveInteger( opts.level ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'level', opts.level ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'override' ) ) {\n\t\topts.override = options.override;\n\t\tif (\n\t\t\t!isBoolean( opts.override ) &&\n\t\t\t!isFunction( opts.override )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a boolean or a function. Option: `%s`.', 'override', opts.override ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'extend' ) ) {\n\t\topts.extend = options.extend;\n\t\tif ( !isBoolean( opts.extend ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'extend', opts.extend ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Adds a callback to the \"next tick queue\".\n*\n* ## Notes\n*\n* -   The queue is fully drained after the current operation on the JavaScript stack runs to completion and before the event loop is allowed to continue.\n*\n* @param {Callback} clbk - callback\n* @param {...*} [args] - arguments to provide to the callback upon invocation\n*\n* @example\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* nextTick( beep );\n*/\nfunction nextTick( clbk ) {\n\tvar args;\n\tvar i;\n\n\targs = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\tproc.nextTick( wrapper );\n\n\t/**\n\t* Callback wrapper.\n\t*\n\t* ## Notes\n\t*\n\t* -   The ability to provide additional arguments was added in Node.js v1.8.1. The wrapper provides support for earlier Node.js versions.\n\t*\n\t* @private\n\t*/\n\tfunction wrapper() {\n\t\tclbk.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport base from '@stdlib/array/base/none';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection are falsy.\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} must provide a collection\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* var arr = [ 0, 0, 0, 0, 0 ];\n*\n* var bool = none( arr );\n* // returns true\n*/\nfunction none( collection ) {\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a collection. Value: `%s`.', collection ) );\n\t}\n\treturn base( collection );\n}\n\n\n// EXPORTS //\n\nexport default none;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ -1, -2, -3, -4 ];\n*\n* var bool = noneBy( arr, isPositive );\n* // returns true\n*/\nfunction noneBy( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default noneBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `noneBy` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `noneBy()`, `[].push()` behavior is consistent with `noneByRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ -1, -2, -3, -4 ];\n*\n* var bool = noneByRight( arr, isPositive );\n* // returns true\n*/\nfunction noneByRight( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default noneByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isObject from '@stdlib/assert/is-object';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether every own property of an object fails a test implemented by a predicate function.\n*\n* @param {Object} obj - input object\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isUnderage( age ) {\n*    return ( age < 18 );\n* };\n*\n* var obj = {\n*   'a': 10,\n*   'b': 12,\n*   'c': 15\n* };\n*\n* var bool = noneOwnBy( obj, isUnderage );\n* // returns false\n*/\nfunction noneOwnBy( obj, predicate, thisArg ) {\n\tvar key;\n\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format(' invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) && predicate.call( thisArg, obj[key], key, obj ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default noneOwnBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\nimport isNonEnumerable from '@stdlib/assert/is-nonenumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable property names and symbols\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n*\n* obj.a = 'a';\n* defineProperty( obj, 'b', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'b'\n* });\n*\n* var props = nonEnumerableProperties( obj );\n* // returns [ 'b' ]\n*/\nfunction nonEnumerableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar n;\n\tvar i;\n\n\tout = propertyNames( value );\n\tn = 0;\n\tfor ( i = 0; i < out.length; i++ ) {\n\t\tif ( isNonEnumerable( value, out[ i ] ) ) {\n\t\t\tout[ n ] = out[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tout.length = n;\n\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isNonEnumerable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isNonEnumerable from '@stdlib/assert/is-nonenumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable property names and symbols\n*\n* @example\n* var props = nonEnumerablePropertiesIn( [] );\n* // returns [...]\n*/\nfunction nonEnumerablePropertiesIn( value ) {\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting non-enumerable properties...\n\tcache = {};\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a name more than once\n\t\t\t\tisNonEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisNonEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = nonEnumerablePropertyNames( obj );\n* // returns [ 'beep' ]\n*/\nfunction nonEnumerablePropertyNames( value ) { // eslint-disable-line id-length\n\tvar names;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tnames = getOwnPropertyNames( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tif ( isNonEnumerableProperty( value, names[ i ] ) ) {\n\t\t\tnames[ n ] = names[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tnames.length = n;\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = nonEnumerablePropertyNamesIn( obj );\n* // e.g., returns [ 'beep', ... ]\n*/\nfunction nonEnumerablePropertyNamesIn( value ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting non-enumerable property names...\n\tnames = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertyNamesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable symbol properties\n*\n* @example\n* var symbols = nonEnumerablePropertySymbols( {} );\n*/\nfunction nonEnumerablePropertySymbols( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tsymbols = getOwnPropertySymbols( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tif ( isNonEnumerableProperty( value, symbols[ i ] ) ) {\n\t\t\tsymbols[ n ] = symbols[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tsymbols.length = n;\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable symbol properties\n*\n* @example\n* var symbols = nonEnumerablePropertySymbolsIn( {} );\n*/\nfunction nonEnumerablePropertySymbolsIn( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all non-enumerable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\n\n\n// VARIABLES //\n\nvar RE_INTEGER_INDEX = /^[0-9]+$/;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names which are not integer indices.\n*\n* @param {ObjectLike} obj - input object\n* @returns {Array} key array\n*\n* @example\n* function Foo() {\n*     this[ 0 ] = 3.14;\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var keys = nonIndexKeys( obj );\n* // e.g., returns [ 'beep' ]\n*/\nfunction nonIndexKeys( obj ) {\n\tvar keys;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tN = len;\n\tj = 0;\n\n\t// Compress the list of keys by using a lagging index and moving non-integer indices to earlier positions in the array...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( RE_INTEGER_INDEX.test( keys[ i ] ) ) {\n\t\t\tN -= 1;\n\t\t} else {\n\t\t\tkeys[ j ] = keys[ i ];\n\t\t\tj += 1;\n\t\t}\n\t}\n\tkeys.length = N;\n\treturn keys;\n}\n\n\n// EXPORTS //\n\nexport default nonIndexKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isArray from '@stdlib/assert/is-array';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} second argument must an an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'boop'\n* });\n* // returns { 'beep': 'a', 'boop': 'b' }\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'beep'\n* });\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var out = invert( obj, {\n*     'duplicates': false\n* });\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invert( obj, opts ) {\n\tvar allowDupes = true;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'duplicates', allowDupes ) );\n\t\t\t}\n\t\t}\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = obj[ key ];\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tout[ obj[ key ] ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default invert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isArray from '@stdlib/assert/is-array';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys, according to a transform function.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} options argument must an an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* function transform( key, value ) {\n*     return key + value;\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop'\n* };\n* var out = invertBy( obj, transform );\n* // returns { 'abeep': 'a', 'bboop': 'b' }\n*\n* @example\n* function transform( key, value ) {\n*     return value;\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'beep'\n* };\n* var out = invertBy( obj, transform );\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* function transform( key, value ) {\n*     return value;\n* }\n*\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var opts = {\n*     'duplicates': false\n* };\n* var out = invertBy( obj, opts, transform );\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invertBy( obj, opts, transform ) {\n\tvar allowDupes;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar cb;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\tallowDupes = true;\n\tif ( arguments.length === 2 ) {\n\t\tcb = opts;\n\t} else {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'duplicates', allowDupes ) );\n\t\t\t}\n\t\t}\n\t\tcb = transform;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = cb( key, obj[ key ], obj );\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = cb( key, obj[ key ], obj );\n\t\t\tout[ val ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default invertBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy excluding specified keys.\n*\n* @param {Object} obj - source object\n* @param {(string|StringArray)} keys - keys to exclude\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be either a string or an array of strings\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omit( obj1, 'b' );\n* // returns { 'a': 1 }\n*/\nfunction omit( obj, keys ) {\n\tvar ownKeys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\townKeys = objectKeys( obj );\n\tout = {};\n\tif ( isString( keys ) ) {\n\t\tfor ( i = 0; i < ownKeys.length; i++ ) {\n\t\t\tkey = ownKeys[ i ];\n\t\t\tif ( key !== keys ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tif ( isStringArray( keys ) ) {\n\t\tfor ( i = 0; i < ownKeys.length; i++ ) {\n\t\t\tkey = ownKeys[ i ];\n\t\t\tif ( indexOf( keys, key ) === -1 ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Second argument must be either a string or an array of strings. Value: `%s`.', keys ) );\n}\n\n\n// EXPORTS //\n\nexport default omit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy excluding properties for which a predicate returns a truthy value.\n*\n* @param {Object} obj - source object\n* @param {Function} predicate - predicate function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omitBy( obj1, predicate );\n* // returns { 'a': 1 }\n*/\nfunction omitBy( obj, predicate ) {\n\tvar keys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tout = {};\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tif ( !predicate( key, obj[ key ] ) ) {\n\t\t\tout[ key ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default omitBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* global window */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport isURI from '@stdlib/assert/is-uri';\n\n\n// MAIN //\n\n/**\n* Opens a URL.\n*\n* @param {string} url - URL to open\n* @throws {TypeError} must provide a valid URI\n* @returns {Window} `window` object\n*\n* @example\n* var win = openURL( 'https://google.com' );\n*/\nfunction openURL( url ) {\n\tif ( !isURI( url ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a valid URI. Value: `%s`.', url ) );\n\t}\n\treturn window.open( url );\n}\n\n\n// EXPORTS //\n\nexport default openURL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var add2 = papply( add, 2 );\n*\n* var sum = add2( 3 );\n* // returns 5\n*/\nfunction papply( fcn ) {\n\tvar pargs;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tpargs = new Array( arguments.length-1 );\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\tpargs[ i-1 ] = arguments[ i ];\n\t}\n\treturn papplied;\n\n\t/**\n\t* Partially applied function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*} partially applied function result\n\t*/\n\tfunction papplied() {\n\t\tvar args;\n\t\tvar j;\n\t\targs = pargs.slice();\n\t\tfor ( j = 0; j < arguments.length; j++ ) {\n\t\t\targs.push( arguments[ j ] );\n\t\t}\n\t\treturn fcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default papply;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments from the right.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function say( text, name ) {\n*     return text + ', ' + name + '.';\n* }\n*\n* var toGrace = papplyRight( say, 'Grace Hopper' );\n*\n* var str = toGrace( 'Hello' );\n* // returns 'Hello, Grace Hopper.'\n*\n* str = toGrace( 'Thank you' );\n* // returns 'Thank you, Grace Hopper.'\n*/\nfunction papplyRight( fcn ) {\n\tvar pargs;\n\tvar len;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = arguments.length - 1;\n\tpargs = new Array( len );\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\tpargs[ i-1 ] = arguments[ i ];\n\t}\n\treturn pappliedRight;\n\n\t/**\n\t* Partially applied function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*} partially applied function result\n\t*/\n\tfunction pappliedRight() {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar j;\n\t\tnargs = arguments.length;\n\t\targs = new Array( len+nargs );\n\t\tfor ( j = 0; j < args.length; j++ ) {\n\t\t\tif ( j >= nargs ) {\n\t\t\t\targs[ j ] = pargs[ j-nargs ];\n\t\t\t} else {\n\t\t\t\targs[ j ] = arguments[ j ];\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default papplyRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../../keys';\nimport ENV from '@stdlib/process/env';\n\n\n// FUNCTIONS //\n\n/**\n* Copies `process.env`.\n*\n* ## Notes\n*\n* -   This implementation accommodates `process.env` on older Node.js versions (<=v0.10.x), where `process.env` was object-like, but would show unexpected behavior when attempting to get own property descriptors.\n*\n* @private\n* @returns {Object} copy of `process.env`\n*/\nfunction copy() {\n\tvar keys;\n\tvar env;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( ENV );\n\tout = {};\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tenv = keys[ i ];\n\t\tout[ env ] = ENV[ env ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns worker environment variables.\n*\n* @private\n* @param {Options} opts - options\n* @param {string} opts.cmd - executable file/command\n* @param {boolean} opts.ordered - boolean indicating whether to preserve order of script output\n* @param {(NonNegativeInteger|null)} opts.uid - process user identity\n* @param {(NonNegativeInteger|null)} opts.gid - process group identity\n* @param {string} opts.encoding - `stdio` encoding\n* @param {NonNegativeInteger} opts.maxBuffer - max child process `stdio` buffer size\n* @returns {Object} environment variables\n*/\nfunction env( opts ) {\n\tvar out = copy();\n\n\tout.WORKER_CMD = opts.cmd;\n\tout.WORKER_ENCODING = opts.encoding;\n\tout.WORKER_MAX_BUFFER = opts.maxBuffer;\n\n\tif ( opts.ordered ) {\n\t\tout.WORKER_ORDERED = '1';\n\t}\n\tif ( opts.uid ) {\n\t\tout.WORKER_UID = opts.uid;\n\t}\n\tif ( opts.gid ) {\n\t\tout.WORKER_GID = opts.gid;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default env;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fork = require( 'child_process' ).fork;\nvar path = require( 'path' );\nvar logger = require( 'debug' );\nimport objectKeys from './../../../keys';\nimport format from '@stdlib/string/format';\nimport getOpts from './options.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'parallel:exec' );\nvar WORKER_FILEPATH = path.resolve( __dirname, './worker/index.js' );\n\n\n// MAIN //\n\n/**\n* Executes scripts in parallel.\n*\n* @private\n* @param {StringArray} files - script absolute file paths\n* @param {Options} opts - options\n* @param {PositiveInteger} opts.concurrency - number of scripts to execute concurrently\n* @param {PositiveInteger} opts.workers - number of workers\n* @param {string} opts.cmd - executable file/command\n* @param {boolean} opts.ordered - boolean indicating whether to preserve order of script output\n* @param {(NonNegativeInteger|null)} opts.uid - process user identity\n* @param {(NonNegativeInteger|null)} opts.gid - process group identity\n* @param {string} opts.encoding - `stdio` encoding\n* @param {NonNegativeInteger} opts.maxBuffer - max child process `stdio` buffer size\n* @param {Callback} clbk - callback to invoke after executing all scripts\n*/\nfunction exec( files, opts, clbk ) {\n\tvar numClosed;\n\tvar workers;\n\tvar pending;\n\tvar fopts;\n\tvar args;\n\tvar proc;\n\tvar pids;\n\tvar pid;\n\tvar idx;\n\tvar err;\n\tvar i;\n\n\tdebug( 'Options: %s.', JSON.stringify( opts ) );\n\tnumClosed = 0;\n\n\tdebug( 'Creating %d workers...', opts.workers );\n\tworkers = {};\n\targs = [];\n\tfopts = getOpts( opts );\n\tfor ( i = 0; i < opts.workers; i++ ) {\n\t\tdebug( 'Creating child process...' );\n\t\tproc = fork( WORKER_FILEPATH, args, fopts );\n\n\t\tproc.on( 'error', onError( proc ) );\n\t\tproc.on( 'close', onClose( proc ) );\n\t\tproc.on( 'exit', onExit( proc ) );\n\t\tproc.on( 'disconnect', onDisconnect( proc ) );\n\t\tproc.on( 'message', onMessage( proc ) );\n\n\t\tdebug( 'Child process created. pid: %d.', proc.pid );\n\t\tworkers[ proc.pid ] = proc;\n\t}\n\tpids = objectKeys( workers );\n\tdebug( '%d workers created.', pids.length );\n\n\tdebug( 'Running %d scripts concurrently...', opts.concurrency );\n\tpending = {};\n\tidx = -1;\n\tfor ( i = 0; i < opts.concurrency; i++ ) {\n\t\tpid = pids[ i%pids.length ];\n\t\tnext( workers[ pid ] ); // eslint-disable-line node/callback-return\n\t}\n\n\t/**\n\t* Instructs a child process to run the next script.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {void}\n\t*/\n\tfunction next( child ) {\n\t\tvar numPending;\n\t\tidx += 1;\n\t\tif ( idx >= files.length ) {\n\t\t\tnumPending = objectKeys( pending ).length;\n\t\t\tif ( numPending > 0 ) {\n\t\t\t\tdebug( '%d scripts are pending.', numPending );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdebug( 'All scripts have finished.' );\n\t\t\treturn close();\n\t\t}\n\t\tdebug( 'Instructing child process to run script: %s. pid: %d.', files[ idx ], child.pid );\n\t\tchild.send( files[ idx ] );\n\t\tpending[ files[ idx ] ] = true;\n\n\t\tdebug( '%d of %d scripts have been processed.', idx, files.length );\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon receiving a message from a child process.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onMessage( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon receiving a message from a child process.\n\t\t*\n\t\t* @private\n\t\t* @param {string} filepath - script filepath\n\t\t*/\n\t\tfunction listener( filepath ) {\n\t\t\tdebug( 'Child process message: %s. pid: %d.', filepath, child.pid );\n\n\t\t\t// Remove the script from the listing of pending scripts:\n\t\t\tdelete pending[ filepath ];\n\n\t\t\t// Indicate that the child process is ready for its next task:\n\t\t\tnext( child );\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon child process close.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onClose( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon child process close.\n\t\t*\n\t\t* @private\n\t\t* @param {(number|null)} code - exit code\n\t\t* @param {(string|null)} signal - termination signal\n\t\t*/\n\t\tfunction listener( code, signal ) {\n\t\t\tdebug( 'Child process closed. Code: %d. Signal: %s. pid: %d.', code, signal, child.pid );\n\t\t\tprocessExit( code, signal );\n\t\t\tchildClosed();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked if a child closes.\n\t*\n\t* @private\n\t*/\n\tfunction childClosed() {\n\t\tnumClosed += 1;\n\t\tdebug( '%d of %d child processes have closed.', numClosed, opts.workers );\n\t\tif ( numClosed === opts.workers ) {\n\t\t\tdone(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon child process exit.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onExit( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon child process exit.\n\t\t*\n\t\t* @private\n\t\t* @param {(number|null)} code - exit code\n\t\t* @param {(string|null)} signal - termination signal\n\t\t*/\n\t\tfunction listener( code, signal ) {\n\t\t\tdebug( 'Child process exited. Code: %d. Signal: %s. pid: %d.', code, signal, child.pid );\n\t\t\tprocessExit( code, signal );\n\t\t}\n\t}\n\n\t/**\n\t* Closes all workers.\n\t*\n\t* @private\n\t* @param {Error} [error] - error object\n\t*/\n\tfunction close( error ) {\n\t\tvar pids;\n\t\tvar pid;\n\t\tvar i;\n\t\tif ( error && !err ) {\n\t\t\terr = error;\n\t\t}\n\t\tdebug( 'Instructing child processes to close...' );\n\t\tpids = objectKeys( workers );\n\t\tfor ( i = 0; i < pids.length; i++ ) {\n\t\t\tpid = pids[ i ];\n\t\t\tdebug( 'Instructing child process (pid: %d) to close...', pid );\n\t\t\tworkers[ pid ].send( 'close' );\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon child process disconnect.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onDisconnect( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon child process disconnect.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction listener() {\n\t\t\tdebug( 'Child process disconnected. pid: %d.', child.pid );\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon encountering a child process error.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onError( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon a child process error.\n\t\t*\n\t\t* @private\n\t\t* @param {Error} error - error object\n\t\t*/\n\t\tfunction listener( error ) {\n\t\t\tdebug( 'Child process error: %s. pid: %d.', error.message, child.pid );\n\t\t\tclose( error );\n\t\t}\n\t}\n\n\t/**\n\t* Processes process exit values. If provided a non-zero exit code or termination signal, instructs the process to close.\n\t*\n\t* @private\n\t* @param {(number|null)} code - exit code\n\t* @param {(string|null)} signal - termination signal\n\t* @returns {void}\n\t*/\n\tfunction processExit( code, signal ) {\n\t\tvar error;\n\t\tif ( err ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( code !== null && code !== 0 ) {\n\t\t\terror = new Error( format( 'unexpected error. Child process failed with exit code: `%u`.', code ) );\n\t\t} else if ( signal !== null ) {\n\t\t\terror = new Error( format( 'unexpected error. Child process failed due to termination signal: `%s`.', signal ) );\n\t\t}\n\t\tif ( error ) {\n\t\t\terror.code = code;\n\t\t\terror.signal = signal;\n\t\t\treturn close( error );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once all tasks are finished.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction done() {\n\t\tif ( err ) {\n\t\t\treturn clbk( err );\n\t\t}\n\t\tclbk();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default exec;\n","export default '/home/runner/work/utils/utils/parallel/lib/node'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport cwd from '@stdlib/process/cwd';\nimport env from './env.js';\n\n\n// MAIN //\n\n/**\n* Returns child process options.\n*\n* @private\n* @param {Options} options - worker options\n* @param {(NonNegativeInteger|null)} [options.uid] - process user identity\n* @param {(NonNegativeInteger|null)} [options.gid] - process group identity\n* @returns {Object} child process options\n*/\nfunction getOpts( options ) {\n\tvar opts = {\n\t\t'cwd': cwd(),\n\t\t'env': env( options ),\n\t\t'stdio': 'inherit' // Use stdio of parent process\n\t};\n\tif ( options.uid ) {\n\t\topts.uid = options.uid;\n\t}\n\tif ( options.gid ) {\n\t\topts.gid = options.gid;\n\t}\n\treturn opts;\n}\n\n\n// EXPORTS //\n\nexport default getOpts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar path = require( 'path' );\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport cwd from '@stdlib/process/cwd';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport exec from './node';\n\n\n// MAIN //\n\n/**\n* Executes scripts in parallel.\n*\n* @param {StringArray} files - script file paths\n* @param {Options} [options] - function options\n* @param {string} [options.cmd='node'] - executable file/command\n* @param {PositiveInteger} [options.concurrency] - number of scripts to execute concurrently\n* @param {PositiveInteger} [options.workers] - number of workers\n* @param {boolean} [options.ordered=false] - boolean indicating whether to preserve the order of script output\n* @param {NonNegativeInteger} [options.uid] - process user identity\n* @param {NonNegativeInteger} [options.gid] - process group identity\n* @param {NonNegativeInteger} [options.maxBuffer=200*1024*1024] - max child process `stdio` buffer size\n* @param {Callback} clbk - callback to invoke after executing all scripts\n* @throws {TypeError} first argument must be an array of strings\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n*\n* @example\n* var files = [ './a.js', './b.js ' ];\n*\n* var opts = {\n*     'workers': 3,\n*     'concurrency': 3\n* };\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* parallel( files, opts, done );\n*/\nfunction parallel() {\n\tvar options;\n\tvar files;\n\tvar opts;\n\tvar clbk;\n\tvar err;\n\tvar dir;\n\tvar i;\n\n\tfiles = arguments[ 0 ];\n\tif ( !isStringArray( files ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of strings. Value: `%s`.', files ) );\n\t}\n\tfiles = files.slice();\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\toptions = arguments[ 1 ];\n\t\tclbk = arguments[ 2 ];\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t} else {\n\t\tclbk = arguments[ 1 ];\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\t// Prevent the number of concurrent scripts exceeding the number of actual scripts to run.\n\tif ( opts.concurrency > files.length ) {\n\t\topts.concurrency = files.length;\n\t}\n\t// Prevent the number of workers exceeding the number of concurrent scripts (excess capacity), as some workers would never be allocated scripts to run and always be idle.\n\tif ( opts.workers > opts.concurrency ) {\n\t\topts.workers = opts.concurrency;\n\t}\n\t// Resolve any relative paths to absolute paths...\n\tdir = cwd();\n\tfor ( i = 0; i < files.length; i++ ) {\n\t\tfiles[ i ] = path.resolve( dir, files[ i ] );\n\t}\n\texec( files, opts, done );\n\n\t/**\n\t* Callback invoked after executing all scripts.\n\t*\n\t* @private\n\t* @param {Error} error - error object\n\t* @returns {void}\n\t*/\n\tfunction done( error ) {\n\t\tif ( error ) {\n\t\t\treturn clbk( error );\n\t\t}\n\t\tclbk();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default parallel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport numCPUs from '@stdlib/os/num-cpus';\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t// Number of workers:\n\t\t'workers': numCPUs - 1,\n\n\t\t// Number of scripts to execute concurrently:\n\t\t'concurrency': numCPUs - 1,\n\n\t\t// Executable file/command:\n\t\t'cmd': 'node',\n\n\t\t// Boolean indicating whether script output can be interleaved or must be ordered:\n\t\t'ordered': false,\n\n\t\t// Process user identity:\n\t\t'uid': null,\n\n\t\t// Process group identity:\n\t\t'gid': null,\n\n\t\t// `stdio` encoding:\n\t\t'encoding': 'buffer',\n\n\t\t// Max child process `stdio` buffer size:\n\t\t'maxBuffer': 200 * 1024 * 1024 // bytes\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.cmd] - executable file/command\n* @param {PositiveInteger} [options.concurrency] - number of scripts to execute concurrently\n* @param {PositiveInteger} [options.workers] - number of workers\n* @param {boolean} [options.ordered] - boolean indicating whether to preserve the order of script output\n* @param {NonNegativeInteger} [options.uid] - process user identity\n* @param {NonNegativeInteger} [options.gid] - process group identity\n* @param {NonNegativeInteger} [options.maxBuffer] - max child process `stdio` buffer size\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'concurrency': 4,\n*     'workers': 2\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'concurrency' ) ) {\n\t\topts.concurrency = options.concurrency;\n\t\tif ( !isPositiveInteger( opts.concurrency ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'concurrency', opts.concurrency ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'workers' ) ) {\n\t\topts.workers = options.workers;\n\t\tif ( !isPositiveInteger( opts.workers ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'workers', opts.workers ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'cmd' ) ) {\n\t\topts.cmd = options.cmd;\n\t\tif ( !isString( opts.cmd ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'cmd', opts.cmd ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'ordered' ) ) {\n\t\topts.ordered = options.ordered;\n\t\tif ( !isBoolean( opts.ordered ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'ordered', opts.ordered ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'uid' ) ) {\n\t\topts.uid = options.uid;\n\t\tif ( !isNonNegativeInteger( opts.uid ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'uid', opts.uid ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'gid' ) ) {\n\t\topts.gid = options.gid;\n\t\tif ( !isNonNegativeInteger( opts.gid ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'gid', opts.gid ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'maxBuffer' ) ) {\n\t\topts.maxBuffer = options.maxBuffer;\n\t\tif ( !isNonNegativeInteger( opts.maxBuffer ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'maxBuffer', opts.maxBuffer ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Attempts to parse a string as JSON.\n*\n* @param {string} str - string to parse\n* @param {Function} [reviver] - transformation function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} reviver must be a function\n* @returns {(*|Error)} parsed value or parse error\n*\n* @example\n* var obj = parseJSON( '{\"beep\":\"boop\"}' );\n* // returns {'beep':'boop'}\n*/\nfunction parseJSON( str, reviver ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( reviver ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Reviver argument must be a function. Value: `%s`.', reviver ) );\n\t\t}\n\t}\n\ttry {\n\t\treturn JSON.parse( str, reviver );\n\t} catch ( error ) {\n\t\treturn error;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default parseJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport parseJSON from './../../parse-json';\nimport format from '@stdlib/string/format';\nimport isWhitespace from '@stdlib/assert/is-whitespace';\nimport reEOL from '@stdlib/regexp/eol';\n\n\n// MAIN //\n\n/**\n* Parses a string as newline-delimited JSON (NDJSON).\n*\n* @param {string} str - input string\n* @param {Function} [reviver] - transformation function applied to each line\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} reviver must be a function\n* @returns {(Array|Error)} array of parsed values or an error\n*\n* @example\n* var out = parseNDJSON( '{\"name\":\"John\"}\\n{\"name\":\"Doe\"}' );\n* // returns [ { 'name': 'John' }, { 'name': 'Doe' } ]\n*/\nfunction parseNDJSON( str, reviver ) {\n\tvar parsed;\n\tvar RE_EOL;\n\tvar lines;\n\tvar out;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 && !isFunction( reviver ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Reviver argument must be a function. Value: `%s`.', str ) );\n\t}\n\tif ( isWhitespace( str ) || str === '' ) {\n\t\treturn [];\n\t}\n\n\tRE_EOL = reEOL();\n\n\tlines = str.split( RE_EOL );\n\n\t// Remove trailing newline:\n\tif ( lines[ lines.length - 1 ].length === 0 ) {\n\t\tlines.pop();\n\t}\n\n\tout = [];\n\n\tfor ( i = 0; i < lines.length; i++ ) {\n\t\tif ( reviver ) {\n\t\t\tparsed = parseJSON( lines[ i ], reviver );\n\t\t} else {\n\t\t\tparsed = parseJSON( lines[ i ] );\n\t\t}\n\t\tif ( parsed instanceof Error ) {\n\t\t\treturn parsed;\n\t\t}\n\n\t\tout.push( parsed );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default parseNDJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy containing only specified keys. If a key does not exist as an own property in a source object, the key is ignored.\n*\n* @param {Object} obj - source object\n* @param {(string|StringArray)} keys - keys to copy\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be either a string or an array of strings\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pick( obj1, 'b' );\n* // returns { 'b': 2 }\n*/\nfunction pick( obj, keys ) {\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tif ( isString( keys ) ) {\n\t\tif ( hasOwnProp( obj, keys ) ) {\n\t\t\tout[ keys ] = obj[ keys ];\n\t\t}\n\t\treturn out;\n\t}\n\tif ( isStringArray( keys ) ) {\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Second argument must be either a string or an array of strings. Value: `%s`.', keys ) );\n}\n\n\n// EXPORTS //\n\nexport default pick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies specified arguments to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeIntegerArray} indices - argument indices\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be an array of nonnegative integers\n* @returns {Function} function wrapper\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* var bar = pickArguments( foo, [ 0, 2 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction pickArguments( fcn, indices, thisArg ) {\n\tvar fcns;\n\tvar idx;\n\tvar v;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isCollection( indices ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object containing nonnegative integers. Value: `%s`.', indices ) );\n\t}\n\tidx = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tv = indices[ i ];\n\t\tif ( !isNonNegativeInteger( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object containing nonnegative integers. Value: `%s`.', indices ) );\n\t\t}\n\t\tidx.push( v );\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( idx.length < fcns.length ) ? fcns[ idx.length ] : nary;\n\n\t/**\n\t* Invokes a nullary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ] );\n\t}\n\n\t/**\n\t* Invokes a binary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ] );\n\t}\n\n\t/**\n\t* Invokes a ternary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quaternary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quinary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ], arguments[ idx[4] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes an n-ary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ idx[i] ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default pickArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy containing properties for which a predicate returns a truthy value.\n*\n* @param {Object} obj - source object\n* @param {Function} predicate - predicate function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pickBy( obj1, predicate );\n* // returns { 'b': 2 }\n*/\nfunction pickBy( obj, predicate ) {\n\tvar keys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tout = {};\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tif ( predicate( key, obj[ key ] ) ) {\n\t\t\tout[ key ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default pickBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Extracts a property value from each element of an object array.\n*\n* @param {Array} arr - source array\n* @param {*} prop - property to access\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=true] - boolean indicating whether to return a new data structure\n* @throws {TypeError} first argument must be an object array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} destination array\n*\n* @example\n* var arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* var out = pluck( arr, 'a' );\n* // returns [ 1, 0.5 ]\n*\n* @example\n* var arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* var out = pluck( arr, 'a', {'copy':false} );\n* // returns [ 1, 0.5 ]\n*\n* var bool = ( arr[ 0 ] === out[ 0 ] );\n* // returns true\n*/\nfunction pluck( arr, prop, options ) {\n\tvar opts;\n\tvar out;\n\tvar err;\n\tvar v;\n\tvar i;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array. Value: `%s`.', arr ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.copy ) {\n\t\tout = new Array( arr.length );\n\t} else {\n\t\tout = arr;\n\t}\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\t\tif (\n\t\t\tv !== void 0 &&\n\t\t\tv !== null &&\n\t\t\thasOwnProp( v, prop )\n\t\t) {\n\t\t\tout[ i ] = v[ prop ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default pluck;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'copy': true\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {boolean} [options.copy] - boolean indicating whether to return a new data structure\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'copy': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport popObject from './pop_object.js';\nimport popTypedArray from './pop_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Removes and returns the last element of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {Array} updated collection and the removed element\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = pop( arr );\n* // returns [ [ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = pop( arr );\n* // returns [ <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*/\nfunction pop( collection ) {\n\tvar v;\n\tif ( isArray( collection ) ) {\n\t\tv = collection.pop();\n\t\treturn [ collection, v ];\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn popTypedArray( collection );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn popObject( collection );\n\t}\n\tthrow new TypeError( format( 'invalid argument. Must provide either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default pop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the last element of a typed array.\n*\n* @private\n* @param {TypedArray} arr - input array\n* @returns {Array} input array and the removed element\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = pop( arr );\n* // returns [ <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*/\nfunction pop( arr ) {\n\tvar view;\n\tvar len;\n\tvar v;\n\tif ( arr.length === 0 ) {\n\t\treturn [ arr, void 0 ];\n\t}\n\tlen = arr.length - 1;\n\tv = arr[ len ];\n\tview = new arr.constructor( arr.buffer, arr.byteOffset, len );\n\treturn [ view, v ];\n}\n\n\n// EXPORTS //\n\nexport default pop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the last element of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @returns {Array} input object and the removed element\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* var out = pop( obj );\n* // returns [ { 'length': 1, '0': 1.0 }, 2.0 ]\n*/\nfunction pop( obj ) {\n\tvar len;\n\tvar v;\n\tif ( obj.length === 0 ) {\n\t\treturn [ obj, void 0 ];\n\t}\n\tlen = obj.length - 1;\n\tv = obj[ len ];\n\tdelete obj[ len ];\n\tobj.length = len;\n\treturn [ obj, v ];\n}\n\n\n// EXPORTS //\n\nexport default pop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport prependArray from './prepend_array.js';\nimport prependObject from './prepend_object.js';\nimport prependTypedArray from './prepend_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds elements from one collection to the beginning of another collection.\n*\n* @param {Collection} collection1 - collection\n* @param {Collection} collection2 - collection containing elements to add\n* @throws {TypeError} first argument must be either an array, typed array, or an array-like object\n* @throws {TypeError} second argument must be an array-like object\n* @returns {Collection} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( collection1, collection2 ) {\n\tif ( !isCollection( collection2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', collection2 ) );\n\t}\n\tif ( isArray( collection1 ) ) {\n\t\treturn prependArray( collection1, collection2 );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection1 ) ) {\n\t\treturn prependTypedArray( collection1, collection2 );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection1 !== null &&\n\t\ttypeof collection1 === 'object' &&\n\t\ttypeof collection1.length === 'number' &&\n\t\tisInteger( collection1.length ) &&\n\t\tcollection1.length >= 0\n\t) {\n\t\treturn prependObject( collection1, collection2 );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection1 ) );\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( arr, items ) {\n\tvar i;\n\tfor ( i = items.length-1; i >= 0; i-- ) {\n\t\tarr.unshift( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is preceded by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar offset;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\toffset = arr.byteOffset;\n\n\tif ( offset < ibytes ) {\n\t\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\t\ttotal = nbytes + ibytes + offset;\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\toffset = buf.byteLength - nbytes - ibytes;\n\t\tv = new arr.constructor( buf, offset, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i+n ] = arr[ i ];\n\t\t}\n\t} else {\n\t\toffset -= ibytes;\n\t\tv = new arr.constructor( arr.buffer, offset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {ArrayLike} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = prepend( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 3.0, '1': 4.0, '2': 1.0, '3': 2.0 }\n*/\nfunction prepend( obj, items ) {\n\tvar len;\n\tvar n;\n\tvar i;\n\n\tlen = obj.length;\n\tn = items.length;\n\n\t// Shift all existing elements to the right...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tobj[ i+n ] = obj[ i ];\n\t}\n\t// Add new elements...\n\tfor ( i = 0; i < n; i++ ) {\n\t\tobj[ i ] = items[ i ];\n\t}\n\tobj.length = len + n;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = properties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction properties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tout = propertyNames( value );\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tout.push( tmp[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default properties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport Object from '@stdlib/object/ctor';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited property names and symbols\n*\n* @example\n* var props = propertiesIn( [] );\n* // returns [...]\n*/\nfunction propertiesIn( value ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all properties...\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default propertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyDescriptor from './../../property-descriptor';\nimport getPrototypeOf from './../../get-prototype-of';\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own or inherited property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = propertyDescriptorIn( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction propertyDescriptorIn( value, property ) {\n\tvar desc;\n\tvar obj;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain in search of a specified property...\n\tdo {\n\t\tdesc = getOwnPropertyDescriptor( obj, property );\n\t\tif ( desc ) {\n\t\t\treturn desc;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default propertyDescriptorIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyDescriptors from './../../property-descriptors';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport objectKeys from './../../keys';\nimport defineProperty from './../../define-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an object's own and inherited property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @returns {Object} own and inherited property descriptors\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = propertyDescriptorsIn( obj );\n* // returns { 'beep': {...}, 'foo': {...}, ... }\n*/\nfunction propertyDescriptorsIn( value ) {\n\tvar desc;\n\tvar keys;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn {};\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all property descriptors...\n\tdesc = {};\n\tdo {\n\t\ttmp = getOwnPropertyDescriptors( obj );\n\t\tkeys = objectKeys( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a property name always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tkeys = getOwnPropertySymbols( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a symbol property always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn desc;\n}\n\n\n// EXPORTS //\n\nexport default propertyDescriptorsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport Object from '@stdlib/object/ctor';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = propertyNamesIn( obj );\n* // e.g., returns [ 'beep', 'foo', ... ]\n*/\nfunction propertyNamesIn( value ) {\n\tvar names;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all enumerable and non-enumerable property names...\n\tnames = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( names, tmp[ i ] ) === false ) {\n\t\t\t\tnames.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default propertyNamesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport Object from '@stdlib/object/ctor';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited symbol properties\n*\n* @example\n* var symbols = propertySymbolsIn( [] );\n*/\nfunction propertySymbolsIn( value ) {\n\tvar symbols;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all symbol properties...\n\tsymbols = [];\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( symbols, tmp[ i ] ) === false ) {\n\t\t\t\tsymbols.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default propertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport pushArray from './push_array.js';\nimport pushObject from './push_object.js';\nimport pushTypedArray from './push_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @param {...*} items - items to add\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {(Array|TypedArray|Object)} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( collection ) {\n\tvar items;\n\tvar i;\n\titems = [];\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\titems.push( arguments[ i+1 ] );\n\t}\n\tif ( isArray( collection ) ) {\n\t\treturn pushArray( collection, items );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn pushTypedArray( collection, items );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn pushObject( collection, items );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = push( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( arr, items ) {\n\tvar i;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tarr.push( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is followed by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {Array} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\ttotal = nbytes + ibytes + arr.byteOffset;\n\n\tif ( arr.buffer.byteLength < total ) {\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\tv = new arr.constructor( buf, 0, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i ] = arr[ i ];\n\t\t}\n\t} else {\n\t\tv = new arr.constructor( arr.buffer, arr.byteOffset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ len+i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {Array} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = push( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 1.0, '1': 2.0, '2': 3.0, '3': 4.0 }\n*/\nfunction push( obj, items ) {\n\tvar len;\n\tvar i;\n\tlen = obj.length;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tobj[ len+i ] = items[ i ];\n\t}\n\tobj.length = len + items.length;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/max';\nimport FLOAT32 from '@stdlib/constants/float32/max';\nimport FLOAT64 from '@stdlib/constants/float64/max';\n\n\n// MAIN //\n\n/**\n* Returns the maximum finite value capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} maximum finite value\n*\n* @example\n* var m = realmax( 'float64' );\n* // returns 1.7976931348623157e+308\n*\n* @example\n* var m = realmax( 'float16' );\n* // returns 65504.0\n*\n* @example\n* var m = realmax( 'float32' );\n* // returns 3.4028234663852886e+38\n*/\nfunction realmax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default realmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/smallest-normal';\nimport FLOAT32 from '@stdlib/constants/float32/smallest-normal';\nimport FLOAT64 from '@stdlib/constants/float64/smallest-normal';\n\n\n// MAIN //\n\n/**\n* Returns the smallest positive normal value capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} smallest positive normal value\n*\n* @example\n* var m = realmin( 'float64' );\n* // returns 2.2250738585072014e-308\n*\n* @example\n* var m = realmin( 'float16' );\n* // returns 0.00006103515625\n*\n* @example\n* var m = realmin( 'float32' );\n* // returns 1.1754943508222875e-38\n*/\nfunction realmin( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default realmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = reduce( x, new Complex64( 0.0, 0.0 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 16.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction reduce( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn fcn.call( thisArg, initial, get( xbuf, ox ), 0, ref );\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, ix ), i, ref );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} reducer - reduction function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = reduce( arr, 0, sum );\n* // returns 10\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n*\n* var out = reduce( arr, 0, naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction reduce( arr, initial, reducer, thisArg ) {\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, reducer, thisArg );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default reduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum:\n* var out = reduce( x, 0, sum );\n* // returns 10\n*/\nfunction reduce( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, i ), i, xbuf );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = reduceRight( x, new Complex64( 0.0, 0.0 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 16.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction reduceRight( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn fcn.call( thisArg, initial, get( xbuf, ox ), 0, ref );\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, ix ), i, ref );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array while iterating from right to left and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} reducer - reduction function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = reduceRight( arr, 0, sum );\n* // returns 10\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n*\n* var out = reduceRight( arr, 0, naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction reduceRight( arr, initial, reducer, thisArg ) {\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, reducer, thisArg );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default reduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum:\n* var out = reduceRight( x, 0, sum );\n* // returns 10\n*/\nfunction reduceRight( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, i ), i, xbuf );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Reduces the number of dimensions by one of a two-dimensional nested array by applying a function against an accumulator and each element along the innermost dimension and returning the accumulation results as a one-dimensional array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<Collection>} arr - array of arrays\n* @param {ArrayLikeObject} initial - initial values\n* @param {Function} reducer - reduction function\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array of arrays\n* @throws {TypeError} second argument must be an array-like object\n* @throws {RangeError} second argument must have a length equal to the size of the outermost input array dimension\n* @throws {TypeError} third argument must be a function\n* @returns {Array} results\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var arr = [\n*     [ 1, 2, 3 ],\n*     [ 4, 5, 6 ]\n* ];\n*\n* var out = reduce2d( arr, [ 0, 0 ], naryFunction( add, 2 ) );\n* // returns [ 6, 15 ]\n*/\nfunction reduce2d( arr, initial, reducer, thisArg ) {\n\tvar out;\n\tvar acc;\n\tvar M;\n\tvar N;\n\tvar a;\n\tvar i;\n\tvar j;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isArrayLikeObject( initial ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', initial ) );\n\t}\n\tif ( initial.length !== arr.length ) {\n\t\tthrow new RangeError( 'invalid argument. Second argument must have a length equal to the size of the outermost input array dimension.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tM = arr.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( !isCollection( a ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object containing array-like objects. Index: `%u`. Value: `%s`.', i, a ) );\n\t\t}\n\t\tN = a.length;\n\t\tacc = initial[ i ];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tacc = reducer.call( thisArg, acc, a[ j ], [ i, j ], arr );\n\t\t}\n\t\tout.push( acc );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default reduce2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function according to a predicate function.\n*\n* ## Notes\n*\n-   The predicate function is provided the following arguments:\n*\n*     -   **value**: argument value.\n*     -   **index**: argument index.\n*\n* -   Only those arguments in which the predicate function returns a falsy value are applied to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} wrapped function\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* function predicate( v ) {\n*     return ( v === 2 );\n* }\n*\n* var bar = rejectArguments( foo, predicate );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction rejectArguments( fcn, predicate, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\treturn wrap;\n\n\t/**\n\t* Invokes a function according to a predicate function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction wrap() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( !predicate( v, i ) ) {\n\t\t\t\targs.push( v );\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default rejectArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isNonNegativeIntegerArray from '@stdlib/assert/is-nonnegative-integer-array';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that invokes a provided function with reordered arguments.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeIntegerArray} indices - argument indices\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be an array of nonnegative integers\n* @returns {Function} function with reordered arguments\n*\n* @example\n* function foo( a, b, c ) {\n*     return [ a, b, c ];\n* }\n*\n* var bar = reorderArguments( foo, [ 2, 0, 1 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 3, 1, 2 ]\n*/\nfunction reorderArguments( fcn, indices, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeIntegerArray( indices ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array containing only nonnegative integers. Value: `%s`.', indices ) );\n\t}\n\treturn reordered;\n\n\t/**\n\t* Invokes a function with reordered arguments.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @throws {Error} must provide expected number of input arguments\n\t* @returns {*} return value\n\t*/\n\tfunction reordered() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\tif ( len !== indices.length ) {\n\t\t\tthrow new Error( format( 'invalid invocation. Unexpected number of input arguments. Expected: `%u`. Actual: `%u`.', indices.length, len ) );\n\t\t}\n\t\targs = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs.push( arguments[ indices[i] ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default reorderArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that invokes a provided function with arguments in reverse order.\n*\n* @param {Function} fcn - input function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @returns {Function} reverse arguments function\n*\n* @example\n* function foo( a, b, c ) {\n*     return [ a, b, c ];\n* }\n*\n* var bar = reverseArguments( foo );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 3, 2, 1 ]\n*/\nfunction reverseArguments( fcn, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\treturn reversed;\n\n\t/**\n\t* Invokes a function with arguments in reverse order.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction reversed() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ len-1-i ] = arguments[ i ];\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default reverseArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/max-safe-integer';\nimport FLOAT32 from '@stdlib/constants/float32/max-safe-integer';\nimport FLOAT64 from '@stdlib/constants/float64/max-safe-integer';\n\n\n// MAIN //\n\n/**\n* Returns the maximum safe integer capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {integer} maximum safe integer\n*\n* @example\n* var m = safeintmax( 'float64' );\n* // returns 9007199254740991\n*\n* @example\n* var m = safeintmax( 'float16' );\n* // returns 2047\n*\n* @example\n* var m = safeintmax( 'float32' );\n* // returns 16777215\n*/\nfunction safeintmax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default safeintmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/min-safe-integer';\nimport FLOAT32 from '@stdlib/constants/float32/min-safe-integer';\nimport FLOAT64 from '@stdlib/constants/float64/min-safe-integer';\n\n\n// MAIN //\n\n/**\n* Returns the minimum safe integer capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {integer} minimum safe integer\n*\n* @example\n* var m = safeintmin( 'float64' );\n* // returns -9007199254740991\n*\n* @example\n* var m = safeintmin( 'float16' );\n* // returns -2047\n*\n* @example\n* var m = safeintmin( 'float32' );\n* // returns -16777215\n*/\nfunction safeintmin( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default safeintmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport shiftObject from './shift_object.js';\nimport shiftTypedArray from './shift_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Removes and returns the first element of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {Array} updated collection and the removed element\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = shift( arr );\n* // returns [ [ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = shift( arr );\n* // returns [ <Float64Array>[ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*/\nfunction shift( collection ) {\n\tvar v;\n\tif ( isArray( collection ) ) {\n\t\tv = collection.shift();\n\t\treturn [ collection, v ];\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn shiftTypedArray( collection );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn shiftObject( collection );\n\t}\n\tthrow new TypeError( format( 'invalid argument. Must provide either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default shift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the first element of a typed array.\n*\n* @private\n* @param {TypedArray} arr - input array\n* @returns {Array} input array and the removed element\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = shift( arr );\n* // returns [ <Float64Array>[ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*/\nfunction shift( arr ) {\n\tvar offset;\n\tvar view;\n\tvar v;\n\tif ( arr.length === 0 ) {\n\t\treturn [ arr, void 0 ];\n\t}\n\tv = arr[ 0 ];\n\toffset = arr.byteOffset + arr.BYTES_PER_ELEMENT;\n\tview = new arr.constructor( arr.buffer, offset, arr.length-1 );\n\treturn [ view, v ];\n}\n\n\n// EXPORTS //\n\nexport default shift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the first element of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @returns {Array} input object and the removed element\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* var out = shift( obj );\n* // returns [ { 'length': 1, '0': 2.0 }, 1.0 ]\n*/\nfunction shift( obj ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tif ( obj.length === 0 ) {\n\t\treturn [ obj, void 0 ];\n\t}\n\tlen = obj.length - 1;\n\tv = obj[ 0 ];\n\n\t// Shift all elements down...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tobj[ i ] = obj[ i+1 ];\n\t}\n\tdelete obj[ len ];\n\tobj.length = len;\n\treturn [ obj, v ];\n}\n\n\n// EXPORTS //\n\nexport default shift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport INT8 from '@stdlib/constants/int8/num-bytes';\nimport UINT8 from '@stdlib/constants/uint8/num-bytes';\nimport INT16 from '@stdlib/constants/int16/num-bytes';\nimport UINT16 from '@stdlib/constants/uint16/num-bytes';\nimport INT32 from '@stdlib/constants/int32/num-bytes';\nimport UINT32 from '@stdlib/constants/uint32/num-bytes';\nimport FLOAT16 from '@stdlib/constants/float16/num-bytes';\nimport FLOAT32 from '@stdlib/constants/float32/num-bytes';\nimport FLOAT64 from '@stdlib/constants/float64/num-bytes';\nimport COMPLEX64 from '@stdlib/constants/complex64/num-bytes';\nimport COMPLEX128 from '@stdlib/constants/complex128/num-bytes';\n\n\n// MAIN //\n\n/**\n* Returns the size (in bytes) of the canonical binary representation of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {integer} size in bytes\n*\n* @example\n* var s = sizeOf( 'int8' );\n* // returns 1\n*\n* @example\n* var s = sizeOf( 'uint8' );\n* // returns 1\n*\n* @example\n* var s = sizeOf( 'int16' );\n* // returns 2\n*/\nfunction sizeOf( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'uint32':\n\t\treturn UINT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'uint8':\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn UINT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'uint16':\n\t\treturn UINT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tcase 'complex128':\n\t\treturn COMPLEX128;\n\tcase 'complex64':\n\t\treturn COMPLEX64;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default sizeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which are truthy.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which are truthy\n*\n* @example\n* var arr = [ 0, 0, 1, 2, 3 ];\n*\n* var bool = some( arr, 3 );\n* // returns true\n*/\nfunction some( collection, n ) {\n\tvar count;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( collection[ i ] ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default some;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which pass a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ 1, 2, -3, 4, -1 ];\n*\n* var bool = someBy( arr, 2, isNegative );\n* // returns true\n*/\nfunction someBy( collection, n, predicate, thisArg ) {\n\tvar count;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default someBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which pass a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ -1, 1, -2, 3, 4 ];\n*\n* var bool = someByRight( arr, 2, isNegative );\n* // returns true\n*/\nfunction someByRight( collection, n, predicate, thisArg ) {\n\tvar count;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default someByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether some own properties of a provided object satisfy a predicate function.\n*\n* @param {Object} obj - input object\n* @param {PositiveInteger} n - number of properties\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether an object contains at least `n` properties which pass a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var obj = { a: 1, b: 2, c: -3, d: 4, e: -1 };\n*\n* var bool = someOwnBy( obj, 2, isNegative );\n* // returns true\n*/\nfunction someOwnBy( obj, n, predicate, thisArg ) {\n\tvar count;\n\tvar out;\n\tvar key;\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tcount = 0;\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tout = predicate.call( thisArg, obj[ key ], key, obj );\n\t\t\tif ( out ) {\n\t\t\t\tcount += 1;\n\t\t\t\tif ( count === n ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default someOwnBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Generates a frequency table.\n*\n* ## Notes\n*\n* -   The output is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} first argument must be a collection\n* @returns {(Array<Array>|Array)} frequency table\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'beep' ];\n*\n* var out = tabulate( arr );\n* // returns [ [ 'beep', 2, 0.5 ], [ 'boop', 1, 0.25 ], [ 'foo', 1, 0.25 ] ]\n*/\nfunction tabulate( collection ) {\n\tvar count;\n\tvar tmp;\n\tvar len;\n\tvar out;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tcount = 0;\n\ttmp = [];\n\tout = [];\n\n\t// For each collection element, determine if we've seen the element before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tcount += 1;\n\t\tj = indexOf( tmp, v );\n\t\tif ( j === -1 ) {\n\t\t\ttmp.push( v );\n\t\t\tout.push( [ v, 1, 0 ] );\n\t\t} else {\n\t\t\tout[ j ][ 1 ] += 1;\n\t\t}\n\t}\n\t// Compute percentages...\n\tlen = out.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default tabulate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Generates a frequency table according to a provided function.\n*\n* ## Notes\n*\n* -   The output is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} frequency table\n*\n* @example\n* function indicator( value ) {\n*     return value[ 0 ];\n* }\n*\n* var arr = [ 'beep', 'boop', 'foo', 'beep' ];\n*\n* var out = tabulateBy( arr, indicator );\n* // returns [ [ 'b', 3, 0.75 ], [ 'f', 1, 0.25 ] ]\n*/\nfunction tabulateBy( collection, options, indicator ) {\n\tvar thisArg;\n\tvar count;\n\tvar opts;\n\tvar tmp;\n\tvar len;\n\tvar out;\n\tvar err;\n\tvar cb;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tthisArg = opts.thisArg;\n\tcount = 0;\n\ttmp = [];\n\tout = [];\n\n\t// For each collection element, determine if we've seen the element before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = cb.call( thisArg, collection[ i ], i );\n\t\tcount += 1;\n\t\tj = indexOf( tmp, v );\n\t\tif ( j === -1 ) {\n\t\t\ttmp.push( v );\n\t\t\tout.push( [ v, 1, 0 ] );\n\t\t} else {\n\t\t\tout[ j ][ 1 ] += 1;\n\t\t}\n\t}\n\t// Compute percentages...\n\tlen = out.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default tabulateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not throw, returns the function return value; otherwise, returns `y`.\n*\n* @param {Function} x - function to try invoking\n* @param {*} y - value to return if a function throws\n* @throws {TypeError} first argument must be a function\n* @returns {*} either the return value of `x` or the provided argument `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x() {\n*     if ( randu() < 0.5 ) {\n*         throw new Error( 'beep' );\n*     }\n*     return 1.0;\n* }\n* var z = trycatch( x, -1.0 );\n* // returns <number>\n*/\nfunction trycatch( x, y ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\ttry {\n\t\treturn x();\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn y;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trycatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isError from '@stdlib/assert/is-error';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Wraps a function in a try/catch block.\n*\n* @param {Function} fcn - function to wrap\n* @param {*} [thisArg] - function context\n* @throws {TypeError} must provide a function\n* @returns {Function} wrapped function\n*\n* @example\n* function fcn() {\n*     throw new Error( 'beep boop' );\n* }\n*\n* var f = wrap( fcn );\n*\n* var out = f();\n* if ( out instanceof Error ) {\n*     console.error( out.message );\n*     // => 'beep boop'\n* }\n*/\nfunction wrap( fcn, thisArg ) {\n\tvar ctx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tctx = thisArg;\n\t} else {\n\t\tctx = null;\n\t}\n\treturn wrapped;\n\n\t/**\n\t* Wrapped function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {(*|Error)} returned value or an error object\n\t*/\n\tfunction wrapped() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\targs = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\ttry {\n\t\t\treturn fcn.apply( ctx, args );\n\t\t} catch ( error ) {\n\t\t\tif ( isError( error ) ) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t\t// Handle thrown literals...\n\t\t\tif ( typeof error === 'object' ) {\n\t\t\t\treturn new Error( JSON.stringify( error ) );\n\t\t\t}\n\t\t\treturn new Error( error.toString() );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isError from '@stdlib/assert/is-error';\n\n\n// MAIN //\n\n/**\n* Wraps `require` in a try/catch block.\n*\n* @param {string} id - module id\n* @returns {(*|Error)} `module.exports` of the resolved module or an error\n*\n* @example\n* var out = tryRequire( 'beepboop' );\n*\n* if ( out instanceof Error ) {\n*     console.error( out.message );\n* }\n*/\nfunction tryRequire( id ) {\n\ttry {\n\t\treturn require( id ); // eslint-disable-line stdlib/no-dynamic-require\n\t} catch ( error ) {\n\t\tif ( isError( error ) ) {\n\t\t\treturn error;\n\t\t}\n\t\t// Handle case where a literal is thrown...\n\t\tif ( typeof error === 'object' ) {\n\t\t\treturn new Error( JSON.stringify( error ) );\n\t\t}\n\t\treturn new Error( error.toString() );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default tryRequire;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not throw, returns the function return value; otherwise, returns the return value of a second function `y`.\n*\n* @param {Function} x - function to try invoking\n* @param {Function} y - function to invoke if a function throws\n* @throws {TypeError} first argument must be a function\n* @returns {*} the return value of either `x` or `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x() {\n*     if ( randu() < 0.5 ) {\n*         throw new Error( 'beep' );\n*     }\n*     return 1.0;\n* }\n*\n* function y() {\n*     return randu();\n* }\n*\n* var z = trythen( x, y );\n* // returns <number>\n*/\nfunction trythen( x, y ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', y ) );\n\t}\n\ttry {\n\t\treturn x();\n\t} catch ( error ) {\n\t\treturn y( error );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trythen;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest-decimal-point */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport INT8 from '@stdlib/constants/int8/max';\nimport UINT8 from '@stdlib/constants/uint8/max';\nimport INT16 from '@stdlib/constants/int16/max';\nimport UINT16 from '@stdlib/constants/uint16/max';\nimport INT32 from '@stdlib/constants/int32/max';\nimport UINT32 from '@stdlib/constants/uint32/max';\nimport FLOAT16 from '@stdlib/constants/float16/pinf';\nimport FLOAT32 from '@stdlib/constants/float32/pinf';\nimport FLOAT64 from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} maximum value\n*\n* @example\n* var m = typemax( 'int8' );\n* // returns 127\n*\n* @example\n* var m = typemax( 'uint8' );\n* // returns 255\n*\n* @example\n* var m = typemax( 'int16' );\n* // returns 32767\n*/\nfunction typemax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'uint32':\n\t\treturn UINT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'uint8':\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn UINT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'uint16':\n\t\treturn UINT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typemax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest-decimal-point */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport INT8 from '@stdlib/constants/int8/min';\nimport INT16 from '@stdlib/constants/int16/min';\nimport INT32 from '@stdlib/constants/int32/min';\nimport FLOAT16 from '@stdlib/constants/float16/ninf';\nimport FLOAT32 from '@stdlib/constants/float32/ninf';\nimport FLOAT64 from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\n/**\n* Returns the minimum value of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} minimum value\n*\n* @example\n* var m = typemin( 'int8' );\n* // returns -128\n*\n* @example\n* var m = typemin( 'uint8' );\n* // returns 0\n*\n* @example\n* var m = typemin( 'int16' );\n* // returns -32768\n*/\nfunction typemin( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tcase 'uint32':\n\t\t// Fall-through..\n\tcase 'uint16': // eslint-disable-line no-fallthrough\n\t\t// Fall-through..\n\tcase 'uint8': // eslint-disable-line no-fallthrough\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn 0;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typemin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts the first letter of each object key to lowercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'AA': 1,\n*     'BB': 2\n* };\n*\n* var obj2 = uncapitalizeKeys( obj1 );\n* // returns { 'aA': 1, 'bB': 2 }\n*/\nfunction uncapitalizeKeys( obj ) {\n\tvar out;\n\tvar key;\n\tvar k;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tif ( key === '' ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t} else {\n\t\t\t\tk = key.charAt( 0 ).toLowerCase() + key.slice( 1 );\n\t\t\t\tout[ k ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default uncapitalizeKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a curried function into a function invoked with multiple arguments.\n*\n* @param {Function} fcn - curried function\n* @param {PositiveInteger} [arity] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} uncurried function\n*\n* @example\n* function addX( x ) {\n*     return function addY( y ) {\n*         return x + y;\n*     };\n* }\n*\n* var add = uncurry( addX );\n*\n* var sum = add( 2, 3 );\n* // returns 5\n*/\nfunction uncurry( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = null;\n\t}\n\telse if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t}\n\telse if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t}\n\telse {\n\t\tlen = null;\n\t\tcontext = arity;\n\t}\n\treturn uncurried;\n\n\t/**\n\t* Uncurried function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @throws {Error} if arity is set, must provide expected number of input arguments\n\t* @throws {Error} configured arity must be compatible with curried function\n\t* @throws {Error} if arity is not set, number of arguments must be compatible with curried function\n\t* @returns {*} function result\n\t*/\n\tfunction uncurried() {\n\t\tvar f;\n\t\tvar i;\n\n\t\tf = fcn;\n\t\tif ( len ) {\n\t\t\tif ( len > arguments.length ) {\n\t\t\t\tthrow new Error( format( 'insufficient arguments. Expected %u argument(s) and only received %u argument(s).', len, arguments.length ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( isFunction( f ) ) {\n\t\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( format( 'invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', len, i ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f;\n\t\t}\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tif ( isFunction( f ) ) {\n\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t} else {\n\t\t\t\tthrow new Error( format( 'invalid invocation. Number of arguments exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', arguments.length, i ) );\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default uncurry;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a curried function into a function invoked with multiple arguments.\n*\n* @param {Function} fcn - curried function\n* @param {PositiveInteger} [arity] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} uncurried function\n*\n* @example\n* function addX( x ) {\n*     return function addY( y ) {\n*         return x + y;\n*     };\n* }\n*\n* var add = uncurryRight( addX );\n*\n* var sum = add( 3, 2 );\n* // returns 5\n*/\nfunction uncurryRight( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = null;\n\t}\n\telse if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t}\n\telse if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t}\n\telse {\n\t\tlen = null;\n\t\tcontext = arity;\n\t}\n\treturn uncurried;\n\n\t/**\n\t* Uncurried function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @throws {Error} if arity is set, must provide expected number of input arguments\n\t* @throws {Error} configured arity must be compatible with curried function\n\t* @throws {Error} if arity is not set, number of arguments must be compatible with curried function\n\t* @returns {*} function result\n\t*/\n\tfunction uncurried() {\n\t\tvar f;\n\t\tvar i;\n\n\t\tf = fcn;\n\t\tif ( len ) {\n\t\t\tif ( len > arguments.length ) {\n\t\t\t\tthrow new Error( format( 'insufficient arguments. Expected %u argument(s) and only received %u argument(s).', len, arguments.length ) );\n\t\t\t}\n\t\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\t\tif ( isFunction( f ) ) {\n\t\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( format( 'invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', len, i ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f;\n\t\t}\n\t\tfor ( i = arguments.length-1; i >= 0; i-- ) {\n\t\t\tif ( isFunction( f ) ) {\n\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t} else {\n\t\t\t\tthrow new Error( format( 'invalid invocation. Number of arguments exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', arguments.length, i ) );\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default uncurryRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport unshiftArray from './unshift_array.js';\nimport unshiftObject from './unshift_object.js';\nimport unshiftTypedArray from './unshift_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @param {...*} items - items to add\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {(Array|TypedArray|Object)} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = unshift( arr, 6.0, 7.0 );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = unshift( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction unshift( collection ) {\n\tvar items;\n\tvar i;\n\titems = new Array( arguments.length-1 );\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\titems[ i ] = arguments[ i+1 ];\n\t}\n\tif ( isArray( collection ) ) {\n\t\treturn unshiftArray( collection, items );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn unshiftTypedArray( collection, items );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn unshiftObject( collection, items );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = unshift( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction unshift( arr, items ) {\n\tvar i;\n\tfor ( i = items.length-1; i >= 0; i-- ) {\n\t\tarr.unshift( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is preceded by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {Array} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = unshift( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction unshift( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar offset;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\toffset = arr.byteOffset;\n\n\tif ( offset < ibytes ) {\n\t\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\t\ttotal = nbytes + ibytes + offset;\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\toffset = buf.byteLength - nbytes - ibytes;\n\t\tv = new arr.constructor( buf, offset, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i+n ] = arr[ i ];\n\t\t}\n\t} else {\n\t\toffset -= ibytes;\n\t\tv = new arr.constructor( arr.buffer, offset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {Array} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = unshift( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 3.0, '1': 4.0, '2': 1.0, '3': 2.0 }\n*/\nfunction unshift( obj, items ) {\n\tvar len;\n\tvar n;\n\tvar i;\n\n\tlen = obj.length;\n\tn = items.length;\n\n\t// Shift all existing elements to the right...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tobj[ i+n ] = obj[ i ];\n\t}\n\t// Add new elements...\n\tfor ( i = 0; i < n; i++ ) {\n\t\tobj[ i ] = items[ i ];\n\t}\n\tobj.length = len + n;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to stop invoking a function\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i >= 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* until( predicate, beep );\n*/\nfunction until( predicate, fcn, thisArg ) {\n\tvar i;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = 0;\n\twhile ( !predicate( i ) ) {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default until;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, key, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, key, collection ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* untilEach( arr, predicate, log );\n*/\nfunction untilEach( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = 0;\n\twhile (\n\t\ti < len &&\n\t\t!predicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default untilEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `untilEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `untilEach()`, `[].push()` behavior is consistent with `untilEachRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* untilEachRight( arr, predicate, log );\n*/\nfunction untilEachRight( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = len - 1;\n\twhile (\n\t\ti >= 0 &&\n\t\t!predicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default untilEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/assert/is-integer';\nimport isArray from '@stdlib/assert/is-array';\n\n\n// MAIN //\n\n/**\n* Unzips a zipped array (i.e., a nested array of tuples).\n*\n* @param {Array} arr - zipped array\n* @param {Array} [idx] - array of indices specifying which tuple elements to unzip\n* @throws {TypeError} first argument must be a zipped array\n* @throws {TypeError} second argument must be an array of integer indices\n* @throws {Error} indices must be on the interval from zero to the tuple length\n* @returns {Array} array of unzipped arrays\n*\n* @example\n* var arr = [ [ 1, 'a', 3 ], [ 2, 'b', 4 ] ];\n*\n* var out = unzip( arr );\n* // returns [ [ 1, 2 ], [ 'a', 'b' ], [ 3, 4 ] ]\n*\n* @example\n* var arr = [ [ 1, 'a', 3 ], [ 2, 'b', 4 ] ];\n*\n* var out = unzip( arr, [ 0, 2 ] );\n* // returns [ [ 1, 2 ], [ 3, 4 ] ]\n*/\nfunction unzip( arr, idx ) {\n\tvar numVals;\n\tvar len;\n\tvar out;\n\tvar tmp;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a zipped array.' );\n\t}\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !isArray( arr[i] ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Array must only contain arrays.' );\n\t\t}\n\t}\n\t// Assume that the first tuple is representative of all tuples...\n\tnumVals = arr[ 0 ].length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isArray( idx ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Indices must be specified as an array.' );\n\t\t}\n\t\tfor ( i = 0; i < idx.length; i++ ) {\n\t\t\tk = idx[ i ];\n\t\t\tif ( !isInteger( k ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. All indices must be integers.' );\n\t\t\t}\n\t\t\tif ( k < 0 || k > numVals ) {\n\t\t\t\tthrow new Error( 'invalid argument. Must provide valid indices (i.e., must be a nonnegative integer less than or equal to the tuple length).' );\n\t\t\t}\n\t\t}\n\t\tnumVals = idx.length;\n\t} else {\n\t\tidx = [];\n\t\tfor ( i = 0; i < numVals; i++ ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\tout = [];\n\tfor ( j = 0; j < numVals; j++ ) {\n\t\ttmp = [];\n\t\tk = idx[ j ];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ttmp.push( arr[ i ][ k ] );\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default unzip;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts each object key to uppercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = uppercaseKeys( obj1 );\n* // returns { 'A': 1, 'B': 2 }\n*/\nfunction uppercaseKeys( obj ) {\n\tvar out;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tout[ key.toUpperCase() ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default uppercaseKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property values.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} value array\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 'bar'\n* };\n*\n* var vals = objectValues( obj );\n* // e.g., returns [ 'boop', 'bar' ]\n*/\nfunction objectValues( obj ) {\n\tvar keys;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = obj[ keys[i] ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property values.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} value array\n*\n* @example\n* function Foo() {\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var values = objectValuesIn( obj );\n* // e.g., returns [ 'boop', 'bar' ]\n*/\nfunction objectValuesIn( obj ) {\n\tvar out;\n\tvar key;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tout = [];\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tout.push( obj[ key ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectValuesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i < 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* whilst( predicate, beep );\n*/\nfunction whilst( predicate, fcn, thisArg ) {\n\tvar i;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = 0;\n\twhile ( predicate( i ) ) {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default whilst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* whileEach( arr, predicate, log );\n*/\nfunction whileEach( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = 0;\n\twhile (\n\t\ti < len &&\n\t\tpredicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default whileEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `whileEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `whileEach()`, `[].push()` behavior is consistent with `whileEachRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* whileEachRight( arr, predicate, log );\n*/\nfunction whileEachRight( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = len - 1;\n\twhile (\n\t\ti >= 0 &&\n\t\tpredicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default whileEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\nimport isWritable from '@stdlib/assert/is-writable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own writable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property writable names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = writableProperties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction writableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar n;\n\tvar i;\n\n\tout = propertyNames( value );\n\tn = 0;\n\tfor ( i = 0; i < out.length; i++ ) {\n\t\tif ( isWritable( value, out[ i ] ) ) {\n\t\t\tout[ n ] = out[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tout.length = n;\n\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isWritable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default writableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isWritable from '@stdlib/assert/is-writable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited writable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited writable property names and symbols\n*\n* @example\n* var props = writablePropertiesIn( [] );\n* // returns [...]\n*/\nfunction writablePropertiesIn( value ) {\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting writable properties...\n\tcache = {};\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a name more than once\n\t\t\t\tisWritable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisWritable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own writable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own writable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = { 'a': 'b' };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = writablePropertyNames( obj );\n* // returns [ 'a' ]\n*/\nfunction writablePropertyNames( value ) {\n\tvar names;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tnames = getOwnPropertyNames( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tif ( isWritableProperty( value, names[ i ] ) ) {\n\t\t\tnames[ n ] = names[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tnames.length = n;\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited writable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited writable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = { 'a': 'b' };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = writablePropertyNamesIn( obj );\n* // e.g., returns [ 'a', ... ]\n*/\nfunction writablePropertyNamesIn( value ) {\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting writable property names...\n\tnames = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertyNamesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own writable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own writable symbol properties\n*\n* @example\n* var symbols = writablePropertySymbols( {} );\n*/\nfunction writablePropertySymbols( value ) {\n\tvar symbols;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tsymbols = getOwnPropertySymbols( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tif ( isWritableProperty( value, symbols[ i ] ) ) {\n\t\t\tsymbols[ n ] = symbols[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tsymbols.length = n;\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited writable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited writable symbol properties\n*\n* @example\n* var symbols = writablePropertySymbolsIn( {} );\n*/\nfunction writablePropertySymbolsIn( value ) {\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all writable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport isArray from '@stdlib/assert/is-array';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Generates array tuples from input arrays.\n*\n* @param {...Array} arr - input arrays to be zipped\n* @param {Object} [opts] - function options\n* @param {boolean} [opts.trunc=true] - boolean indicating whether to truncate arrays longer than the shortest input array\n* @param {*} [opts.fill=null] - fill value used for arrays of unequal length\n* @param {boolean} [opts.arrays=false] - boolean indicating whether an input array should be interpreted as an array of arrays to be zipped\n* @throws {TypeError} must provide array arguments\n* @throws {Error} must provide at least one array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} output array of arrays\n*\n* @example\n* var zipped = zip( [ 1, 2 ], [ 'a', 'b' ] );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ] ]\n*\n* @example\n* var zipped = zip( [ 1, 2, 3 ], [ 'a', 'b' ] );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ] ]\n*\n* @example\n* var opts = {\n*     'trunc': false\n* };\n*\n* var zipped = zip( [ 1, 2, 3 ], [ 'a', 'b' ], opts );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ], [ 3, null ] ]\n*\n* @example\n* var opts = {\n*     'trunc': false,\n*     'fill': ''\n* };\n*\n* var zipped = zip( [ 1, 2, 3 ], [ 'a', 'b' ], opts );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ], [ 3, '' ] ]\n*\n* @example\n* var arr = [ [ 1, 2 ], [ 'a', 'b' ] ];\n*\n* // Default behavior:\n* var zipped = zip( arr );\n* // returns [ [ [ 1, 2 ] ], [ [ 'a', 'b' ] ] ]\n*\n* // Array of arrays:\n* zipped = zip( arr, { 'arrays': true } );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ] ]\n*/\nfunction zip() {\n\tvar nargs;\n\tvar args;\n\tvar fill;\n\tvar opts;\n\tvar arg;\n\tvar flg;\n\tvar len;\n\tvar arr;\n\tvar out;\n\tvar val;\n\tvar i;\n\tvar j;\n\n\topts = {};\n\tfill = null;\n\targs = Array.prototype.slice.call( arguments );\n\tnargs = args.length;\n\n\tfor ( i = 0; i < nargs-1; i++ ) {\n\t\tif ( !isArray( args[i] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide array arguments. Value: `%s`.', args[i] ) );\n\t\t}\n\t}\n\targ = args[ nargs-1 ];\n\tflg = isObject( arg );\n\tif ( !flg && !isArray( arg ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be either an array or an options object. Value: `%s`.', arg ) );\n\t}\n\tif ( flg ) {\n\t\topts = args.pop();\n\t}\n\tnargs = args.length;\n\tif ( nargs === 0 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least one array.' );\n\t}\n\tif ( hasOwnProp( opts, 'trunc' ) ) {\n\t\tif ( !isBoolean( opts.trunc ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'trunc', opts.trunc ) );\n\t\t}\n\t} else {\n\t\topts.trunc = true;\n\t}\n\tif ( hasOwnProp( opts, 'fill' ) ) {\n\t\tfill = opts.fill;\n\t}\n\tif ( hasOwnProp( opts, 'arrays' ) ) {\n\t\tif ( !isBoolean( opts.arrays ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'arrays', opts.arrays ) );\n\t\t}\n\t} else {\n\t\topts.arrays = false;\n\t}\n\tif ( nargs === 1 && opts.arrays ) {\n\t\t// Treat the lone array argument as an array of arrays to be zipped...\n\t\targs = args[ 0 ];\n\t\tnargs = args.length;\n\t}\n\tlen = args[ 0 ].length;\n\tif ( opts.trunc ) {\n\t\t// Find the min array length...\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tval = args[ i ].length;\n\t\t\tif ( val < len ) {\n\t\t\t\tlen = val;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Find the max array length...\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tval = args[ i ].length;\n\t\t\tif ( val > len ) {\n\t\t\t\tlen = val;\n\t\t\t}\n\t\t}\n\t}\n\tout = new Array( len );\n\tfor ( j = 0; j < len; j++ ) {\n\t\t// Temporary array to store tuples...\n\t\tarr = new Array( nargs );\n\n\t\t// Create the tuples...\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targ = args[ i ];\n\n\t\t\t// If an array is too short, use a fill value...\n\t\t\tif ( arg.length <= j ) {\n\t\t\t\tarr[ i ] = fill;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tarr[ i ] = arg[ j ];\n\t\t}\n\t\tout[ j ] = arr;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default zip;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: library-manifest\n*/\n\n// MODULES //\n\nimport setReadOnly from './../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace utils\n*/\nvar utils = {};\n\n/**\n* @name any\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any}\n*/\nimport any from './../any';\nsetReadOnly( utils, 'any', any );\n\n/**\n* @name anyBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any-by}\n*/\nimport anyBy from './../any-by';\nsetReadOnly( utils, 'anyBy', anyBy );\n\n/**\n* @name anyByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any-by-right}\n*/\nimport anyByRight from './../any-by-right';\nsetReadOnly( utils, 'anyByRight', anyByRight );\n\n/**\n* @name anyInBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any-in-by}\n*/\nimport anyInBy from './../any-in-by';\nsetReadOnly( utils, 'anyInBy', anyInBy );\n\n/**\n* @name anyOwnBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any-own-by}\n*/\nimport anyOwnBy from './../any-own-by';\nsetReadOnly( utils, 'anyOwnBy', anyOwnBy );\n\n/**\n* @name append\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/append}\n*/\nimport append from './../append';\nsetReadOnly( utils, 'append', append );\n\n/**\n* @name argumentFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/argument-function}\n*/\nimport argumentFunction from './../argument-function';\nsetReadOnly( utils, 'argumentFunction', argumentFunction );\n\n/**\n* @name async\n* @memberof utils\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/utils/async}\n*/\nimport async from './../async';\nsetReadOnly( utils, 'async', async );\n\n/**\n* @name bifurcate\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate}\n*/\nimport bifurcate from './../bifurcate';\nsetReadOnly( utils, 'bifurcate', bifurcate );\n\n/**\n* @name bifurcateBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate-by}\n*/\nimport bifurcateBy from './../bifurcate-by';\nsetReadOnly( utils, 'bifurcateBy', bifurcateBy );\n\n/**\n* @name bifurcateIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate-in}\n*/\nimport bifurcateIn from './../bifurcate-in';\nsetReadOnly( utils, 'bifurcateIn', bifurcateIn );\n\n/**\n* @name bifurcateOwn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate-own}\n*/\nimport bifurcateOwn from './../bifurcate-own';\nsetReadOnly( utils, 'bifurcateOwn', bifurcateOwn );\n\n/**\n* @name capitalizeKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/capitalize-keys}\n*/\nimport capitalizeKeys from './../capitalize-keys';\nsetReadOnly( utils, 'capitalizeKeys', capitalizeKeys );\n\n/**\n* @name commonKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/common-keys}\n*/\nimport commonKeys from './../common-keys';\nsetReadOnly( utils, 'commonKeys', commonKeys );\n\n/**\n* @name commonKeysIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/common-keys-in}\n*/\nimport commonKeysIn from './../common-keys-in';\nsetReadOnly( utils, 'commonKeysIn', commonKeysIn );\n\n/**\n* @name compose\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/compose}\n*/\nimport compose from './../compose';\nsetReadOnly( utils, 'compose', compose );\n\n/**\n* @name constantFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/constant-function}\n*/\nimport constantFunction from './../constant-function';\nsetReadOnly( utils, 'constantFunction', constantFunction );\n\n/**\n* @name constructorName\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/constructor-name}\n*/\nimport constructorName from './../constructor-name';\nsetReadOnly( utils, 'constructorName', constructorName );\n\n/**\n* @name convertPath\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/convert-path}\n*/\nimport convertPath from './../convert-path';\nsetReadOnly( utils, 'convertPath', convertPath );\n\n/**\n* @name copy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/copy}\n*/\nimport copy from './../copy';\nsetReadOnly( utils, 'copy', copy );\n\n/**\n* @name countBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/count-by}\n*/\nimport countBy from './../count-by';\nsetReadOnly( utils, 'countBy', countBy );\n\n/**\n* @name curry\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/curry}\n*/\nimport curry from './../curry';\nsetReadOnly( utils, 'curry', curry );\n\n/**\n* @name curryRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/curry-right}\n*/\nimport curryRight from './../curry-right';\nsetReadOnly( utils, 'curryRight', curryRight );\n\n/**\n* @name decorateAfter\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/decorate-after}\n*/\nimport decorateAfter from './../decorate-after';\nsetReadOnly( utils, 'decorateAfter', decorateAfter );\n\n/**\n* @name deepGet\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/deep-get}\n*/\nimport deepGet from './../deep-get';\nsetReadOnly( utils, 'deepGet', deepGet );\n\n/**\n* @name deepPluck\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/deep-pluck}\n*/\nimport deepPluck from './../deep-pluck';\nsetReadOnly( utils, 'deepPluck', deepPluck );\n\n/**\n* @name deepSet\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/deep-set}\n*/\nimport deepSet from './../deep-set';\nsetReadOnly( utils, 'deepSet', deepSet );\n\n/**\n* @name setConfigurableReadOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-read-only-accessor}\n*/\nimport setConfigurableReadOnlyAccessor from './../define-configurable-read-only-accessor';\nsetReadOnly( utils, 'setConfigurableReadOnlyAccessor', setConfigurableReadOnlyAccessor );\n\n/**\n* @name setConfigurableReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-read-only-property}\n*/\nimport setConfigurableReadOnly from './../define-configurable-read-only-property';\nsetReadOnly( utils, 'setConfigurableReadOnly', setConfigurableReadOnly );\n\n/**\n* @name setConfigurableReadWriteAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-read-write-accessor}\n*/\nimport setConfigurableReadWriteAccessor from './../define-configurable-read-write-accessor';\nsetReadOnly( utils, 'setConfigurableReadWriteAccessor', setConfigurableReadWriteAccessor );\n\n/**\n* @name setConfigurableWriteOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-write-only-accessor}\n*/\nimport setConfigurableWriteOnlyAccessor from './../define-configurable-write-only-accessor';\nsetReadOnly( utils, 'setConfigurableWriteOnlyAccessor', setConfigurableWriteOnlyAccessor );\n\n/**\n* @name setMemoizedConfigurableReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-memoized-configurable-read-only-property}\n*/\nimport setMemoizedConfigurableReadOnly from './../define-memoized-configurable-read-only-property';\nsetReadOnly( utils, 'setMemoizedConfigurableReadOnly', setMemoizedConfigurableReadOnly );\n\n/**\n* @name defineMemoizedProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-memoized-property}\n*/\nimport defineMemoizedProperty from './../define-memoized-property';\nsetReadOnly( utils, 'defineMemoizedProperty', defineMemoizedProperty );\n\n/**\n* @name setMemoizedReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-memoized-read-only-property}\n*/\nimport setMemoizedReadOnly from './../define-memoized-read-only-property';\nsetReadOnly( utils, 'setMemoizedReadOnly', setMemoizedReadOnly );\n\n/**\n* @name setNonEnumerableProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-property}\n*/\nimport setNonEnumerableProperty from './../define-nonenumerable-property';\nsetReadOnly( utils, 'setNonEnumerableProperty', setNonEnumerableProperty );\n\n/**\n* @name setNonEnumerableReadOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-read-only-accessor}\n*/\nimport setNonEnumerableReadOnlyAccessor from './../define-nonenumerable-read-only-accessor';\nsetReadOnly( utils, 'setNonEnumerableReadOnlyAccessor', setNonEnumerableReadOnlyAccessor );\n\n/**\n* @name setNonEnumerableReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-read-only-property}\n*/\nimport setNonEnumerableReadOnly from './../define-nonenumerable-read-only-property';\nsetReadOnly( utils, 'setNonEnumerableReadOnly', setNonEnumerableReadOnly );\n\n/**\n* @name setNonEnumerableReadWriteAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-read-write-accessor}\n*/\nimport setNonEnumerableReadWriteAccessor from './../define-nonenumerable-read-write-accessor';\nsetReadOnly( utils, 'setNonEnumerableReadWriteAccessor', setNonEnumerableReadWriteAccessor );\n\n/**\n* @name setNonEnumerableWriteOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-write-only-accessor}\n*/\nimport setNonEnumerableWriteOnlyAccessor from './../define-nonenumerable-write-only-accessor';\nsetReadOnly( utils, 'setNonEnumerableWriteOnlyAccessor', setNonEnumerableWriteOnlyAccessor );\n\n/**\n* @name defineProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-properties}\n*/\nimport defineProperties from './../define-properties';\nsetReadOnly( utils, 'defineProperties', defineProperties );\n\n/**\n* @name defineProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-property}\n*/\nimport defineProperty from './../define-property';\nsetReadOnly( utils, 'defineProperty', defineProperty );\n\n/**\n* @name setReadOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-read-only-accessor}\n*/\nimport setReadOnlyAccessor from './../define-read-only-accessor';\nsetReadOnly( utils, 'setReadOnlyAccessor', setReadOnlyAccessor );\n\n/**\n* @name setReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-read-only-property}\n*/\n\nsetReadOnly( utils, 'setReadOnly', setReadOnly );\n\n/**\n* @name setReadWriteAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-read-write-accessor}\n*/\nimport setReadWriteAccessor from './../define-read-write-accessor';\nsetReadOnly( utils, 'setReadWriteAccessor', setReadWriteAccessor );\n\n/**\n* @name setWriteOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-write-only-accessor}\n*/\nimport setWriteOnlyAccessor from './../define-write-only-accessor';\nsetReadOnly( utils, 'setWriteOnlyAccessor', setWriteOnlyAccessor );\n\n/**\n* @name dirname\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/dirname}\n*/\nimport dirname from './../dirname';\nsetReadOnly( utils, 'dirname', dirname );\n\n/**\n* @name doUntil\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-until}\n*/\nimport doUntil from './../do-until';\nsetReadOnly( utils, 'doUntil', doUntil );\n\n/**\n* @name doUntilEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-until-each}\n*/\nimport doUntilEach from './../do-until-each';\nsetReadOnly( utils, 'doUntilEach', doUntilEach );\n\n/**\n* @name doUntilEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-until-each-right}\n*/\nimport doUntilEachRight from './../do-until-each-right';\nsetReadOnly( utils, 'doUntilEachRight', doUntilEachRight );\n\n/**\n* @name doWhile\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-while}\n*/\nimport doWhile from './../do-while';\nsetReadOnly( utils, 'doWhile', doWhile );\n\n/**\n* @name doWhileEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-while-each}\n*/\nimport doWhileEach from './../do-while-each';\nsetReadOnly( utils, 'doWhileEach', doWhileEach );\n\n/**\n* @name doWhileEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-while-each-right}\n*/\nimport doWhileEachRight from './../do-while-each-right';\nsetReadOnly( utils, 'doWhileEachRight', doWhileEachRight );\n\n/**\n* @name dsv\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/dsv}\n*/\nimport dsv from './../dsv';\nsetReadOnly( utils, 'dsv', dsv );\n\n/**\n* @name objectEntries\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/entries}\n*/\nimport objectEntries from './../entries';\nsetReadOnly( utils, 'objectEntries', objectEntries );\n\n/**\n* @name objectEntriesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/entries-in}\n*/\nimport objectEntriesIn from './../entries-in';\nsetReadOnly( utils, 'objectEntriesIn', objectEntriesIn );\n\n/**\n* @name enumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-properties}\n*/\nimport enumerableProperties from './../enumerable-properties';\nsetReadOnly( utils, 'enumerableProperties', enumerableProperties );\n\n/**\n* @name enumerablePropertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-properties-in}\n*/\nimport enumerablePropertiesIn from './../enumerable-properties-in';\nsetReadOnly( utils, 'enumerablePropertiesIn', enumerablePropertiesIn );\n\n/**\n* @name enumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-property-symbols}\n*/\nimport enumerablePropertySymbols from './../enumerable-property-symbols';\nsetReadOnly( utils, 'enumerablePropertySymbols', enumerablePropertySymbols );\n\n/**\n* @name enumerablePropertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-property-symbols-in}\n*/\nimport enumerablePropertySymbolsIn from './../enumerable-property-symbols-in';\nsetReadOnly( utils, 'enumerablePropertySymbolsIn', enumerablePropertySymbolsIn );\n\n/**\n* @name rescape\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/escape-regexp-string}\n*/\nimport rescape from './../escape-regexp-string';\nsetReadOnly( utils, 'rescape', rescape );\n\n/**\n* @name evil\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/eval}\n*/\nimport evil from './../eval';\nsetReadOnly( utils, 'evil', evil );\n\n/**\n* @name every\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/every}\n*/\nimport every from './../every';\nsetReadOnly( utils, 'every', every );\n\n/**\n* @name everyBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/every-by}\n*/\nimport everyBy from './../every-by';\nsetReadOnly( utils, 'everyBy', everyBy );\n\n/**\n* @name everyByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/every-by-right}\n*/\nimport everyByRight from './../every-by-right';\nsetReadOnly( utils, 'everyByRight', everyByRight );\n\n/**\n* @name extname\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/extname}\n*/\nimport extname from './../extname';\nsetReadOnly( utils, 'extname', extname );\n\n/**\n* @name filterArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/filter-arguments}\n*/\nimport filterArguments from './../filter-arguments';\nsetReadOnly( utils, 'filterArguments', filterArguments );\n\n/**\n* @name find\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/find}\n*/\nimport find from './../find';\nsetReadOnly( utils, 'find', find );\n\n/**\n* @name flattenArray\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/flatten-array}\n*/\nimport flattenArray from './../flatten-array';\nsetReadOnly( utils, 'flattenArray', flattenArray );\n\n/**\n* @name flattenObject\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/flatten-object}\n*/\nimport flattenObject from './../flatten-object';\nsetReadOnly( utils, 'flattenObject', flattenObject );\n\n/**\n* @name forEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-each}\n*/\nimport forEach from './../for-each';\nsetReadOnly( utils, 'forEach', forEach );\n\n/**\n* @name forEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-each-right}\n*/\nimport forEachRight from './../for-each-right';\nsetReadOnly( utils, 'forEachRight', forEachRight );\n\n/**\n* @name forIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-in}\n*/\nimport forIn from './../for-in';\nsetReadOnly( utils, 'forIn', forIn );\n\n/**\n* @name forOwn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-own}\n*/\nimport forOwn from './../for-own';\nsetReadOnly( utils, 'forOwn', forOwn );\n\n/**\n* @name objectFromEntries\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/from-entries}\n*/\nimport objectFromEntries from './../from-entries';\nsetReadOnly( utils, 'objectFromEntries', objectFromEntries );\n\n/**\n* @name functionName\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/function-name}\n*/\nimport functionName from './../function-name';\nsetReadOnly( utils, 'functionName', functionName );\n\n/**\n* @name functionSequence\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/function-sequence}\n*/\nimport functionSequence from './../function-sequence';\nsetReadOnly( utils, 'functionSequence', functionSequence );\n\n/**\n* @name getPrototypeOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/get-prototype-of}\n*/\nimport getPrototypeOf from './../get-prototype-of';\nsetReadOnly( utils, 'getPrototypeOf', getPrototypeOf );\n\n/**\n* @name getGlobal\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/global}\n*/\nimport getGlobal from './../global';\nsetReadOnly( utils, 'getGlobal', getGlobal );\n\n/**\n* @name group\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group}\n*/\nimport group from './../group';\nsetReadOnly( utils, 'group', group );\n\n/**\n* @name groupBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group-by}\n*/\nimport groupBy from './../group-by';\nsetReadOnly( utils, 'groupBy', groupBy );\n\n/**\n* @name groupIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group-in}\n*/\nimport groupIn from './../group-in';\nsetReadOnly( utils, 'groupIn', groupIn );\n\n/**\n* @name groupOwn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group-own}\n*/\nimport groupOwn from './../group-own';\nsetReadOnly( utils, 'groupOwn', groupOwn );\n\n/**\n* @name identity\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/identity-function}\n*/\nimport identity from './../identity-function';\nsetReadOnly( utils, 'identity', identity );\n\n/**\n* @name ifelse\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/if-else}\n*/\nimport ifelse from './../if-else';\nsetReadOnly( utils, 'ifelse', ifelse );\n\n/**\n* @name ifthen\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/if-then}\n*/\nimport ifthen from './../if-then';\nsetReadOnly( utils, 'ifthen', ifthen );\n\n/**\n* @name indexOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/index-of}\n*/\nimport indexOf from './../index-of';\nsetReadOnly( utils, 'indexOf', indexOf );\n\n/**\n* @name inherit\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherit}\n*/\nimport inherit from './../inherit';\nsetReadOnly( utils, 'inherit', inherit );\n\n/**\n* @name inheritedEnumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-enumerable-properties}\n*/\nimport inheritedEnumerableProperties from './../inherited-enumerable-properties';\nsetReadOnly( utils, 'inheritedEnumerableProperties', inheritedEnumerableProperties );\n\n/**\n* @name inheritedEnumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-enumerable-property-symbols}\n*/\nimport inheritedEnumerablePropertySymbols from './../inherited-enumerable-property-symbols';\nsetReadOnly( utils, 'inheritedEnumerablePropertySymbols', inheritedEnumerablePropertySymbols );\n\n/**\n* @name inheritedKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-keys}\n*/\nimport inheritedKeys from './../inherited-keys';\nsetReadOnly( utils, 'inheritedKeys', inheritedKeys );\n\n/**\n* @name inheritedNonEnumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-nonenumerable-properties}\n*/\nimport inheritedNonEnumerableProperties from './../inherited-nonenumerable-properties';\nsetReadOnly( utils, 'inheritedNonEnumerableProperties', inheritedNonEnumerableProperties );\n\n/**\n* @name inheritedNonEnumerablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-nonenumerable-property-names}\n*/\nimport inheritedNonEnumerablePropertyNames from './../inherited-nonenumerable-property-names';\nsetReadOnly( utils, 'inheritedNonEnumerablePropertyNames', inheritedNonEnumerablePropertyNames );\n\n/**\n* @name inheritedNonEnumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-nonenumerable-property-symbols}\n*/\nimport inheritedNonEnumerablePropertySymbols from './../inherited-nonenumerable-property-symbols';\nsetReadOnly( utils, 'inheritedNonEnumerablePropertySymbols', inheritedNonEnumerablePropertySymbols );\n\n/**\n* @name inheritedProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-properties}\n*/\nimport inheritedProperties from './../inherited-properties';\nsetReadOnly( utils, 'inheritedProperties', inheritedProperties );\n\n/**\n* @name inheritedPropertyDescriptor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-descriptor}\n*/\nimport inheritedPropertyDescriptor from './../inherited-property-descriptor';\nsetReadOnly( utils, 'inheritedPropertyDescriptor', inheritedPropertyDescriptor );\n\n/**\n* @name inheritedPropertyDescriptors\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-descriptors}\n*/\nimport inheritedPropertyDescriptors from './../inherited-property-descriptors';\nsetReadOnly( utils, 'inheritedPropertyDescriptors', inheritedPropertyDescriptors );\n\n/**\n* @name inheritedPropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-names}\n*/\nimport inheritedPropertyNames from './../inherited-property-names';\nsetReadOnly( utils, 'inheritedPropertyNames', inheritedPropertyNames );\n\n/**\n* @name inheritedPropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-symbols}\n*/\nimport inheritedPropertySymbols from './../inherited-property-symbols';\nsetReadOnly( utils, 'inheritedPropertySymbols', inheritedPropertySymbols );\n\n/**\n* @name inheritedWritableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-writable-properties}\n*/\nimport inheritedWritableProperties from './../inherited-writable-properties';\nsetReadOnly( utils, 'inheritedWritableProperties', inheritedWritableProperties );\n\n/**\n* @name inheritedWritablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-writable-property-names}\n*/\nimport inheritedWritablePropertyNames from './../inherited-writable-property-names';\nsetReadOnly( utils, 'inheritedWritablePropertyNames', inheritedWritablePropertyNames );\n\n/**\n* @name inheritedWritablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-writable-property-symbols}\n*/\nimport inheritedWritablePropertySymbols from './../inherited-writable-property-symbols';\nsetReadOnly( utils, 'inheritedWritablePropertySymbols', inheritedWritablePropertySymbols );\n\n/**\n* @name inmap\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inmap}\n*/\nimport inmap from './../inmap';\nsetReadOnly( utils, 'inmap', inmap );\n\n/**\n* @name inmapRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inmap-right}\n*/\nimport inmapRight from './../inmap-right';\nsetReadOnly( utils, 'inmapRight', inmapRight );\n\n/**\n* @name keyBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/key-by}\n*/\nimport keyBy from './../key-by';\nsetReadOnly( utils, 'keyBy', keyBy );\n\n/**\n* @name keyByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/key-by-right}\n*/\nimport keyByRight from './../key-by-right';\nsetReadOnly( utils, 'keyByRight', keyByRight );\n\n/**\n* @name objectKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/keys}\n*/\nimport objectKeys from './../keys';\nsetReadOnly( utils, 'objectKeys', objectKeys );\n\n/**\n* @name keysIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/keys-in}\n*/\nimport keysIn from './../keys-in';\nsetReadOnly( utils, 'keysIn', keysIn );\n\n/**\n* @name lowercaseKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/lowercase-keys}\n*/\nimport lowercaseKeys from './../lowercase-keys';\nsetReadOnly( utils, 'lowercaseKeys', lowercaseKeys );\n\n/**\n* @name map\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map}\n*/\nimport map from './../map';\nsetReadOnly( utils, 'map', map );\n\n/**\n* @name mapArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-arguments}\n*/\nimport mapArguments from './../map-arguments';\nsetReadOnly( utils, 'mapArguments', mapArguments );\n\n/**\n* @name mapFun\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-function}\n*/\nimport mapFun from './../map-function';\nsetReadOnly( utils, 'mapFun', mapFun );\n\n/**\n* @name mapKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-keys}\n*/\nimport mapKeys from './../map-keys';\nsetReadOnly( utils, 'mapKeys', mapKeys );\n\n/**\n* @name mapReduce\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-reduce}\n*/\nimport mapReduce from './../map-reduce';\nsetReadOnly( utils, 'mapReduce', mapReduce );\n\n/**\n* @name mapReduceRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-reduce-right}\n*/\nimport mapReduceRight from './../map-reduce-right';\nsetReadOnly( utils, 'mapReduceRight', mapReduceRight );\n\n/**\n* @name mapRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-right}\n*/\nimport mapRight from './../map-right';\nsetReadOnly( utils, 'mapRight', mapRight );\n\n/**\n* @name mapValues\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-values}\n*/\nimport mapValues from './../map-values';\nsetReadOnly( utils, 'mapValues', mapValues );\n\n/**\n* @name map2\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map2}\n*/\nimport map2 from './../map2';\nsetReadOnly( utils, 'map2', map2 );\n\n/**\n* @name map2Right\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map2-right}\n*/\nimport map2Right from './../map2-right';\nsetReadOnly( utils, 'map2Right', map2Right );\n\n/**\n* @name map2d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map2d}\n*/\nimport map2d from './../map2d';\nsetReadOnly( utils, 'map2d', map2d );\n\n/**\n* @name map3d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map3d}\n*/\nimport map3d from './../map3d';\nsetReadOnly( utils, 'map3d', map3d );\n\n/**\n* @name map4d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map4d}\n*/\nimport map4d from './../map4d';\nsetReadOnly( utils, 'map4d', map4d );\n\n/**\n* @name map5d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map5d}\n*/\nimport map5d from './../map5d';\nsetReadOnly( utils, 'map5d', map5d );\n\n/**\n* @name maskArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/mask-arguments}\n*/\nimport maskArguments from './../mask-arguments';\nsetReadOnly( utils, 'maskArguments', maskArguments );\n\n/**\n* @name memoize\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/memoize}\n*/\nimport memoize from './../memoize';\nsetReadOnly( utils, 'memoize', memoize );\n\n/**\n* @name merge\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/merge}\n*/\nimport merge from './../merge';\nsetReadOnly( utils, 'merge', merge );\n\n/**\n* @name moveProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/move-property}\n*/\nimport moveProperty from './../move-property';\nsetReadOnly( utils, 'moveProperty', moveProperty );\n\n/**\n* @name naryFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nary-function}\n*/\nimport naryFunction from './../nary-function';\nsetReadOnly( utils, 'naryFunction', naryFunction );\n\n/**\n* @name nativeClass\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/native-class}\n*/\nimport nativeClass from './../native-class';\nsetReadOnly( utils, 'nativeClass', nativeClass );\n\n/**\n* @name nextTick\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/next-tick}\n*/\nimport nextTick from './../next-tick';\nsetReadOnly( utils, 'nextTick', nextTick );\n\n/**\n* @name none\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/none}\n*/\nimport none from './../none';\nsetReadOnly( utils, 'none', none );\n\n/**\n* @name noneBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/none-by}\n*/\nimport noneBy from './../none-by';\nsetReadOnly( utils, 'noneBy', noneBy );\n\n/**\n* @name noneByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/none-by-right}\n*/\nimport noneByRight from './../none-by-right';\nsetReadOnly( utils, 'noneByRight', noneByRight );\n\n/**\n* @name noneOwnBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/none-own-by}\n*/\nimport noneOwnBy from './../none-own-by';\nsetReadOnly( utils, 'noneOwnBy', noneOwnBy );\n\n/**\n* @name nonEnumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-properties}\n*/\nimport nonEnumerableProperties from './../nonenumerable-properties';\nsetReadOnly( utils, 'nonEnumerableProperties', nonEnumerableProperties );\n\n/**\n* @name nonEnumerablePropertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-properties-in}\n*/\nimport nonEnumerablePropertiesIn from './../nonenumerable-properties-in';\nsetReadOnly( utils, 'nonEnumerablePropertiesIn', nonEnumerablePropertiesIn );\n\n/**\n* @name nonEnumerablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-names}\n*/\nimport nonEnumerablePropertyNames from './../nonenumerable-property-names';\nsetReadOnly( utils, 'nonEnumerablePropertyNames', nonEnumerablePropertyNames );\n\n/**\n* @name nonEnumerablePropertyNamesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-names-in}\n*/\nimport nonEnumerablePropertyNamesIn from './../nonenumerable-property-names-in';\nsetReadOnly( utils, 'nonEnumerablePropertyNamesIn', nonEnumerablePropertyNamesIn );\n\n/**\n* @name nonEnumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-symbols}\n*/\nimport nonEnumerablePropertySymbols from './../nonenumerable-property-symbols';\nsetReadOnly( utils, 'nonEnumerablePropertySymbols', nonEnumerablePropertySymbols );\n\n/**\n* @name nonEnumerablePropertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-symbols-in}\n*/\nimport nonEnumerablePropertySymbolsIn from './../nonenumerable-property-symbols-in';\nsetReadOnly( utils, 'nonEnumerablePropertySymbolsIn', nonEnumerablePropertySymbolsIn );\n\n/**\n* @name nonIndexKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonindex-keys}\n*/\nimport nonIndexKeys from './../nonindex-keys';\nsetReadOnly( utils, 'nonIndexKeys', nonIndexKeys );\n\n/**\n* @name noop\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/noop}\n*/\nimport noop from './../noop';\nsetReadOnly( utils, 'noop', noop );\n\n/**\n* @name objectInverse\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/object-inverse}\n*/\nimport objectInverse from './../object-inverse';\nsetReadOnly( utils, 'objectInverse', objectInverse );\n\n/**\n* @name objectInverseBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/object-inverse-by}\n*/\nimport objectInverseBy from './../object-inverse-by';\nsetReadOnly( utils, 'objectInverseBy', objectInverseBy );\n\n/**\n* @name omit\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/omit}\n*/\nimport omit from './../omit';\nsetReadOnly( utils, 'omit', omit );\n\n/**\n* @name omitBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/omit-by}\n*/\nimport omitBy from './../omit-by';\nsetReadOnly( utils, 'omitBy', omitBy );\n\n/**\n* @name openURL\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/open-url}\n*/\nimport openURL from './../open-url';\nsetReadOnly( utils, 'openURL', openURL );\n\n/**\n* @name papply\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/papply}\n*/\nimport papply from './../papply';\nsetReadOnly( utils, 'papply', papply );\n\n/**\n* @name papplyRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/papply-right}\n*/\nimport papplyRight from './../papply-right';\nsetReadOnly( utils, 'papplyRight', papplyRight );\n\n/**\n* @name parallel\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/parallel}\n*/\nimport parallel from './../parallel';\nsetReadOnly( utils, 'parallel', parallel );\n\n/**\n* @name parseJSON\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/parse-json}\n*/\nimport parseJSON from './../parse-json';\nsetReadOnly( utils, 'parseJSON', parseJSON );\n\n/**\n* @name parseNDJSON\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/parse-ndjson}\n*/\nimport parseNDJSON from './../parse-ndjson';\nsetReadOnly( utils, 'parseNDJSON', parseNDJSON );\n\n/**\n* @name pick\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pick}\n*/\nimport pick from './../pick';\nsetReadOnly( utils, 'pick', pick );\n\n/**\n* @name pickArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pick-arguments}\n*/\nimport pickArguments from './../pick-arguments';\nsetReadOnly( utils, 'pickArguments', pickArguments );\n\n/**\n* @name pickBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pick-by}\n*/\nimport pickBy from './../pick-by';\nsetReadOnly( utils, 'pickBy', pickBy );\n\n/**\n* @name pluck\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pluck}\n*/\nimport pluck from './../pluck';\nsetReadOnly( utils, 'pluck', pluck );\n\n/**\n* @name pop\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pop}\n*/\nimport pop from './../pop';\nsetReadOnly( utils, 'pop', pop );\n\n/**\n* @name prepend\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/prepend}\n*/\nimport prepend from './../prepend';\nsetReadOnly( utils, 'prepend', prepend );\n\n/**\n* @name properties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/properties}\n*/\nimport properties from './../properties';\nsetReadOnly( utils, 'properties', properties );\n\n/**\n* @name propertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/properties-in}\n*/\nimport propertiesIn from './../properties-in';\nsetReadOnly( utils, 'propertiesIn', propertiesIn );\n\n/**\n* @name propertyDescriptor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptor}\n*/\nimport propertyDescriptor from './../property-descriptor';\nsetReadOnly( utils, 'propertyDescriptor', propertyDescriptor );\n\n/**\n* @name propertyDescriptorIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptor-in}\n*/\nimport propertyDescriptorIn from './../property-descriptor-in';\nsetReadOnly( utils, 'propertyDescriptorIn', propertyDescriptorIn );\n\n/**\n* @name propertyDescriptors\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptors}\n*/\nimport propertyDescriptors from './../property-descriptors';\nsetReadOnly( utils, 'propertyDescriptors', propertyDescriptors );\n\n/**\n* @name propertyDescriptorsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptors-in}\n*/\nimport propertyDescriptorsIn from './../property-descriptors-in';\nsetReadOnly( utils, 'propertyDescriptorsIn', propertyDescriptorsIn );\n\n/**\n* @name propertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-names}\n*/\nimport propertyNames from './../property-names';\nsetReadOnly( utils, 'propertyNames', propertyNames );\n\n/**\n* @name propertyNamesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-names-in}\n*/\nimport propertyNamesIn from './../property-names-in';\nsetReadOnly( utils, 'propertyNamesIn', propertyNamesIn );\n\n/**\n* @name propertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-symbols}\n*/\nimport propertySymbols from './../property-symbols';\nsetReadOnly( utils, 'propertySymbols', propertySymbols );\n\n/**\n* @name propertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-symbols-in}\n*/\nimport propertySymbolsIn from './../property-symbols-in';\nsetReadOnly( utils, 'propertySymbolsIn', propertySymbolsIn );\n\n/**\n* @name push\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/push}\n*/\nimport push from './../push';\nsetReadOnly( utils, 'push', push );\n\n/**\n* @name realmax\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/real-max}\n*/\nimport realmax from './../real-max';\nsetReadOnly( utils, 'realmax', realmax );\n\n/**\n* @name realmin\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/real-min}\n*/\nimport realmin from './../real-min';\nsetReadOnly( utils, 'realmin', realmin );\n\n/**\n* @name reduce\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reduce}\n*/\nimport reduce from './../reduce';\nsetReadOnly( utils, 'reduce', reduce );\n\n/**\n* @name reduceRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reduce-right}\n*/\nimport reduceRight from './../reduce-right';\nsetReadOnly( utils, 'reduceRight', reduceRight );\n\n/**\n* @name reduce2d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reduce2d}\n*/\nimport reduce2d from './../reduce2d';\nsetReadOnly( utils, 'reduce2d', reduce2d );\n\n/**\n* @name reFromString\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/regexp-from-string}\n*/\nimport reFromString from './../regexp-from-string';\nsetReadOnly( utils, 'reFromString', reFromString );\n\n/**\n* @name rejectArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reject-arguments}\n*/\nimport rejectArguments from './../reject-arguments';\nsetReadOnly( utils, 'rejectArguments', rejectArguments );\n\n/**\n* @name reorderArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reorder-arguments}\n*/\nimport reorderArguments from './../reorder-arguments';\nsetReadOnly( utils, 'reorderArguments', reorderArguments );\n\n/**\n* @name reverseArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reverse-arguments}\n*/\nimport reverseArguments from './../reverse-arguments';\nsetReadOnly( utils, 'reverseArguments', reverseArguments );\n\n/**\n* @name safeintmax\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/safe-int-max}\n*/\nimport safeintmax from './../safe-int-max';\nsetReadOnly( utils, 'safeintmax', safeintmax );\n\n/**\n* @name safeintmin\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/safe-int-min}\n*/\nimport safeintmin from './../safe-int-min';\nsetReadOnly( utils, 'safeintmin', safeintmin );\n\n/**\n* @name shift\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/shift}\n*/\nimport shift from './../shift';\nsetReadOnly( utils, 'shift', shift );\n\n/**\n* @name sizeOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/size-of}\n*/\nimport sizeOf from './../size-of';\nsetReadOnly( utils, 'sizeOf', sizeOf );\n\n/**\n* @name some\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/some}\n*/\nimport some from './../some';\nsetReadOnly( utils, 'some', some );\n\n/**\n* @name someBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/some-by}\n*/\nimport someBy from './../some-by';\nsetReadOnly( utils, 'someBy', someBy );\n\n/**\n* @name someByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/some-by-right}\n*/\nimport someByRight from './../some-by-right';\nsetReadOnly( utils, 'someByRight', someByRight );\n\n/**\n* @name someOwnBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/some-own-by}\n*/\nimport someOwnBy from './../some-own-by';\nsetReadOnly( utils, 'someOwnBy', someOwnBy );\n\n/**\n* @name tabulate\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/tabulate}\n*/\nimport tabulate from './../tabulate';\nsetReadOnly( utils, 'tabulate', tabulate );\n\n/**\n* @name tabulateBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/tabulate-by}\n*/\nimport tabulateBy from './../tabulate-by';\nsetReadOnly( utils, 'tabulateBy', tabulateBy );\n\n/**\n* @name timeit\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/timeit}\n*/\nimport timeit from './../timeit';\nsetReadOnly( utils, 'timeit', timeit );\n\n/**\n* @name trycatch\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-catch}\n*/\nimport trycatch from './../try-catch';\nsetReadOnly( utils, 'trycatch', trycatch );\n\n/**\n* @name tryFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-function}\n*/\nimport tryFunction from './../try-function';\nsetReadOnly( utils, 'tryFunction', tryFunction );\n\n/**\n* @name tryRequire\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-require}\n*/\nimport tryRequire from './../try-require';\nsetReadOnly( utils, 'tryRequire', tryRequire );\n\n/**\n* @name trythen\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-then}\n*/\nimport trythen from './../try-then';\nsetReadOnly( utils, 'trythen', trythen );\n\n/**\n* @name typemax\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/type-max}\n*/\nimport typemax from './../type-max';\nsetReadOnly( utils, 'typemax', typemax );\n\n/**\n* @name typemin\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/type-min}\n*/\nimport typemin from './../type-min';\nsetReadOnly( utils, 'typemin', typemin );\n\n/**\n* @name typeOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/type-of}\n*/\nimport typeOf from './../type-of';\nsetReadOnly( utils, 'typeOf', typeOf );\n\n/**\n* @name uncapitalizeKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uncapitalize-keys}\n*/\nimport uncapitalizeKeys from './../uncapitalize-keys';\nsetReadOnly( utils, 'uncapitalizeKeys', uncapitalizeKeys );\n\n/**\n* @name uncurry\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uncurry}\n*/\nimport uncurry from './../uncurry';\nsetReadOnly( utils, 'uncurry', uncurry );\n\n/**\n* @name uncurryRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uncurry-right}\n*/\nimport uncurryRight from './../uncurry-right';\nsetReadOnly( utils, 'uncurryRight', uncurryRight );\n\n/**\n* @name unshift\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/unshift}\n*/\nimport unshift from './../unshift';\nsetReadOnly( utils, 'unshift', unshift );\n\n/**\n* @name until\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/until}\n*/\nimport until from './../until';\nsetReadOnly( utils, 'until', until );\n\n/**\n* @name untilEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/until-each}\n*/\nimport untilEach from './../until-each';\nsetReadOnly( utils, 'untilEach', untilEach );\n\n/**\n* @name untilEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/until-each-right}\n*/\nimport untilEachRight from './../until-each-right';\nsetReadOnly( utils, 'untilEachRight', untilEachRight );\n\n/**\n* @name unzip\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/unzip}\n*/\nimport unzip from './../unzip';\nsetReadOnly( utils, 'unzip', unzip );\n\n/**\n* @name uppercaseKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uppercase-keys}\n*/\nimport uppercaseKeys from './../uppercase-keys';\nsetReadOnly( utils, 'uppercaseKeys', uppercaseKeys );\n\n/**\n* @name objectValues\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/values}\n*/\nimport objectValues from './../values';\nsetReadOnly( utils, 'objectValues', objectValues );\n\n/**\n* @name objectValuesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/values-in}\n*/\nimport objectValuesIn from './../values-in';\nsetReadOnly( utils, 'objectValuesIn', objectValuesIn );\n\n/**\n* @name whilst\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/while}\n*/\nimport whilst from './../while';\nsetReadOnly( utils, 'whilst', whilst );\n\n/**\n* @name whileEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/while-each}\n*/\nimport whileEach from './../while-each';\nsetReadOnly( utils, 'whileEach', whileEach );\n\n/**\n* @name whileEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/while-each-right}\n*/\nimport whileEachRight from './../while-each-right';\nsetReadOnly( utils, 'whileEachRight', whileEachRight );\n\n/**\n* @name writableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-properties}\n*/\nimport writableProperties from './../writable-properties';\nsetReadOnly( utils, 'writableProperties', writableProperties );\n\n/**\n* @name writablePropertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-properties-in}\n*/\nimport writablePropertiesIn from './../writable-properties-in';\nsetReadOnly( utils, 'writablePropertiesIn', writablePropertiesIn );\n\n/**\n* @name writablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-names}\n*/\nimport writablePropertyNames from './../writable-property-names';\nsetReadOnly( utils, 'writablePropertyNames', writablePropertyNames );\n\n/**\n* @name writablePropertyNamesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-names-in}\n*/\nimport writablePropertyNamesIn from './../writable-property-names-in';\nsetReadOnly( utils, 'writablePropertyNamesIn', writablePropertyNamesIn );\n\n/**\n* @name writablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-symbols}\n*/\nimport writablePropertySymbols from './../writable-property-symbols';\nsetReadOnly( utils, 'writablePropertySymbols', writablePropertySymbols );\n\n/**\n* @name writablePropertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-symbols-in}\n*/\nimport writablePropertySymbolsIn from './../writable-property-symbols-in';\nsetReadOnly( utils, 'writablePropertySymbolsIn', writablePropertySymbolsIn );\n\n/**\n* @name zip\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/zip}\n*/\nimport zip from './../zip';\nsetReadOnly( utils, 'zip', zip );\n\n\n// EXPORTS //\n\nexport default utils;\n"],"names":["main","Object","defineProperty","objectProtoype","prototype","toStr","toString","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","call","TypeError","format","__proto__","value","Error","get","set","defineProperty$1","setReadOnly","configurable","enumerable","writable","any","collection","len","i","isCollection","length","anyBy","predicate","thisArg","isFunction","anyByRight","anyInBy","key","isObject","anyOwnBy","hasOwnProp","append","collection1","collection2","isArray","arr","items","push","appendArray","isTypedArrayLike","total","buf","n","v","BYTES_PER_ELEMENT","byteOffset","buffer","byteLength","ArrayBuffer","ceil2","constructor","appendTypedArray","isInteger","appendObject","wrap","idx","isNonNegativeInteger","arguments","setNonEnumerableReadOnly","debug","require$$0","factory","options","opts","f","series","isBoolean","limit","isPositiveInteger","validate","PINF","done","maxIndex","count","flg","lim","next","JSON","stringify","clbk","error","result","message","bool","anyByAsync","anyByRightAsync","indexOf","searchElement","fromIndex","isString","isnan","returns","join","out","j","cb","results","bifurcateByAsync","indicator","group","countByAsync","everyByAsync","everyByRightAsync","fcn","forEachAsync","forEachRightAsync","groupByAsync","inmapAsync","inmapRightAsync","m","Array","mapFunAsync","keys","slice","noop","isEnumerableProperty","RE","self","window","globalThis","getGlobal","codegen","Function","GlobalThis","Self","Win","root","nodeList","document","childNodes","typedarray","Int8Array","toStrTag","Symbol","toStringTag","nativeClass","hasToStringTag","isOwn","tag","constructorName","match","name","ctor","exec","isBuffer","ctorName","toLowerCase","type","isConstructorPrototype","w","hasAutomationEqualityBug","k","typeOf","win","EXCLUDED_KEYS","check","main$4","HAS_BUILTIN","test","isArguments","skipConstructor","skipPrototype","isFcn","p","isObjectLike","HAS_ENUM_PROTO_BUG","String","HAS_NON_ENUM_PROPS_BUG","HAS_WINDOW","NON_ENUMERABLE","transform","objectKeys","mapKeysAsync","mapValuesAsync","noneByAsync","noneByRightAsync","initial","acc","reduceAsync","reduceRightAsync","fcns","isFunctionArray","args","apply","waterfall","cnt","someByAsync","someByRightAsync","tmp","tabulateByAsync","ns","nFuncs","onPredicate","unshift","x","y","clbk2","nargs","bifurcate","filter","RangeError","returnValues","returnIndices","returnPairs","bifurcateBy","bifurcateIn","returnKeys","bifurcateOwn","capitalizeKeys","charAt","toUpperCase","commonKeys","arg","ptr","N","keysIn","commonKeysIn","hasProp","compose","RE_WIN_DEVICE_ROOT","RE_POSIX_DEVICE_ROOT","convertPath","from","to","device","parts","replace","reExtendedLengthPath","REGEXP","lowercase","reFromString","str","reRegExp","RegExp","getOwnPropertyNames","propertyNames","getOwnPropertyDescriptor","propertyDescriptor","getProto","property","desc","getPrototypeOf","proto","getProto$1","int8array","uint8array","Uint8Array","uint8clampedarray","Uint8ClampedArray","int16array","Int16Array","uint16array","Uint16Array","int32array","Int32Array","uint32array","Uint32Array","float32array","Float32Array","float64array","Float64Array","typedArrays","deepCopy","val","copy","cache","refs","level","parent","ref","copyBuffer","isError","stack","code","errno","syscall","copyError","Date","regexp","Set","Map","valueOf","freeze","names","create","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","countBy","g","curry","arity","context","createCurried","curried","cargs","curryRight","after","r1","r2","decorateAfter","fN","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","RE_PARAMETERS","sep","deepGet","props","path","isStr","dget","split","deepPluck","deepSet","dset","setConfigurableReadOnlyAccessor","getter","setConfigurableReadOnly","setConfigurableReadWriteAccessor","setter","setConfigurableWriteOnlyAccessor","defineMemoizedProperty","memoize","setMemoizedConfigurableReadOnly","setMemoizedReadOnly","setNonEnumerableProperty","setNonEnumerableReadOnlyAccessor","setNonEnumerableReadWriteAccessor","setNonEnumerableWriteOnlyAccessor","params","function2string","reNativeFunction","Fcn","defineProperties","hasDefinePropertiesSupport","defineProperties$1","setReadOnlyAccessor","setReadWriteAccessor","setWriteOnlyAccessor","dirname","RE_DIRNAME","doUntil","doUntilEach","doUntilEachRight","doWhile","doWhileEach","doWhileEachRight","RE_CHARS","rescape","s","substring","throwError","state2enum","enum2state","table","CLOSED","INIT","ERROR","max","FIELD","ESCAPE","QUOTED_FIELD","COMMENT","SKIP","removeWhitespace","parser","state","_isWhitespace","_qidx","_cursor","_raiseWarning","_rewind","_changeState","_setErrorState","INVALID_QUOTE_END","QUOTE_END","QUOTED_ESCAPE","SKIPPED_COMMENT","SKIPPED_FIELD","SKIPPED_ESCAPE","SKIPPED_QUOTED_FIELD","SKIPPED_INVALID_QUOTE_END","SKIPPED_QUOTE_END","SKIPPED_QUOTED_ESCAPE","closed","comment","newlineLastIndex","newline","_newlineLastIndex","_newline","ch","_scan","_push","escape","delimiterLastIndex","commentLastIndex","escapeLastIndex","skipLastIndex","escapeLength","delimiter","strict","skip","_delimiterLastIndex","_delimiter","_commentLastIndex","_comment","_skipLastIndex","_skip","_escapeLastIndex","_escapeLength","_escape","_strict","maximum","cursor","_eidx","d","_copyWithin","field","quoteLastIndex","quoting","quote","_quoteLastIndex","_quote","_quoting","_cidx","init","invalid_quote_end","quote_end","doublequote","_doublequote","quoted_escape","quoted_field","skipped_comment","skipped_escape","skipped_field","skipped_invalid_quote_end","skipped_quote_end","skipped_quoted_escape","skipped_quoted_field","Parser","this","ltrim","maxRows","onClose","onColumn","onComment","onError","onRow","onSkip","onWarn","rowBuffer","rtrim","skipBlankRows","skipRow","trimComment","whitespace","_buffer","_rowBufferFLG","Boolean","_rowBuffer","_col","_row","_line","_commented","_skipped","_errname","_ltrim","_maxRows","_rtrim","_skipBlankRows","_skipRow","_trimComment","_whitespace","list","pattern","array2pattern","_reWhitespace","_reWhitespaceLeft","_reWhitespaceRight","_onClose","_onColumn","_onComment","_onRow","_onSkip","_onError","_onWarn","_commentLength","_delimiterLength","_newlineLength","_quoteLength","_skipLength","_state","_states","states","target","start","end","_slice","search","_getField","_setField","_getRow","_reset","_onSkippedRow","_createException","_close","_raiseException","_onEscape","_onField","_onCommentedRow","_onRecord","_onClosingQuote","chunk","parse","objectEntries","objectEntriesIn","base","getOwnPropertySymbols","propertySymbols","enumerableProperties","isEnumerable","enumerablePropertiesIn","enumerablePropertySymbols","symbols","enumerablePropertySymbolsIn","evil","eval","every","everyBy","everyByRight","extname","filename","RE_EXTNAME","filterArguments","RETURNS","find","mode","ret","defaults","depth","FLOAT64_MAX","recurse","isArrayLikeObject","flattenArray","flattenArrays","prefix","isPlainObject","flatten","flattenObject","forEach","forEachRight","forIn","forOwn","objectFromEntries","entries","isArrayArray","dims","copyFLG","isPositiveIntegerArray","genFcn","wrapFlattenCopy","wrapFlatten","isFunctionNameSupported","hasFunctionNameSupport","functionName","funseq","groups","groupBy","groupIn","groupOwn","identity","ifelse","ifthen","Ctor","createObject$1","inherit","superCtor","createObject","inheritedEnumerableProperties","MAX_SAFE_INTEGER","inheritedEnumerablePropertySymbols","inheritedKeys","inheritedNonEnumerableProperties","isNonEnumerableProperty","inheritedNonEnumerablePropertyNames","inheritedNonEnumerablePropertySymbols","contains","inheritedProperties","inheritedPropertyDescriptor","getOwnPropertyDescriptors","propertyDescriptors","inheritedPropertyDescriptors","inheritedPropertyNames","inheritedPropertySymbols","inheritedWritableProperties","isWritableProperty","inheritedWritablePropertyNames","inheritedWritablePropertySymbols","inmap","inmapRight","keyBy","keyByRight","lowercaseKeys","MODE","map","xbuf","ybuf","ordx","ordy","shx","shy","sx","sy","ox","oy","ix","shape","data","strides","offset","order","accessors","vind2bind","isndarrayLike","ndarraylike2object","ndzeros","dtype","ndarrayFcn","zeros","arrayFcn","arraylike2object","mapArguments","mapFun","mapKeys","sh","isReadOnly","broadcast","mapReduce","mapper","reducer","mapReduceRight","mapRight","mapValues","map2","z","zbuf","ordz","xget","yget","zset","xref","yref","shz","sz","oz","iy","isxnd","isynd","broadcastShapes","isznd","map2Right","map2d","M","a","map3d","t1","t2","a1","a2","S0","S1","S2","i0","i1","i2","map4d","t3","a3","S3","i3","map5d","t4","a4","S4","i4","maskArguments","mask","hashFunction","toKey","memoized","override","extend","deepMerge","source","isFunc","curr","mergefcn","src","merge","moveProperty","naryFunction","t","proc","nextTick","none","noneBy","noneByRight","noneOwnBy","nonEnumerableProperties","isNonEnumerable","nonEnumerablePropertiesIn","nonEnumerablePropertyNames","nonEnumerablePropertyNamesIn","nonEnumerablePropertySymbols","nonEnumerablePropertySymbolsIn","RE_INTEGER_INDEX","nonIndexKeys","invert","allowDupes","duplicates","invertBy","omit","ownKeys","isStringArray","omitBy","openURL","url","isURI","open","papply","pargs","papplyRight","env","ENV","WORKER_CMD","cmd","WORKER_ENCODING","encoding","WORKER_MAX_BUFFER","maxBuffer","ordered","WORKER_ORDERED","uid","WORKER_UID","gid","WORKER_GID","fork","require$$1","require$$2","WORKER_FILEPATH","resolve","files","numClosed","workers","pending","fopts","pids","pid","cwd","stdio","getOpts","on","onExit","onDisconnect","onMessage","concurrency","child","numPending","close","send","filepath","signal","processExit","parallel","dir","numCPUs","parseJSON","reviver","parseNDJSON","parsed","RE_EOL","lines","isWhitespace","reEOL","pop","pick","pickArguments","indices","pickBy","pluck","popTypedArray","popObject","prepend","prependArray","nbytes","ibytes","prependTypedArray","prependObject","properties","propertiesIn","propertyDescriptorIn","propertyDescriptorsIn","propertyNamesIn","propertySymbolsIn","pushArray","pushTypedArray","pushObject","realmax","FLOAT64","FLOAT32","FLOAT16","realmin","reduce","reduceRight","reduce2d","rejectArguments","reorderArguments","isNonNegativeIntegerArray","reverseArguments","safeintmax","safeintmin","shift","shiftTypedArray","shiftObject","sizeOf","INT32","UINT32","INT8","UINT8","INT16","UINT16","COMPLEX128","COMPLEX64","some","someBy","someByRight","someOwnBy","tabulate","tabulateBy","trycatch","ctx","tryRequire","id","require","trythen","typemax","typemin","uncapitalizeKeys","uncurry","uncurryRight","unshiftArray","unshiftTypedArray","unshiftObject","until","untilEach","untilEachRight","unzip","numVals","uppercaseKeys","objectValues","objectValuesIn","whilst","whileEach","whileEachRight","writableProperties","isWritable","writablePropertiesIn","writablePropertyNames","writablePropertyNamesIn","writablePropertySymbols","writablePropertySymbolsIn","zip","fill","trunc","arrays","utils","argumentFunction","async","constantFunction","dsv","functionSequence","objectInverse","objectInverseBy","timeit","tryFunction"],"mappings":"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"}