{"version":3,"file":"mod.js","sources":["../define-property/lib/define_property.js","../define-property/lib/builtin.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","../node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","../node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/main.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","../node_modules/@stdlib/string/base/format-tokenize/lib/main.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/string/format/lib/is_string.js","../define-property/lib/polyfill.js","../define-property/lib/index.js","../define-property/lib/has_define_property_support.js","../define-read-only-property/lib/main.js","../node_modules/@stdlib/math/base/special/floor/lib/main.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/main.js","../node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","../node_modules/@stdlib/assert/is-collection/lib/main.js","../any/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/symbol/ctor/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/utils/native-class/lib/main.js","../node_modules/@stdlib/boolean/ctor/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/utils/global/lib/global.js","../node_modules/@stdlib/utils/global/lib/global_this.js","../node_modules/@stdlib/utils/global/lib/main.js","../node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/regexp/function-name/lib/main.js","../node_modules/@stdlib/regexp/function-name/lib/regexp.js","../node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/assert/tools/array-function/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/utils/type-of/lib/main.js","../node_modules/@stdlib/assert/is-function/lib/main.js","../any-by/lib/main.js","../any-by-right/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/number/ctor/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/constants/float64/pinf/lib/index.js","../node_modules/@stdlib/constants/float64/ninf/lib/index.js","../node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/assert/is-typed-array-like/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/assert/is-arraybuffer/lib/main.js","../node_modules/@stdlib/assert/is-float64array/lib/main.js","../node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","../node_modules/@stdlib/assert/has-float64array-support/lib/main.js","../node_modules/@stdlib/array/float64/lib/main.js","../node_modules/@stdlib/array/float64/lib/index.js","../node_modules/@stdlib/array/float64/lib/polyfill.js","../node_modules/@stdlib/assert/has-arraybuffer-support/lib/arraybuffer.js","../node_modules/@stdlib/array/buffer/lib/main.js","../node_modules/@stdlib/array/buffer/lib/index.js","../node_modules/@stdlib/assert/has-arraybuffer-support/lib/main.js","../node_modules/@stdlib/array/buffer/lib/polyfill.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/main.js","../node_modules/@stdlib/math/base/assert/is-infinite/lib/main.js","../node_modules/@stdlib/math/base/assert/is-even/lib/main.js","../node_modules/@stdlib/math/base/assert/is-odd/lib/main.js","../node_modules/@stdlib/math/base/special/sqrt/lib/main.js","../node_modules/@stdlib/math/base/special/abs/lib/main.js","../node_modules/@stdlib/assert/is-uint32array/lib/main.js","../node_modules/@stdlib/constants/uint32/max/lib/index.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/uint32array.js","../node_modules/@stdlib/array/uint32/lib/main.js","../node_modules/@stdlib/array/uint32/lib/index.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/main.js","../node_modules/@stdlib/array/uint32/lib/polyfill.js","../node_modules/@stdlib/assert/is-uint8array/lib/main.js","../node_modules/@stdlib/constants/uint8/max/lib/index.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/uint8array.js","../node_modules/@stdlib/array/uint8/lib/main.js","../node_modules/@stdlib/array/uint8/lib/index.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/main.js","../node_modules/@stdlib/array/uint8/lib/polyfill.js","../node_modules/@stdlib/assert/is-uint16array/lib/main.js","../node_modules/@stdlib/constants/uint16/max/lib/index.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/uint16array.js","../node_modules/@stdlib/array/uint16/lib/main.js","../node_modules/@stdlib/array/uint16/lib/index.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/main.js","../node_modules/@stdlib/array/uint16/lib/polyfill.js","../node_modules/@stdlib/assert/is-little-endian/lib/main.js","../node_modules/@stdlib/assert/is-little-endian/lib/ctors.js","../node_modules/@stdlib/number/float64/base/to-words/lib/indices.js","../node_modules/@stdlib/number/float64/base/to-words/lib/assign.js","../node_modules/@stdlib/number/float64/base/to-words/lib/main.js","../node_modules/@stdlib/number/float64/base/to-words/lib/index.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/low.js","../node_modules/@stdlib/number/float64/base/set-low-word/lib/main.js","../node_modules/@stdlib/number/uint32/base/to-int32/lib/main.js","../node_modules/@stdlib/constants/float64/high-word-abs-mask/lib/index.js","../node_modules/@stdlib/number/float64/base/from-words/lib/indices.js","../node_modules/@stdlib/constants/float64/high-word-sign-mask/lib/index.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/high.js","../node_modules/@stdlib/number/float64/base/get-high-word/lib/main.js","../node_modules/@stdlib/number/float64/base/from-words/lib/main.js","../node_modules/@stdlib/math/base/special/copysign/lib/main.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_huge.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/high.js","../node_modules/@stdlib/number/float64/base/set-high-word/lib/main.js","../node_modules/@stdlib/constants/float64/exponent-bias/lib/index.js","../node_modules/@stdlib/constants/float64/num-high-word-significand-bits/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/log2ax.js","../node_modules/@stdlib/math/base/special/pow/lib/logx.js","../node_modules/@stdlib/constants/float64/max-base2-exponent/lib/index.js","../node_modules/@stdlib/constants/float64/max-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/constants/float64/min-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/constants/float64/smallest-normal/lib/index.js","../node_modules/@stdlib/number/float64/base/normalize/lib/assign.js","../node_modules/@stdlib/number/float64/base/normalize/lib/index.js","../node_modules/@stdlib/number/float64/base/normalize/lib/main.js","../node_modules/@stdlib/constants/float64/high-word-exponent-mask/lib/index.js","../node_modules/@stdlib/math/base/special/ldexp/lib/main.js","../node_modules/@stdlib/number/float64/base/exponent/lib/main.js","../node_modules/@stdlib/constants/float64/ln-two/lib/index.js","../node_modules/@stdlib/constants/float64/high-word-significand-mask/lib/index.js","../node_modules/@stdlib/math/base/special/pow/lib/pow2.js","../node_modules/@stdlib/math/base/special/pow/lib/main.js","../node_modules/@stdlib/math/base/special/pow/lib/y_is_infinite.js","../node_modules/@stdlib/math/base/special/pow/lib/x_is_zero.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_w.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_l.js","../node_modules/@stdlib/math/base/special/pow/lib/polyval_p.js","../node_modules/@stdlib/math/base/special/ceil/lib/main.js","../node_modules/@stdlib/math/base/special/log2/lib/main.js","../node_modules/@stdlib/math/base/special/ceil2/lib/main.js","../node_modules/@stdlib/math/base/special/kernel-log1p/lib/main.js","../node_modules/@stdlib/math/base/special/kernel-log1p/lib/polyval_p.js","../node_modules/@stdlib/math/base/special/kernel-log1p/lib/polyval_q.js","../append/lib/main.js","../append/lib/append_array.js","../append/lib/append_typed_array.js","../append/lib/append_object.js","../argument-function/lib/main.js","../define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/object/ctor/lib/main.js","../node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/utils/get-prototype-of/lib/main.js","../node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-integer/lib/object.js","../node_modules/@stdlib/assert/is-positive-integer/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/index.js","../async/any-by/lib/limit.js","../async/any-by/lib/factory.js","../async/any-by/lib/validate.js","../async/any-by/lib/main.js","../async/any-by/lib/index.js","../async/any-by-right/lib/limit.js","../async/any-by-right/lib/factory.js","../async/any-by-right/lib/validate.js","../async/any-by-right/lib/main.js","../node_modules/@stdlib/assert/is-nan/lib/primitive.js","../node_modules/@stdlib/assert/is-nan/lib/object.js","../node_modules/@stdlib/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/primitive.js","../async/any-by-right/lib/index.js","../node_modules/@stdlib/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/assert/is-string/lib/main.js","../index-of/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/index.js","../async/bifurcate-by/lib/validate.js","../async/bifurcate-by/lib/limit.js","../async/bifurcate-by/lib/factory.js","../async/bifurcate-by/lib/main.js","../async/bifurcate-by/lib/index.js","../async/count-by/lib/limit.js","../async/count-by/lib/factory.js","../async/count-by/lib/validate.js","../async/count-by/lib/main.js","../async/count-by/lib/index.js","../async/every-by/lib/limit.js","../async/every-by/lib/factory.js","../async/every-by/lib/validate.js","../async/every-by/lib/main.js","../async/every-by/lib/index.js","../async/every-by-right/lib/limit.js","../async/every-by-right/lib/factory.js","../async/every-by-right/lib/validate.js","../async/every-by-right/lib/main.js","../async/every-by-right/lib/index.js","../async/for-each/lib/limit.js","../async/for-each/lib/factory.js","../async/for-each/lib/validate.js","../async/for-each/lib/main.js","../async/for-each/lib/index.js","../async/for-each-right/lib/limit.js","../async/for-each-right/lib/factory.js","../async/for-each-right/lib/validate.js","../async/for-each-right/lib/main.js","../async/for-each-right/lib/index.js","../async/group-by/lib/validate.js","../async/group-by/lib/limit.js","../async/group-by/lib/factory.js","../async/group-by/lib/main.js","../async/group-by/lib/index.js","../async/inmap/lib/limit.js","../async/inmap/lib/factory.js","../async/inmap/lib/validate.js","../async/inmap/lib/main.js","../async/inmap/lib/index.js","../async/inmap-right/lib/limit.js","../async/inmap-right/lib/factory.js","../async/inmap-right/lib/validate.js","../async/inmap-right/lib/main.js","../async/inmap-right/lib/index.js","../async/map-function/lib/limit.js","../async/map-function/lib/factory.js","../async/map-function/lib/validate.js","../async/map-function/lib/main.js","../keys/lib/builtin.js","../async/map-function/lib/index.js","../keys/lib/has_builtin.js","../node_modules/@stdlib/assert/is-arguments/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/detect.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/index.js","../node_modules/@stdlib/assert/is-arguments/lib/polyfill.js","../keys/lib/builtin_wrapper.js","../noop/lib/main.js","../keys/lib/has_enumerable_prototype_bug.js","../keys/lib/has_non_enumerable_properties_bug.js","../type-of/lib/fixtures/re.js","../global/lib/self.js","../global/lib/window.js","../global/lib/global.js","../global/lib/global_this.js","../global/lib/main.js","../global/lib/codegen.js","../type-of/lib/fixtures/nodelist.js","../type-of/lib/fixtures/typedarray.js","../native-class/lib/tostring.js","../native-class/lib/tostringtag.js","../native-class/lib/index.js","../native-class/lib/polyfill.js","../native-class/lib/main.js","../constructor-name/lib/main.js","../type-of/lib/index.js","../type-of/lib/check.js","../type-of/lib/polyfill.js","../type-of/lib/main.js","../keys/lib/is_constructor_prototype.js","../keys/lib/window.js","../keys/lib/has_automation_equality_bug.js","../keys/lib/has_window.js","../keys/lib/main.js","../keys/lib/has_arguments_bug.js","../keys/lib/polyfill.js","../keys/lib/is_constructor_prototype_wrapper.js","../async/map-keys/lib/limit.js","../async/map-keys/lib/factory.js","../async/map-keys/lib/validate.js","../async/map-keys/lib/main.js","../async/map-keys/lib/index.js","../async/map-values/lib/limit.js","../async/map-values/lib/factory.js","../async/map-values/lib/validate.js","../async/map-values/lib/main.js","../async/map-values/lib/index.js","../async/none-by/lib/limit.js","../async/none-by/lib/factory.js","../async/none-by/lib/validate.js","../async/none-by/lib/main.js","../async/none-by/lib/index.js","../async/none-by-right/lib/limit.js","../async/none-by-right/lib/factory.js","../async/none-by-right/lib/validate.js","../async/none-by-right/lib/main.js","../async/none-by-right/lib/index.js","../async/reduce/lib/limit.js","../async/reduce/lib/factory.js","../async/reduce/lib/validate.js","../async/reduce/lib/main.js","../async/reduce/lib/index.js","../async/reduce-right/lib/limit.js","../async/reduce-right/lib/factory.js","../async/reduce-right/lib/validate.js","../async/reduce-right/lib/main.js","../async/reduce-right/lib/index.js","../node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../node_modules/@stdlib/assert/is-array-like/lib/main.js","../node_modules/@stdlib/assert/tools/array-like-function/lib/main.js","../node_modules/@stdlib/assert/is-function-array/lib/index.js","../async/series-waterfall/lib/factory.js","../async/series-waterfall/lib/main.js","../async/series-waterfall/lib/index.js","../async/some-by/lib/limit.js","../async/some-by/lib/factory.js","../async/some-by/lib/validate.js","../async/some-by/lib/main.js","../async/some-by/lib/index.js","../async/some-by-right/lib/limit.js","../async/some-by-right/lib/factory.js","../async/some-by-right/lib/validate.js","../async/some-by-right/lib/main.js","../async/some-by-right/lib/index.js","../async/tabulate-by/lib/limit.js","../async/tabulate-by/lib/factory.js","../async/tabulate-by/lib/validate.js","../async/tabulate-by/lib/main.js","../async/tabulate-by/lib/index.js","../async/lib/index.js","../async/compose/lib/main.js","../async/do-until/lib/main.js","../async/do-while/lib/main.js","../async/function-sequence/lib/main.js","../async/if-else/lib/main.js","../async/if-then/lib/main.js","../async/try-catch/lib/main.js","../async/try-then/lib/main.js","../async/until/lib/main.js","../async/while/lib/main.js","../node_modules/@stdlib/array/base/assert/is-accessor-array/lib/main.js","../node_modules/@stdlib/array/base/accessor-getter/lib/main.js","../node_modules/@stdlib/array/base/getter/lib/main.js","../node_modules/@stdlib/array/dtype/lib/ctor2dtype.js","../node_modules/@stdlib/assert/is-float32array/lib/main.js","../node_modules/@stdlib/assert/has-float32array-support/lib/float32array.js","../node_modules/@stdlib/array/float32/lib/main.js","../node_modules/@stdlib/array/float32/lib/index.js","../node_modules/@stdlib/assert/has-float32array-support/lib/main.js","../node_modules/@stdlib/array/float32/lib/polyfill.js","../node_modules/@stdlib/assert/is-int32array/lib/main.js","../node_modules/@stdlib/constants/int32/max/lib/index.js","../node_modules/@stdlib/constants/int32/min/lib/index.js","../node_modules/@stdlib/assert/has-int32array-support/lib/int32array.js","../node_modules/@stdlib/array/int32/lib/main.js","../node_modules/@stdlib/array/int32/lib/index.js","../node_modules/@stdlib/assert/has-int32array-support/lib/main.js","../node_modules/@stdlib/array/int32/lib/polyfill.js","../node_modules/@stdlib/assert/is-int16array/lib/main.js","../node_modules/@stdlib/constants/int16/max/lib/index.js","../node_modules/@stdlib/constants/int16/min/lib/index.js","../node_modules/@stdlib/assert/has-int16array-support/lib/int16array.js","../node_modules/@stdlib/array/int16/lib/main.js","../node_modules/@stdlib/array/int16/lib/index.js","../node_modules/@stdlib/assert/has-int16array-support/lib/main.js","../node_modules/@stdlib/array/int16/lib/polyfill.js","../node_modules/@stdlib/assert/is-uint8clampedarray/lib/main.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/uint8clampedarray.js","../node_modules/@stdlib/array/uint8c/lib/main.js","../node_modules/@stdlib/array/uint8c/lib/index.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/main.js","../node_modules/@stdlib/array/uint8c/lib/polyfill.js","../node_modules/@stdlib/assert/is-int8array/lib/main.js","../node_modules/@stdlib/constants/int8/max/lib/index.js","../node_modules/@stdlib/assert/has-int8array-support/lib/int8array.js","../node_modules/@stdlib/array/int8/lib/main.js","../node_modules/@stdlib/array/int8/lib/index.js","../node_modules/@stdlib/assert/has-int8array-support/lib/main.js","../node_modules/@stdlib/constants/int8/min/lib/index.js","../node_modules/@stdlib/array/int8/lib/polyfill.js","../node_modules/@stdlib/assert/is-array-like-object/lib/main.js","../node_modules/@stdlib/assert/is-string-array/lib/index.js","../node_modules/@stdlib/complex/float64/ctor/lib/main.js","../node_modules/@stdlib/complex/float64/ctor/lib/tostring.js","../node_modules/@stdlib/complex/float64/ctor/lib/tojson.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/main.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/polyfill.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/index.js","../node_modules/@stdlib/complex/float32/ctor/lib/main.js","../node_modules/@stdlib/assert/is-complex-like/lib/main.js","../node_modules/@stdlib/complex/float32/ctor/lib/tostring.js","../node_modules/@stdlib/complex/float32/ctor/lib/tojson.js","../node_modules/@stdlib/array/base/assert/is-complex64array/lib/main.js","../node_modules/@stdlib/array/base/assert/is-complex128array/lib/main.js","../node_modules/@stdlib/assert/has-iterator-symbol-support/lib/main.js","../node_modules/@stdlib/symbol/iterator/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/complex/float32/real/lib/main.js","../node_modules/@stdlib/complex/float32/imag/lib/main.js","../node_modules/@stdlib/strided/base/reinterpret-complex64/lib/main.js","../node_modules/@stdlib/strided/base/reinterpret-complex128/lib/main.js","../node_modules/@stdlib/array/complex64/lib/from_iterator.js","../node_modules/@stdlib/array/complex64/lib/main.js","../node_modules/@stdlib/array/complex64/lib/from_array.js","../node_modules/@stdlib/complex/float64/real/lib/main.js","../node_modules/@stdlib/complex/float64/imag/lib/main.js","../node_modules/@stdlib/array/complex128/lib/from_iterator.js","../node_modules/@stdlib/array/complex64/lib/from_iterator_map.js","../node_modules/@stdlib/array/complex128/lib/main.js","../node_modules/@stdlib/array/complex128/lib/from_array.js","../node_modules/@stdlib/array/bool/lib/from_iterator.js","../node_modules/@stdlib/array/complex128/lib/from_iterator_map.js","../node_modules/@stdlib/array/bool/lib/main.js","../node_modules/@stdlib/array/bool/lib/from_array.js","../node_modules/@stdlib/array/bool/lib/from_iterator_map.js","../node_modules/@stdlib/array/dtype/lib/ctors.js","../node_modules/@stdlib/array/dtype/lib/dtypes.js","../node_modules/@stdlib/array/dtype/lib/main.js","../node_modules/@stdlib/array/base/resolve-getter/lib/main.js","../bifurcate/lib/validate.js","../bifurcate/lib/main.js","../node_modules/@stdlib/array/base/bifurcate-values/lib/main.js","../node_modules/@stdlib/array/base/bifurcate-indices/lib/main.js","../node_modules/@stdlib/array/base/bifurcate-entries/lib/main.js","../bifurcate-by/lib/validate.js","../bifurcate-by/lib/main.js","../bifurcate-by/lib/return_values.js","../bifurcate-by/lib/return_indices.js","../bifurcate-by/lib/return_pairs.js","../bifurcate-in/lib/validate.js","../bifurcate-in/lib/main.js","../bifurcate-in/lib/return_values.js","../bifurcate-in/lib/return_keys.js","../bifurcate-in/lib/return_pairs.js","../bifurcate-own/lib/validate.js","../bifurcate-own/lib/main.js","../bifurcate-own/lib/return_values.js","../bifurcate-own/lib/return_keys.js","../bifurcate-own/lib/return_pairs.js","../capitalize-keys/lib/main.js","../common-keys/lib/main.js","../keys-in/lib/main.js","../common-keys-in/lib/main.js","../node_modules/@stdlib/assert/has-property/lib/main.js","../compose/lib/main.js","../constant-function/lib/main.js","../node_modules/@stdlib/regexp/extended-length-path/lib/main.js","../node_modules/@stdlib/regexp/extended-length-path/lib/index.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/exec.js","../node_modules/@stdlib/assert/is-regexp/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/try2exec.js","../node_modules/@stdlib/string/base/replace/lib/main.js","../node_modules/@stdlib/string/replace/lib/main.js","../convert-path/lib/main.js","../node_modules/@stdlib/string/base/lowercase/lib/main.js","../node_modules/@stdlib/assert/is-error/lib/main.js","../node_modules/@stdlib/regexp/regexp/lib/main.js","../regexp-from-string/lib/main.js","../node_modules/@stdlib/regexp/regexp/lib/index.js","../property-names/lib/has_builtin.js","../property-names/lib/builtin.js","../property-names/lib/index.js","../property-names/lib/polyfill.js","../property-descriptor/lib/has_builtin.js","../property-descriptor/lib/builtin.js","../property-descriptor/lib/index.js","../get-prototype-of/lib/detect.js","../property-descriptor/lib/polyfill.js","../get-prototype-of/lib/native.js","../get-prototype-of/lib/polyfill.js","../get-prototype-of/lib/proto.js","../get-prototype-of/lib/main.js","../node_modules/@stdlib/assert/has-node-buffer-support/lib/buffer.js","../node_modules/@stdlib/buffer/ctor/lib/index.js","../node_modules/@stdlib/buffer/ctor/lib/main.js","../node_modules/@stdlib/assert/has-node-buffer-support/lib/main.js","../node_modules/@stdlib/buffer/ctor/lib/polyfill.js","../node_modules/@stdlib/buffer/from-buffer/lib/index.js","../node_modules/@stdlib/buffer/from-buffer/lib/has_from.js","../node_modules/@stdlib/buffer/from-buffer/lib/main.js","../node_modules/@stdlib/buffer/from-buffer/lib/polyfill.js","../copy/lib/typed_arrays.js","../copy/lib/deep_copy.js","../copy/lib/main.js","../count-by/lib/main.js","../count-by/lib/validate.js","../curry/lib/main.js","../curry-right/lib/main.js","../decorate-after/lib/main.js","../node_modules/@stdlib/function/ctor/lib/main.js","../node_modules/@stdlib/function/to-string/lib/main.js","../node_modules/@stdlib/regexp/native-function/lib/main.js","../node_modules/@stdlib/regexp/native-function/lib/regexp.js","../node_modules/@stdlib/regexp/native-function/lib/index.js","../decorate-after/lib/factory.js","../deep-get/lib/validate.js","../deep-get/lib/dget.js","../deep-get/lib/main.js","../deep-get/lib/defaults.js","../deep-get/lib/factory.js","../deep-pluck/lib/main.js","../deep-pluck/lib/defaults.js","../deep-pluck/lib/validate.js","../deep-set/lib/validate.js","../deep-set/lib/dset.js","../deep-set/lib/main.js","../deep-set/lib/defaults.js","../define-configurable-read-only-accessor/lib/main.js","../define-configurable-read-only-property/lib/main.js","../define-configurable-read-write-accessor/lib/main.js","../define-configurable-write-only-accessor/lib/main.js","../define-memoized-property/lib/main.js","../define-memoized-configurable-read-only-property/lib/main.js","../define-memoized-read-only-property/lib/main.js","../define-nonenumerable-property/lib/main.js","../define-nonenumerable-read-only-accessor/lib/main.js","../define-nonenumerable-read-write-accessor/lib/main.js","../define-nonenumerable-write-only-accessor/lib/main.js","../decorate-after/lib/index.js","../deep-get/lib/index.js","../deep-set/lib/index.js","../deep-set/lib/factory.js","../node_modules/@stdlib/assert/has-define-properties-support/lib/define_properties.js","../define-properties/lib/builtin.js","../define-properties/lib/index.js","../node_modules/@stdlib/assert/has-define-properties-support/lib/main.js","../define-properties/lib/polyfill.js","../define-read-only-accessor/lib/main.js","../define-read-write-accessor/lib/main.js","../define-write-only-accessor/lib/main.js","../node_modules/@stdlib/regexp/dirname-posix/lib/main.js","../node_modules/@stdlib/regexp/dirname-posix/lib/regexp.js","../node_modules/@stdlib/regexp/dirname-windows/lib/main.js","../node_modules/@stdlib/regexp/dirname-posix/lib/index.js","../node_modules/@stdlib/regexp/dirname-windows/lib/regexp.js","../node_modules/@stdlib/regexp/dirname-windows/lib/index.js","../node_modules/@stdlib/os/platform/lib/main.js","../node_modules/@stdlib/assert/is-windows/lib/index.js","../node_modules/@stdlib/array/base/assert/contains/lib/factory.js","../node_modules/@stdlib/array/base/assert/contains/lib/index.js","../node_modules/@stdlib/array/base/assert/contains/lib/main.js","../node_modules/@stdlib/regexp/dirname/lib/main.js","../node_modules/@stdlib/regexp/dirname/lib/index.js","../dirname/lib/main.js","../do-until/lib/main.js","../do-until-each/lib/main.js","../do-until-each-right/lib/main.js","../do-while/lib/main.js","../do-while-each/lib/main.js","../do-while-each-right/lib/main.js","../escape-regexp-string/lib/main.js","../dsv/base/parse/lib/defaults.js","../dsv/base/parse/lib/states/state2enum.js","../dsv/base/parse/lib/states/closed.js","../dsv/base/parse/lib/states/comment.js","../dsv/base/parse/lib/states/error.js","../dsv/base/parse/lib/states/max.js","../dsv/base/parse/lib/states/escape.js","../dsv/base/parse/lib/states/field.js","../dsv/base/parse/lib/states/init.js","../dsv/base/parse/lib/states/invalid_quote_end.js","../dsv/base/parse/lib/states/quote_end.js","../dsv/base/parse/lib/states/quoted_escape.js","../dsv/base/parse/lib/states/quoted_field.js","../dsv/base/parse/lib/states/skip.js","../dsv/base/parse/lib/states/skipped_comment.js","../dsv/base/parse/lib/states/skipped_escape.js","../dsv/base/parse/lib/states/skipped_field.js","../dsv/base/parse/lib/states/skipped_invalid_quote_end.js","../dsv/base/parse/lib/states/skipped_quote_end.js","../dsv/base/parse/lib/states/skipped_quoted_escape.js","../dsv/base/parse/lib/states/skipped_quoted_field.js","../dsv/base/parse/lib/states/index.js","../dsv/base/parse/lib/main.js","../dsv/base/lib/index.js","../dsv/lib/index.js","../entries/lib/main.js","../entries-in/lib/main.js","../property-symbols/lib/has_builtin.js","../property-symbols/lib/builtin.js","../property-symbols/lib/index.js","../property-symbols/lib/polyfill.js","../enumerable-properties/lib/main.js","../enumerable-properties-in/lib/main.js","../enumerable-property-symbols/lib/main.js","../enumerable-property-symbols-in/lib/main.js","../eval/lib/index.js","../node_modules/@stdlib/array/base/assert/is-booleanarray/lib/main.js","../node_modules/@stdlib/array/base/setter/lib/main.js","../node_modules/@stdlib/array/base/accessor-setter/lib/main.js","../node_modules/@stdlib/array/base/arraylike2object/lib/main.js","../node_modules/@stdlib/strided/base/reinterpret-boolean/lib/main.js","../node_modules/@stdlib/array/base/every/lib/main.js","../every/lib/main.js","../every-by/lib/main.js","../every-by-right/lib/main.js","../node_modules/@stdlib/regexp/extname-posix/lib/main.js","../node_modules/@stdlib/regexp/extname-posix/lib/regexp.js","../node_modules/@stdlib/regexp/extname-windows/lib/main.js","../node_modules/@stdlib/regexp/extname-posix/lib/index.js","../node_modules/@stdlib/regexp/extname-windows/lib/regexp.js","../node_modules/@stdlib/regexp/extname-windows/lib/index.js","../node_modules/@stdlib/regexp/extname/lib/main.js","../node_modules/@stdlib/regexp/extname/lib/index.js","../extname/lib/main.js","../filter-arguments/lib/main.js","../find/lib/find.js","../node_modules/@stdlib/constants/float64/max/lib/index.js","../flatten-array/lib/defaults.js","../flatten-array/lib/recurse.js","../flatten-array/lib/main.js","../flatten-array/lib/validate.js","../node_modules/@stdlib/assert/is-positive-integer-array/lib/index.js","../flatten-object/lib/defaults.js","../flatten-object/lib/validate.js","../flatten-object/lib/recurse.js","../flatten-object/lib/flatten.js","../flatten-object/lib/main.js","../for-each/lib/main.js","../for-each-right/lib/main.js","../for-in/lib/main.js","../for-own/lib/main.js","../flatten-array/lib/index.js","../flatten-array/lib/factory.js","../flatten-array/lib/gen_fcn.js","../flatten-array/lib/wrap_flatten_copy.js","../flatten-array/lib/wrap_flatten.js","../flatten-object/lib/index.js","../flatten-object/lib/factory.js","../node_modules/@stdlib/assert/is-array-array/lib/main.js","../from-entries/lib/main.js","../node_modules/@stdlib/assert/has-function-name-support/lib/foo.js","../node_modules/@stdlib/assert/has-function-name-support/lib/main.js","../function-name/lib/main.js","../function-sequence/lib/main.js","../group/lib/validate.js","../group/lib/main.js","../node_modules/@stdlib/array/base/group-values/lib/main.js","../node_modules/@stdlib/array/base/group-indices/lib/main.js","../node_modules/@stdlib/array/base/group-entries/lib/main.js","../group-by/lib/validate.js","../group-by/lib/main.js","../group-by/lib/return_values.js","../group-by/lib/return_indices.js","../group-by/lib/return_pairs.js","../group-in/lib/validate.js","../group-in/lib/main.js","../group-in/lib/return_values.js","../group-in/lib/return_keys.js","../group-in/lib/return_pairs.js","../group-own/lib/validate.js","../group-own/lib/main.js","../group-own/lib/return_values.js","../group-own/lib/return_keys.js","../group-own/lib/return_pairs.js","../identity-function/lib/main.js","../if-else/lib/main.js","../if-then/lib/main.js","../inherit/lib/validate.js","../inherit/lib/native.js","../inherit/lib/polyfill.js","../inherit/lib/detect.js","../inherit/lib/main.js","../node_modules/@stdlib/constants/float64/max-safe-integer/lib/index.js","../inherited-enumerable-properties/lib/main.js","../inherited-enumerable-property-symbols/lib/main.js","../inherited-keys/lib/main.js","../node_modules/@stdlib/assert/is-nonenumerable-property/lib/main.js","../inherited-nonenumerable-properties/lib/main.js","../inherited-nonenumerable-property-names/lib/main.js","../inherited-nonenumerable-property-symbols/lib/main.js","../inherited-properties/lib/main.js","../inherited-property-descriptor/lib/main.js","../property-descriptors/lib/has_builtin.js","../property-descriptors/lib/builtin.js","../property-descriptors/lib/index.js","../property-descriptors/lib/polyfill.js","../inherited-property-descriptors/lib/main.js","../inherited-property-names/lib/main.js","../inherited-property-symbols/lib/main.js","../node_modules/@stdlib/utils/property-descriptor/lib/has_builtin.js","../node_modules/@stdlib/utils/property-descriptor/lib/builtin.js","../node_modules/@stdlib/utils/property-descriptor/lib/index.js","../node_modules/@stdlib/utils/property-descriptor/lib/polyfill.js","../node_modules/@stdlib/assert/is-writable-property/lib/main.js","../inherited-writable-properties/lib/main.js","../inherited-writable-property-names/lib/main.js","../inherited-writable-property-symbols/lib/main.js","../inmap/lib/main.js","../inmap-right/lib/main.js","../key-by/lib/main.js","../key-by-right/lib/main.js","../lowercase-keys/lib/main.js","../node_modules/@stdlib/assert/has-bigint-support/lib/main.js","../node_modules/@stdlib/ndarray/base/strides2order/lib/main.js","../node_modules/@stdlib/array/base/slice/lib/main.js","../node_modules/@stdlib/ndarray/base/ctor/lib/is_column_major_contiguous.js","../node_modules/@stdlib/ndarray/base/ctor/lib/is_row_major_contiguous.js","../node_modules/@stdlib/ndarray/base/minmax-view-buffer-index/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-column-major-string/lib/main.js","../node_modules/@stdlib/ndarray/base/minmax-view-buffer-index/lib/index.js","../node_modules/@stdlib/ndarray/base/minmax-view-buffer-index/lib/assign.js","../node_modules/@stdlib/ndarray/base/ctor/lib/tostring.js","../node_modules/@stdlib/assert/is-dataview/lib/main.js","../node_modules/@stdlib/assert/has-dataview-support/lib/dataview.js","../node_modules/@stdlib/array/dataview/lib/main.js","../node_modules/@stdlib/array/dataview/lib/index.js","../node_modules/@stdlib/assert/has-dataview-support/lib/main.js","../node_modules/@stdlib/array/dataview/lib/polyfill.js","../node_modules/@stdlib/bigint/ctor/lib/main.js","../node_modules/@stdlib/ndarray/dtypes/lib/main.js","../node_modules/@stdlib/ndarray/dtypes/lib/enum.js","../node_modules/@stdlib/utils/define-read-only-property/lib/main.js","../node_modules/@stdlib/utils/keys/lib/builtin.js","../node_modules/@stdlib/utils/keys/lib/has_builtin.js","../node_modules/@stdlib/utils/keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils/keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils/noop/lib/main.js","../node_modules/@stdlib/utils/keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/utils/index-of/lib/main.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils/keys/lib/window.js","../node_modules/@stdlib/utils/keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils/keys/lib/has_window.js","../node_modules/@stdlib/utils/keys/lib/main.js","../node_modules/@stdlib/utils/keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils/keys/lib/polyfill.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype_wrapper.js","../node_modules/@stdlib/ndarray/dtypes/lib/index.js","../node_modules/@stdlib/ndarray/dtypes/lib/assign.js","../node_modules/@stdlib/ndarray/orders/lib/main.js","../node_modules/@stdlib/blas/base/layouts/lib/enum.js","../node_modules/@stdlib/blas/base/layouts/lib/index.js","../node_modules/@stdlib/blas/base/layouts/lib/main.js","../node_modules/@stdlib/ndarray/orders/lib/enum.js","../node_modules/@stdlib/ndarray/orders/lib/index.js","../node_modules/@stdlib/ndarray/index-modes/lib/main.js","../node_modules/@stdlib/ndarray/index-modes/lib/enum.js","../node_modules/@stdlib/ndarray/index-modes/lib/index.js","../node_modules/@stdlib/ndarray/base/ctor/lib/meta2dataview.js","../node_modules/@stdlib/number/float64/base/to-int64-bytes/lib/assign.js","../node_modules/@stdlib/number/float64/base/to-int64-bytes/lib/index.js","../node_modules/@stdlib/number/float64/base/to-int64-bytes/lib/main.js","../node_modules/@stdlib/ndarray/base/ctor/lib/meta2dataview.polyfill.js","../node_modules/@stdlib/ndarray/base/ctor/lib/main.js","../node_modules/@stdlib/ndarray/base/bytes-per-element/lib/main.js","../node_modules/@stdlib/ndarray/base/iteration-order/lib/main.js","../node_modules/@stdlib/ndarray/base/ctor/lib/is_contiguous.js","../node_modules/@stdlib/assert/is-ndarray-like/lib/main.js","../node_modules/@stdlib/array/base/zeros/lib/main.js","../node_modules/@stdlib/array/base/filled/lib/main.js","../node_modules/@stdlib/ndarray/base/numel/lib/main.js","../node_modules/@stdlib/ndarray/base/dtype/lib/main.js","../node_modules/@stdlib/array/base/copy-indexed/lib/main.js","../node_modules/@stdlib/ndarray/base/shape/lib/main.js","../node_modules/@stdlib/ndarray/base/shape2strides/lib/main.js","../node_modules/@stdlib/ndarray/base/ctor/lib/copy_flags.js","../node_modules/@stdlib/ndarray/base/ctor/lib/get.js","../node_modules/@stdlib/ndarray/base/ctor/lib/iget.js","../node_modules/@stdlib/ndarray/base/ctor/lib/set.js","../node_modules/@stdlib/ndarray/base/ctor/lib/iset.js","../node_modules/@stdlib/ndarray/base/ctor/lib/tojson.js","../node_modules/@stdlib/ndarray/base/ctor/lib/valueof.js","../node_modules/@stdlib/ndarray/base/shape2strides/lib/index.js","../node_modules/@stdlib/ndarray/base/shape2strides/lib/assign.js","../node_modules/@stdlib/ndarray/base/strides/lib/main.js","../node_modules/@stdlib/ndarray/base/strides2offset/lib/main.js","../node_modules/@stdlib/ndarray/base/offset/lib/main.js","../node_modules/@stdlib/ndarray/base/order/lib/main.js","../node_modules/@stdlib/ndarray/base/data-buffer/lib/main.js","../node_modules/@stdlib/ndarray/base/ndarraylike2object/lib/main.js","../node_modules/@stdlib/ndarray/base/buffer-ctors/lib/ctors.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/index.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/has_alloc_unsafe.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/main.js","../node_modules/@stdlib/buffer/alloc-unsafe/lib/polyfill.js","../node_modules/@stdlib/ndarray/base/buffer/lib/main.js","../node_modules/@stdlib/ndarray/base/buffer-ctors/lib/main.js","../node_modules/@stdlib/ndarray/base/buffer/lib/zeros.js","../node_modules/@stdlib/assert/is-nonnegative-integer-array/lib/index.js","../node_modules/@stdlib/assert/is-integer-array/lib/index.js","../node_modules/@stdlib/ndarray/base/assert/is-order/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-data-type/lib/main.js","../node_modules/@stdlib/ndarray/defaults/lib/main.js","../node_modules/@stdlib/ndarray/defaults/lib/get.js","../node_modules/@stdlib/utils/inherit/lib/validate.js","../node_modules/@stdlib/ndarray/defaults/lib/index.js","../node_modules/@stdlib/utils/inherit/lib/native.js","../node_modules/@stdlib/utils/inherit/lib/polyfill.js","../node_modules/@stdlib/utils/inherit/lib/detect.js","../node_modules/@stdlib/ndarray/base/clamp-index/lib/main.js","../node_modules/@stdlib/ndarray/base/wrap-index/lib/main.js","../node_modules/@stdlib/ndarray/base/normalize-index/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-index-mode/lib/main.js","../node_modules/@stdlib/ndarray/base/ind/lib/factory.js","../node_modules/@stdlib/ndarray/base/ind/lib/main.js","../node_modules/@stdlib/ndarray/base/ind/lib/index.js","../node_modules/@stdlib/ndarray/ctor/lib/iget.js","../node_modules/@stdlib/ndarray/ctor/lib/iset.js","../node_modules/@stdlib/ndarray/ctor/lib/copy_array.js","../node_modules/@stdlib/ndarray/ctor/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-buffer-length-compatible/lib/main.js","../node_modules/@stdlib/ndarray/ctor/lib/validate.js","../node_modules/@stdlib/utils/inherit/lib/main.js","../node_modules/@stdlib/ndarray/ctor/lib/get.js","../node_modules/@stdlib/ndarray/ctor/lib/set.js","../node_modules/@stdlib/ndarray/zeros/lib/main.js","../node_modules/@stdlib/ndarray/base/vind2bind/lib/main.js","../map/lib/ndarray.js","../map/lib/array.js","../map/lib/main.js","../node_modules/@stdlib/ndarray/base/broadcast-array/lib/main.js","../node_modules/@stdlib/ndarray/base/maybe-broadcast-array/lib/main.js","../node_modules/@stdlib/object/assign/lib/has_object_assign.js","../node_modules/@stdlib/object/assign/lib/builtin.js","../node_modules/@stdlib/utils/property-symbols/lib/has_builtin.js","../node_modules/@stdlib/utils/property-symbols/lib/builtin.js","../node_modules/@stdlib/utils/property-symbols/lib/index.js","../node_modules/@stdlib/object/assign/lib/index.js","../node_modules/@stdlib/utils/property-symbols/lib/polyfill.js","../node_modules/@stdlib/utils/enumerable-properties/lib/main.js","../node_modules/@stdlib/object/assign/lib/polyfill.js","../node_modules/@stdlib/ndarray/base/flag/lib/main.js","../node_modules/@stdlib/ndarray/base/flags/lib/main.js","../node_modules/@stdlib/ndarray/base/assert/is-read-only/lib/main.js","../map-arguments/lib/main.js","../map-function/lib/main.js","../map-keys/lib/main.js","../map/lib/index.js","../map/lib/assign.js","../map-reduce/lib/ndarray.js","../map-reduce/lib/main.js","../map-reduce/lib/array.js","../map-reduce-right/lib/ndarray.js","../map-reduce-right/lib/main.js","../map-reduce-right/lib/array.js","../map-right/lib/ndarray.js","../map-right/lib/array.js","../map-right/lib/main.js","../map-values/lib/main.js","../node_modules/@stdlib/ndarray/base/broadcast-shapes/lib/main.js","../map-right/lib/index.js","../map-right/lib/assign.js","../map2/lib/ndarray.js","../map2/lib/array.js","../map2/lib/main.js","../map2/lib/index.js","../map2/lib/assign.js","../map2-right/lib/ndarray.js","../map2-right/lib/array.js","../map2-right/lib/main.js","../map2d/lib/main.js","../map3d/lib/main.js","../map4d/lib/main.js","../map5d/lib/main.js","../mask-arguments/lib/main.js","../memoize/lib/main.js","../merge/lib/defaults.js","../merge/lib/deepmerge.js","../merge/lib/mergefcn.js","../map2-right/lib/index.js","../map2-right/lib/assign.js","../merge/lib/main.js","../move-property/lib/main.js","../nary-function/lib/main.js","../merge/lib/index.js","../merge/lib/factory.js","../merge/lib/validate.js","../next-tick/lib/main.js","../node_modules/@stdlib/array/base/none/lib/main.js","../none/lib/main.js","../none-by/lib/main.js","../none-by-right/lib/main.js","../nonenumerable-properties/lib/main.js","../nonenumerable-properties-in/lib/main.js","../nonenumerable-property-names/lib/main.js","../nonenumerable-property-names-in/lib/main.js","../nonenumerable-property-symbols/lib/main.js","../nonenumerable-property-symbols-in/lib/main.js","../nonindex-keys/lib/main.js","../object-inverse/lib/main.js","../object-inverse-by/lib/main.js","../omit/lib/main.js","../omit-by/lib/main.js","../node_modules/@stdlib/assert/is-darwin/lib/index.js","../node_modules/@stdlib/assert/is-uri/lib/main.js","../open-url/lib/main.js","../papply/lib/main.js","../papply-right/lib/main.js","../node_modules/@stdlib/process/cwd/lib/main.js","../node_modules/@stdlib/os/num-cpus/lib/main.js","../6a26c0b162de68bbe77ec521d3312f","../node_modules/@stdlib/process/env/lib/main.js","../parallel/lib/node/env.js","../parallel/lib/node/exec.js","../parallel/lib/node/options.js","../parallel/lib/main.js","../parallel/lib/defaults.js","../parallel/lib/validate.js","../parse-json/lib/main.js","../pick/lib/main.js","../pick-arguments/lib/main.js","../pick-by/lib/main.js","../pluck/lib/main.js","../pluck/lib/defaults.js","../pluck/lib/validate.js","../pop/lib/main.js","../pop/lib/pop_typed_array.js","../pop/lib/pop_object.js","../prepend/lib/main.js","../prepend/lib/prepend_array.js","../prepend/lib/prepend_typed_array.js","../prepend/lib/prepend_object.js","../properties/lib/main.js","../properties-in/lib/main.js","../property-descriptor-in/lib/main.js","../property-descriptors-in/lib/main.js","../property-names-in/lib/main.js","../property-symbols-in/lib/main.js","../push/lib/main.js","../push/lib/push_array.js","../push/lib/push_typed_array.js","../push/lib/push_object.js","../real-max/lib/main.js","../node_modules/@stdlib/constants/float32/max/lib/index.js","../node_modules/@stdlib/constants/float16/max/lib/index.js","../real-min/lib/main.js","../node_modules/@stdlib/constants/float32/smallest-normal/lib/index.js","../node_modules/@stdlib/constants/float16/smallest-normal/lib/index.js","../reduce/lib/ndarray.js","../reduce/lib/main.js","../reduce/lib/array.js","../reduce-right/lib/ndarray.js","../reduce-right/lib/main.js","../reduce-right/lib/array.js","../reduce2d/lib/main.js","../reject-arguments/lib/main.js","../reorder-arguments/lib/main.js","../reverse-arguments/lib/main.js","../safe-int-max/lib/main.js","../node_modules/@stdlib/constants/float32/max-safe-integer/lib/index.js","../node_modules/@stdlib/constants/float16/max-safe-integer/lib/index.js","../safe-int-min/lib/main.js","../node_modules/@stdlib/constants/float64/min-safe-integer/lib/index.js","../node_modules/@stdlib/constants/float32/min-safe-integer/lib/index.js","../node_modules/@stdlib/constants/float16/min-safe-integer/lib/index.js","../shift/lib/main.js","../shift/lib/shift_typed_array.js","../shift/lib/shift_object.js","../size-of/lib/main.js","../node_modules/@stdlib/constants/complex64/num-bytes/lib/index.js","../node_modules/@stdlib/constants/float32/num-bytes/lib/index.js","../node_modules/@stdlib/constants/uint8/num-bytes/lib/index.js","../node_modules/@stdlib/constants/float16/num-bytes/lib/index.js","../node_modules/@stdlib/constants/complex128/num-bytes/lib/index.js","../some/lib/main.js","../some-by/lib/main.js","../some-by-right/lib/main.js","../tabulate/lib/main.js","../tabulate-by/lib/main.js","../tabulate-by/lib/validate.js","../node_modules/@stdlib/utils/define-nonenumerable-read-write-accessor/lib/main.js","../node_modules/@stdlib/blas/base/gcopy/lib/accessors.js","../node_modules/@stdlib/blas/base/gcopy/lib/main.js","../node_modules/@stdlib/blas/base/gcopy/lib/index.js","../node_modules/@stdlib/blas/base/gcopy/lib/ndarray.js","../node_modules/@stdlib/utils/function-name/lib/main.js","../node_modules/@stdlib/assert/is-typed-array/lib/ctors.js","../node_modules/@stdlib/assert/is-typed-array/lib/main.js","../node_modules/@stdlib/assert/is-complex-typed-array/lib/ctors.js","../node_modules/@stdlib/assert/instance-of/lib/main.js","../node_modules/@stdlib/array/to-json/lib/ctors.js","../node_modules/@stdlib/array/to-json/lib/type.js","../node_modules/@stdlib/array/to-json/lib/main.js","../node_modules/@stdlib/assert/is-booleanarray/lib/main.js","../node_modules/@stdlib/assert/is-complex-typed-array/lib/main.js","../node_modules/@stdlib/random/base/minstd-shuffle/lib/create_table.js","../node_modules/@stdlib/random/base/minstd-shuffle/lib/rand_int32.js","../node_modules/@stdlib/random/base/minstd-shuffle/lib/factory.js","../node_modules/@stdlib/random/base/minstd-shuffle/lib/main.js","../node_modules/@stdlib/random/base/minstd-shuffle/lib/index.js","../node_modules/@stdlib/time/tic/lib/main.js","../node_modules/@stdlib/time/toc/lib/main.js","../timeit/lib/async.js","../timeit/lib/vm_compile.js","../timeit/lib/vm_evaluate.js","../timeit/lib/context.js","../timeit/lib/sync.js","../timeit/lib/wrap.js","../timeit/lib/main.js","../timeit/lib/validate.js","../node_modules/@stdlib/assert/is-null/lib/main.js","../timeit/lib/transform.js","../timeit/lib/min_time.js","../try-catch/lib/main.js","../try-function/lib/main.js","../try-require/lib/main.js","../try-then/lib/main.js","../node_modules/@stdlib/constants/float16/pinf/lib/index.js","../node_modules/@stdlib/constants/float32/pinf/lib/index.js","../type-max/lib/main.js","../node_modules/@stdlib/constants/float16/ninf/lib/index.js","../node_modules/@stdlib/constants/float32/ninf/lib/index.js","../type-min/lib/main.js","../uncapitalize-keys/lib/main.js","../uncurry/lib/main.js","../uncurry-right/lib/main.js","../unshift/lib/main.js","../unshift/lib/unshift_array.js","../unshift/lib/unshift_typed_array.js","../unshift/lib/unshift_object.js","../until/lib/main.js","../until-each/lib/main.js","../until-each-right/lib/main.js","../unzip/lib/main.js","../uppercase-keys/lib/main.js","../values/lib/main.js","../values-in/lib/main.js","../while/lib/main.js","../while-each/lib/main.js","../while-each-right/lib/main.js","../writable-properties/lib/main.js","../writable-properties-in/lib/main.js","../writable-property-names/lib/main.js","../writable-property-names-in/lib/main.js","../writable-property-symbols/lib/main.js","../writable-property-symbols-in/lib/main.js","../zip/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\nimport zeroPad from './zero_pad.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {number} f - parsed number\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( f, token ) {\n\tvar digits;\n\tvar out;\n\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e' );\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js';\nimport isString from './is_string.js';\nimport isNumber from './is_number.js';\nimport formatDouble from './format_double.js';\nimport spacePad from './space_pad.js';\nimport zeroPad from './zero_pad.js';\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating whether a value is `NaN`.\n*\n* @private\n* @param {*} value - input value\n* @returns {boolean} boolean indicating whether a value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 4 );\n* // returns false\n*/\nfunction isnan( value ) { // explicitly define a function here instead of `@stdlib/math/base/assert/is-nan` in order to avoid circular dependencies\n\treturn ( value !== value );\n}\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar f;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\ttoken.arg = String( token.arg );\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ? String( token.arg ) : fromCharCode( num ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\tf = parseFloat( token.arg );\n\t\t\t\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\t\t\t\tif ( !isNumber( token.arg ) ) {\n\t\t\t\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t\t\t\t}\n\t\t\t\t\t// Case: NaN, Infinity, or -Infinity\n\t\t\t\t\tf = token.arg;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( f, token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\t// Check for an escaped percent sign `%%`...\n\t\tif ( match[ 6 ] === '%' ) {\n\t\t\ttokens.push( '%' );\n\t\t} else {\n\t\t\ttokens.push( parse( match ) );\n\t\t}\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from './../../base/format-interpolate';\nimport tokenize from './../../base/format-tokenize';\nimport isString from './is_string.js';\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from './../../../../base/special/floor';\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* import MAX_TYPED_ARRAY_LENGTH from '@stdlib/constants/array/max-typed-array-length';\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-typed-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection is truthy.\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} must provide a collection\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var arr = [ 0, 0, 0, 0, 1 ];\n*\n* var bool = any( arr );\n* // returns true\n*/\nfunction any( collection ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a collection. Value: `%s`.', collection ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( collection[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default any;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasSymbols from './../../has-symbol-support';\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nexport default hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Sym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils/native-class';\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert/has-tostringtag-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Symbol from '@stdlib/symbol/ctor';\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport toStringTag from './tostringtag.js';\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\nvar Bool = Boolean; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport Boolean from '@stdlib/boolean/ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import isBoolean from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import { isObject as isBoolean } from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\nimport getThis from './codegen.js';\nimport Self from './self.js';\nimport Win from './window.js';\nimport Global from './global.js';\nimport GlobalThis from './global_this.js';\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from './../../../global';\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nexport default reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reFunctionName from './main.js';\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nexport default RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* import reFunctionName from '@stdlib/regexp/function-name';\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nexport default f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../../is-array';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* import isOdd from '@stdlib/assert/is-odd';\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from './../../is-object-like';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\nimport isBuffer from '@stdlib/assert/is-buffer';\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* import isObjectLike from '@stdlib/assert/is-object-like';\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* import { isObjectLikeArray as isObjectLike } from '@stdlib/assert/is-object-like';\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport arrayfun from './../../tools/array-function';\nimport main from './main.js';\n\n\n// VARIABLES //\n\nvar isObjectLikeArray = arrayfun( main );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* import typeOf from '@stdlib/utils/type-of';\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js';\nimport nodeList from './fixtures/nodelist.js';\nimport typedarray from './fixtures/typedarray.js';\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport typeOf from '@stdlib/utils/type-of';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nexport default isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ 1, 2, 3, 4, -1 ];\n*\n* var bool = anyBy( arr, isNegative );\n* // returns true\n*/\nfunction anyBy( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn true;\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default anyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ -1, 1, 2, 3, 4 ];\n*\n* var bool = anyByRight( arr, isNegative );\n* // returns true\n*/\nfunction anyByRight( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn true;\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default anyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport Number from '@stdlib/number/ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* import isNumber from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNumber } from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNumber } from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* import FLOAT64_PINF from '@stdlib/constants/float64/pinf';\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* import FLOAT64_NINF from '@stdlib/constants/float64/ninf';\n* // returns -Infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nexport default FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport isInt from '@stdlib/math/base/assert/is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from './../../is-nonnegative-integer';\nimport MAX from '@stdlib/constants/array/max-typed-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is typed-array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is typed-array-like\n*\n* @example\n* var arr = {\n*     'BYTES_PER_ELEMENT': 8,\n*     'length': 10,\n*     'byteOffset': 0,\n*     'byteLength': 10\n* };\n* var val = isTypedArrayLike( arr );\n* // returns true\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var val = isTypedArrayLike( new Int8Array( 4 ) );\n* // returns true\n*\n* @example\n* var val = isTypedArrayLike( [] );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( {} );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( null );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( 'beep' );\n* // returns false\n*/\nfunction isTypedArrayLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\tisNonNegativeInteger( value.length ) &&\n\t\tvalue.length <= MAX &&\n\t\ttypeof value.BYTES_PER_ELEMENT === 'number' &&\n\t\ttypeof value.byteOffset === 'number' &&\n\t\ttypeof value.byteLength === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* import isInteger from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* import { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* import { isObject as isInteger } from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* import isNonNegativeInteger from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasArrayBuffer = ( typeof ArrayBuffer === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ArrayBuffer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an ArrayBuffer\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBuffer( [] );\n* // returns false\n*/\nfunction isArrayBuffer( value ) {\n\treturn (\n\t\t( hasArrayBuffer && value instanceof ArrayBuffer ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object ArrayBuffer]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat64Array from './../../is-float64array';\nimport GlobalFloat64Array from './float64array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* import ctor from '@stdlib/array/float64';\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nimport hasFloat64ArraySupport from '@stdlib/assert/has-float64array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @module @stdlib/array/buffer\n*\n* @example\n* import ctor from '@stdlib/array/buffer';\n*\n* var buf = new ctor( 10 );\n* // returns <ArrayBuffer>\n*/\n\n// MODULES //\n\nimport hasArrayBufferSupport from '@stdlib/assert/has-arraybuffer-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasArrayBufferSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayBuffer from './../../is-arraybuffer';\nimport Float64Array from '@stdlib/array/float64';\nimport GlobalArrayBuffer from './arraybuffer.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `ArrayBuffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `ArrayBuffer` support\n*\n* @example\n* var bool = hasArrayBufferSupport();\n* // returns <boolean>\n*/\nfunction hasArrayBufferSupport() {\n\tvar bool;\n\tvar view;\n\tvar buf;\n\n\tif ( typeof GlobalArrayBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tbuf = new GlobalArrayBuffer( 16 );\n\t\tbool = ( isArrayBuffer( buf ) && typeof GlobalArrayBuffer.isView === 'function' );\n\t\tif ( bool ) {\n\t\t\tview = new Float64Array( buf );\n\t\t\tview[ 0 ] = -3.14;\n\t\t\tview[ 1 ] = NaN;\n\t\t\tbool = (\n\t\t\t\tbool &&\n\t\t\t\tGlobalArrayBuffer.isView( view ) &&\n\t\t\t\tbuf.byteLength === 16 &&\n\t\t\t\tview[ 0 ] === -3.14 &&\n\t\t\t\tview[ 1 ] !== view[ 1 ]\n\t\t\t);\n\t\t}\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasArrayBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\nfunction isInfinite( x ) {\n\treturn (x === PINF || x === NINF);\n}\n\n\n// EXPORTS //\n\nexport default isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from './../../../../base/assert/is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/\nfunction isEven( x ) {\n\treturn isInteger( x/2.0 );\n}\n\n\n// EXPORTS //\n\nexport default isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEven from './../../../../base/assert/is-even';\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an odd number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an odd number\n*\n* @example\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isOdd( -2.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( NaN );\n* // returns false\n*/\nfunction isOdd( x ) {\n\t// Check sign to prevent overflow...\n\tif ( x > 0.0 ) {\n\t\treturn isEven( x-1.0 );\n\t}\n\treturn isEven( x+1.0 );\n}\n\n\n// EXPORTS //\n\nexport default isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Compute the principal square root of a double-precision floating-point number.\n*\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} principal square root\n*\n* @example\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\nvar sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nexport default abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/uint32/max\n* @type {uinteger32}\n*\n* @example\n* import UINT32_MAX from '@stdlib/constants/uint32/max';\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nexport default UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* import ctor from '@stdlib/array/uint32';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nimport hasUint32ArraySupport from '@stdlib/assert/has-uint32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint32Array from './../../is-uint32array';\nimport UINT32_MAX from '@stdlib/constants/uint32/max';\nimport GlobalUint32Array from './uint32array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* @module @stdlib/constants/uint8/max\n* @type {integer32}\n*\n* @example\n* import UINT8_MAX from '@stdlib/constants/uint8/max';\n* // returns 255\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{8} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 255\n*/\nvar UINT8_MAX = 255|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UINT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* import ctor from '@stdlib/array/uint8';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nimport hasUint8ArraySupport from '@stdlib/assert/has-uint8array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint8Array from './../../is-uint8array';\nimport UINT8_MAX from '@stdlib/constants/uint8/max';\nimport GlobalUint8Array from './uint8array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* @module @stdlib/constants/uint16/max\n* @type {integer32}\n*\n* @example\n* import UINT16_MAX from '@stdlib/constants/uint16/max';\n* // returns 65535\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{16} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 1111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 65535\n*/\nvar UINT16_MAX = 65535|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UINT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* import ctor from '@stdlib/array/uint16';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nimport hasUint16ArraySupport from '@stdlib/assert/has-uint16array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint16Array from './../../is-uint16array';\nimport UINT16_MAX from '@stdlib/constants/uint16/max';\nimport GlobalUint16Array from './uint16array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctors from './ctors.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint8Array from '@stdlib/array/uint8';\nimport Uint16Array from '@stdlib/array/uint16';\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nexport default indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport indices from './indices.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @private\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( x, out, stride, offset ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tout[ offset ] = UINT32_VIEW[ HIGH ];\n\tout[ offset + stride ] = UINT32_VIEW[ LOW ];\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fcn from './assign.js';\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {number} x - input value\n* @returns {Array<number>} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*/\nfunction toWords( x ) {\n\treturn fcn( x, [ 0>>>0, 0>>>0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nexport default toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/to-words\n*\n* @example\n* import toWords from '@stdlib/number/float64/base/to-words';\n*\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n* import toWords from '@stdlib/number/float64/base/to-words';\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords.assign( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nexport default LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport LOW from './low.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} low - unsigned 32-bit integer to replace the lower order word of `x`\n* @returns {number} double having the same higher order word as `x`\n*\n* @example\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf';\n* import NINF from '@stdlib/constants/float64/ninf';\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\nfunction setLowWord( x, low ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ LOW ] = ( low >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @param {uinteger32} x - unsigned 32-bit integer\n* @returns {integer32} signed 32-bit integer\n*\n* @example\n* import float64ToUint32 from '@stdlib/number/float64/base/to-uint32';\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* @example\n* import float64ToUint32 from '@stdlib/number/float64/base/to-uint32';\n* var y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\nfunction uint32ToInt32( x ) {\n\t// NOTE: we could also use typed-arrays to achieve the same end.\n\treturn x|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-abs-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for excluding the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483647 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 11111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7fffffff\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_ABS_MASK = 0x7fffffff>>>0; // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_ABS_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nexport default indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-sign-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_SIGN_MASK from '@stdlib/constants/float64/high-word-sign-mask';\n* // returns 2147483648\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483648 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 1 00000000000 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x80000000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_SIGN_MASK = 0x80000000>>>0; // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_SIGN_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nexport default HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport HIGH from './high.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\nfunction getHighWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ HIGH ];\n}\n\n\n// EXPORTS //\n\nexport default getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport indices from './indices.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\nfunction fromWords( high, low ) {\n\tUINT32_VIEW[ HIGH ] = high;\n\tUINT32_VIEW[ LOW ] = low;\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport SIGN_MASK from '@stdlib/constants/float64/high-word-sign-mask';\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport toWords from '@stdlib/number/float64/base/to-words';\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\nimport fromWords from '@stdlib/number/float64/base/from-words';\n\n\n// VARIABLES //\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\nfunction copysign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords.assign( x, WORDS, 1, 0 );\n\thx = WORDS[ 0 ];\n\n\t// Turn off the sign bit of `x`:\n\thx &= ABS_MASK;\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on:\n\thy &= SIGN_MASK;\n\n\t// Copy the sign bit of `y` to `x`:\n\thx |= hy;\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nexport default copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\n\n\n// VARIABLES //\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|y| > 2^64\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} overflow or underflow result\n*\n* @example\n* var v = pow( 9.0, 3.6893488147419103e19 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -3.14, -3.6893488147419103e19 );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tvar ahx;\n\tvar hx;\n\n\thx = getHighWord( x );\n\tahx = (hx & ABS_MASK);\n\n\tif ( ahx <= HIGH_MAX_NEAR_UNITY ) {\n\t\tif ( y < 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn HUGE * HUGE;\n\t\t}\n\t\t// Signal underflow...\n\t\treturn TINY * TINY;\n\t}\n\t// `x` has a biased exponent greater than or equal to `0`...\n\n\tif ( y > 0 ) {\n\t\t// Signal overflow...\n\t\treturn HUGE * HUGE;\n\t}\n\t// Signal underflow...\n\treturn TINY * TINY;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert/is-little-endian';\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nexport default HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float64Array from '@stdlib/array/float64';\nimport HIGH from './high.js';\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} high - unsigned 32-bit integer to replace the higher order word of `x`\n* @returns {number} double having the same lower order word as `x`\n*\n* @example\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); // => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf'; // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\nfunction setHighWord( x, high ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ HIGH ] = ( high >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants/float64/exponent-bias\n* @type {integer32}\n*\n* @example\n* import FLOAT64_EXPONENT_BIAS from '@stdlib/constants/float64/exponent-bias';\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_EXPONENT_BIAS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Number of significand bits in the high word of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/num-high-word-significand-bits\n* @type {integer32}\n*\n* @example\n* import FLOAT64_NUM_HIGH_WORD_SIGNIFICAND_BITS from '@stdlib/constants/float64/num-high-word-significand-bits';\n* // returns 20\n*/\n\n\n// MAIN //\n\n/**\n* Number of significand bits in the high word of a double-precision floating-point number.\n*\n* @constant\n* @type {integer32}\n* @default 20\n*/\nvar FLOAT64_NUM_HIGH_WORD_SIGNIFICAND_BITS = 20|0; // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nexport default FLOAT64_NUM_HIGH_WORD_SIGNIFICAND_BITS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport setHighWord from '@stdlib/number/float64/base/set-high-word';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\nimport HIGH_NUM_SIGNIFICAND_BITS from '@stdlib/constants/float64/num-high-word-significand-bits';\nimport polyvalL from './polyval_l.js';\n\n\n// VARIABLES //\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x20000000 = 536870912 => 0 01000000000 00000000000000000000 => biased exponent: 512 = -511+1023\nvar HIGH_BIASED_EXP_NEG_512 = 0x20000000|0; // asm type annotation\n\n// 0x00080000 = 524288 => 0 00000000000 10000000000000000000\nvar HIGH_SIGNIFICAND_HALF = 0x00080000|0; // asm type annotation\n\nvar TWO53 = 9007199254740992.0;\t// 0x43400000, 0x00000000\n\n// 2/(3*LN2)\nvar CP = 9.61796693925975554329e-01; // 0x3FEEC709, 0xDC3A03FD\n\n// (float)CP\nvar CP_HI = 9.61796700954437255859e-01; // 0x3FEEC709, 0xE0000000\n\n// Low: CP_HI\nvar CP_LO = -7.02846165095275826516e-09; // 0xBE3E2FE0, 0x145B01F5\n\nvar BP = [\n\t1.0,\n\t1.5\n];\nvar DP_HI = [\n\t0.0,\n\t5.84962487220764160156e-01 // 0x3FE2B803, 0x40000000\n];\nvar DP_LO = [\n\t0.0,\n\t1.35003920212974897128e-08 // 0x3E4CFDEB, 0x43CFD006\n];\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log2}(ax)\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @param {number} ahx - high word of `ax`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = log2ax( [ 0.0, 0.0 ], 9.0, 1075970048 ); // => [ t1, t2 ]\n* // returns [ 3.169923782348633, 0.0000012190936795504075 ]\n*/\nfunction log2ax( out, ax, ahx ) {\n\tvar tmp;\n\tvar ss; // `hs + ls`\n\tvar s2; // `ss` squared\n\tvar hs;\n\tvar ls;\n\tvar ht;\n\tvar lt;\n\tvar bp; // `BP` constant\n\tvar dp; // `DP` constant\n\tvar hp;\n\tvar lp;\n\tvar hz;\n\tvar lz;\n\tvar t1;\n\tvar t2;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar n;\n\tvar j;\n\tvar k;\n\n\tn = 0|0; // asm type annotation\n\n\t// Check if `x` is subnormal...\n\tif ( ahx < HIGH_MIN_NORMAL_EXP ) {\n\t\tax *= TWO53;\n\t\tn -= 53|0; // asm type annotation\n\t\tahx = getHighWord( ax );\n\t}\n\t// Extract the unbiased exponent of `x`:\n\tn += ((ahx >> HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\n\t// Isolate the significand bits of `x`:\n\tj = (ahx & HIGH_SIGNIFICAND_MASK)|0; // asm type annotation\n\n\t// Normalize `ahx` by setting the (biased) exponent to `1023`:\n\tahx = (j | HIGH_BIASED_EXP_0)|0; // asm type annotation\n\n\t// Determine the interval of `|x|` by comparing significand bits...\n\n\t// |x| < sqrt(3/2)\n\tif ( j <= 0x3988E ) { // 0 00000000000 00111001100010001110\n\t\tk = 0;\n\t}\n\t// |x| < sqrt(3)\n\telse if ( j < 0xBB67A ) { // 0 00000000000 10111011011001111010\n\t\tk = 1;\n\t}\n\t// |x| >= sqrt(3)\n\telse {\n\t\tk = 0;\n\t\tn += 1|0; // asm type annotation\n\t\tahx -= HIGH_MIN_NORMAL_EXP;\n\t}\n\t// Load the normalized high word into `|x|`:\n\tax = setHighWord( ax, ahx );\n\n\t// Compute `ss = hs + ls = (x-1)/(x+1)` or `(x-1.5)/(x+1.5)`:\n\tbp = BP[ k ]; // BP[0] = 1.0, BP[1] = 1.5\n\tu = ax - bp; // (x-1) || (x-1.5)\n\tv = 1.0 / (ax + bp); // 1/(x+1) || 1/(x+1.5)\n\tss = u * v;\n\ths = setLowWord( ss, 0 ); // set all low word (less significant significand) bits to 0s\n\n\t// Compute `ht = ax + bp` (via manipulation, i.e., bit flipping, of the high word):\n\ttmp = ((ahx>>1) | HIGH_BIASED_EXP_NEG_512) + HIGH_SIGNIFICAND_HALF;\n\ttmp += (k << 18); // `(k<<18)` can be considered the word equivalent of `1.0` or `1.5`\n\tht = setHighWord( 0.0, tmp );\n\tlt = ax - (ht - bp);\n\tls = v * ( ( u - (hs*ht) ) - ( hs*lt ) );\n\n\t// Compute `log(ax)`...\n\n\ts2 = ss * ss;\n\tr = s2 * s2 * polyvalL( s2 );\n\tr += ls * (hs + ss);\n\ts2 = hs * hs;\n\tht = 3.0 + s2 + r;\n\tht = setLowWord( ht, 0 );\n\tlt = r - ((ht-3.0) - s2);\n\n\t// u+v = ss*(1+...):\n\tu = hs * ht;\n\tv = ( ls*ht ) + ( lt*ss );\n\n\t// 2/(3LN2) * (ss+...):\n\thp = u + v;\n\thp = setLowWord( hp, 0 );\n\tlp = v - (hp - u);\n\thz = CP_HI * hp; // CP_HI+CP_LO = 2/(3*LN2)\n\tlz = ( CP_LO*hp ) + ( lp*CP ) + DP_LO[ k ];\n\n\t// log2(ax) = (ss+...)*2/(3*LN2) = n + dp + hz + lz\n\tdp = DP_HI[ k ];\n\tt = n;\n\tt1 = ((hz+lz) + dp) + t; // log2(ax)\n\tt1 = setLowWord( t1, 0 );\n\tt2 = lz - (((t1-t) - dp) - hz);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default log2ax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport polyvalW from './polyval_w.js';\n\n\n// VARIABLES //\n\n// 1/LN2\nvar INV_LN2 = 1.44269504088896338700e+00; // 0x3FF71547, 0x652B82FE\n\n// High (24 bits): 1/LN2\nvar INV_LN2_HI = 1.44269502162933349609e+00; // 0x3FF71547, 0x60000000\n\n// Low: 1/LN2\nvar INV_LN2_LO = 1.92596299112661746887e-08; // 0x3E54AE0B, 0xF85DDF44\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log}(x)\\\\) assuming \\\\(|1-x|\\\\) is small and using the approximation \\\\(x - x^2/2 + x^3/3 - x^4/4\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = logx( [ 0.0, 0.0 ], 9.0 ); // => [ t1, t2 ]\n* // returns [ -1265.7236328125, -0.0008163940840404393 ]\n*/\nfunction logx( out, ax ) {\n\tvar t2;\n\tvar t1;\n\tvar t;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tt = ax - 1.0; // `t` has `20` trailing zeros\n\tw = t * t * polyvalW( t );\n\tu = INV_LN2_HI * t; // `INV_LN2_HI` has `21` significant bits\n\tv = ( t*INV_LN2_LO ) - ( w*INV_LN2 );\n\tt1 = u + v;\n\tt1 = setLowWord( t1, 0 );\n\tt2 = v - (t1 - u);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default logx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MAX_BASE2_EXPONENT from '@stdlib/constants/float64/max-base2-exponent';\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_BASE2_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants/float64/max-base2-exponent-subnormal';\n* // returns -1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants/float64/min-base2-exponent-subnormal';\n* // returns -1074\n*/\n\n\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants/float64/smallest-normal\n* @type {number}\n*\n* @example\n* import FLOAT64_SMALLEST_NORMAL from '@stdlib/constants/float64/smallest-normal';\n* // returns 2.2250738585072014e-308\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n\n\n// EXPORTS //\n\nexport default FLOAT64_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_SMALLEST_NORMAL from '@stdlib/constants/float64/smallest-normal';\nimport isInfinite from '@stdlib/math/base/assert/is-infinite';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport abs from '@stdlib/math/base/special/abs';\n\n\n// VARIABLES //\n\n// (1<<52)\nvar SCALAR = 4503599627370496;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\) and assigns results to a provided output array.\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import pow from '@stdlib/math/base/special/pow';\n*\n* var out = normalize( 3.14e-319, [ 0.0, 0 ], 1, 0 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0, [ 0.0, 0 ], 1, 0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf';\n*\n* var out = normalize( PINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* import NINF from '@stdlib/constants/float64/ninf';\n*\n* var out = normalize( NINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN, [ 0.0, 0 ], 1, 0 );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x, out, stride, offset ) {\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\tout[ offset ] = x;\n\t\tout[ offset + stride ] = 0;\n\t\treturn out;\n\t}\n\tif ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {\n\t\tout[ offset ] = x * SCALAR;\n\t\tout[ offset + stride ] = -52;\n\t\treturn out;\n\t}\n\tout[ offset ] = x;\n\tout[ offset + stride ] = 0;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @module @stdlib/number/float64/base/normalize\n*\n* @example\n* import normalize from '@stdlib/number/float64/base/normalize';\n* import pow from '@stdlib/math/base/special/pow';\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0, exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import normalize from '@stdlib/number/float64/base/normalize';\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize.assign( 3.14e-319, out, 1, 0 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fcn from './assign.js';\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {number} x - input value\n* @returns {NumberArray} output array\n*\n* @example\n* import pow from '@stdlib/math/base/special/pow';\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* import PINF from '@stdlib/constants/float64/pinf';\n*\n* var out = normalize( PINF );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* import NINF from '@stdlib/constants/float64/ninf';\n*\n* var out = normalize( NINF );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x ) {\n\treturn fcn( x, [ 0.0, 0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nexport default normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_EXPONENT_MASK from '@stdlib/constants/float64/high-word-exponent-mask';\n* // returns 2146435072\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_EXPONENT_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\nimport MAX_EXPONENT from '@stdlib/constants/float64/max-base2-exponent';\nimport MAX_SUBNORMAL_EXPONENT from '@stdlib/constants/float64/max-base2-exponent-subnormal';\nimport MIN_SUBNORMAL_EXPONENT from '@stdlib/constants/float64/min-base2-exponent-subnormal';\nimport isnan from './../../../../base/assert/is-nan';\nimport isInfinite from './../../../../base/assert/is-infinite';\nimport copysign from './../../../../base/special/copysign';\nimport { assign as normalize } from '@stdlib/number/float64/base/normalize';\nimport floatExp from '@stdlib/number/float64/base/exponent';\nimport toWords from '@stdlib/number/float64/base/to-words';\nimport fromWords from '@stdlib/number/float64/base/from-words';\n\n\n// VARIABLES //\n\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar TWO52_INV = 2.220446049250313e-16;\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Normalization workspace:\nvar FRAC = [ 0.0, 0.0 ];\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexp( frac, exp ) {\n\tvar high;\n\tvar m;\n\tif (\n\t\texp === 0 ||\n\t\tfrac === 0.0 || // handles +-0\n\t\tisnan( frac ) ||\n\t\tisInfinite( frac )\n\t) {\n\t\treturn frac;\n\t}\n\t// Normalize the input fraction:\n\tnormalize( frac, FRAC, 1, 0 );\n\tfrac = FRAC[ 0 ];\n\texp += FRAC[ 1 ];\n\n\t// Extract the exponent from `frac` and add it to `exp`:\n\texp += floatExp( frac );\n\n\t// Check for underflow/overflow...\n\tif ( exp < MIN_SUBNORMAL_EXPONENT ) {\n\t\treturn copysign( 0.0, frac );\n\t}\n\tif ( exp > MAX_EXPONENT ) {\n\t\tif ( frac < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\t// Check for a subnormal and scale accordingly to retain precision...\n\tif ( exp <= MAX_SUBNORMAL_EXPONENT ) {\n\t\texp += 52;\n\t\tm = TWO52_INV;\n\t} else {\n\t\tm = 1.0;\n\t}\n\t// Split the fraction into higher and lower order words:\n\ttoWords.assign( frac, WORDS, 1, 0 );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits to the new exponent:\n\thigh |= ((exp+BIAS) << 20);\n\n\t// Create a new floating-point number:\n\treturn m * fromWords( high, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nexport default ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from './../../../../float64/base/get-high-word';\nimport EXP_MASK from '@stdlib/constants/float64/high-word-exponent-mask';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\n\n\n// MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\nfunction exponent( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n\tvar high = getHighWord( x );\n\n\t// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\thigh = ( high & EXP_MASK ) >>> 20;\n\n\t// Remove the bias and return:\n\treturn (high - BIAS)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of `2`.\n*\n* @module @stdlib/constants/float64/ln-two\n* @type {number}\n*\n* @example\n* import LN2 from '@stdlib/constants/float64/ln-two';\n* // returns 0.6931471805599453\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of `2`.\n*\n* ```tex\n* \\ln 2\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.6931471805599453\n*/\nvar LN2 = 6.93147180559945309417232121458176568075500134360255254120680009493393621969694715605863326996418687542001481021e-01; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nexport default LN2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the significand of a double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/high-word-significand-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_SIGNIFICAND_MASK from '@stdlib/constants/float64/high-word-significand-mask';\n* // returns 1048575\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the significand of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the significand of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 1048575 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000000 11111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x000fffff\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_SIGNIFICAND_MASK = 0x000fffff;\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_SIGNIFICAND_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\nimport setHighWord from '@stdlib/number/float64/base/set-high-word';\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport uint32ToInt32 from '@stdlib/number/uint32/base/to-int32';\nimport ldexp from './../../../../base/special/ldexp';\nimport LN2 from '@stdlib/constants/float64/ln-two';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport HIGH_SIGNIFICAND_MASK from '@stdlib/constants/float64/high-word-significand-mask';\nimport HIGH_NUM_SIGNIFICAND_BITS from '@stdlib/constants/float64/num-high-word-significand-bits';\nimport polyvalP from './polyval_p.js';\n\n\n// VARIABLES //\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3fe00000 = 1071644672 => 0 01111111110 00000000000000000000 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_BIASED_EXP_NEG_1 = 0x3fe00000|0; // asm type annotation\n\n// High: LN2\nvar LN2_HI = 6.93147182464599609375e-01; // 0x3FE62E43, 0x00000000\n\n// Low: LN2\nvar LN2_LO = -1.90465429995776804525e-09; // 0xBE205C61, 0x0CA86C39\n\n\n// MAIN //\n\n/**\n* Computes \\\\(2^{\\mathrm{hp} + \\mathrm{lp}\\\\).\n*\n* @private\n* @param {number} j - high word of `hp + lp`\n* @param {number} hp - first power summand\n* @param {number} lp - second power summand\n* @returns {number} function value\n*\n* @example\n* var z = pow2( 1065961648, -0.3398475646972656, -0.000002438187359100815 );\n* // returns ~0.79\n*/\nfunction pow2( j, hp, lp ) {\n\tvar tmp;\n\tvar t1;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar w;\n\tvar z;\n\tvar n;\n\tvar i;\n\tvar k;\n\n\ti = (j & ABS_MASK)|0; // asm type annotation\n\tk = ((i>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\tn = 0;\n\n\t// `|z| > 0.5`, set `n = z+0.5`\n\tif ( i > HIGH_BIASED_EXP_NEG_1 ) {\n\t\tn = (j + (HIGH_MIN_NORMAL_EXP>>(k+1)))>>>0; // asm type annotation\n\t\tk = (((n & ABS_MASK)>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // new k for n\n\t\ttmp = ((n & ~(HIGH_SIGNIFICAND_MASK >> k)))>>>0; // asm type annotation\n\t\tt = setHighWord( 0.0, tmp );\n\t\tn = (((n & HIGH_SIGNIFICAND_MASK)|HIGH_MIN_NORMAL_EXP) >> (HIGH_NUM_SIGNIFICAND_BITS-k))>>>0; // eslint-disable-line max-len\n\t\tif ( j < 0 ) {\n\t\t\tn = -n;\n\t\t}\n\t\thp -= t;\n\t}\n\tt = lp + hp;\n\tt = setLowWord( t, 0 );\n\tu = t * LN2_HI;\n\tv = ( (lp - (t-hp))*LN2 ) + ( t*LN2_LO );\n\tz = u + v;\n\tw = v - (z - u);\n\tt = z * z;\n\tt1 = z - ( t*polyvalP( t ) );\n\tr = ( (z*t1) / (t1-2.0) ) - ( w + (z*w) );\n\tz = 1.0 - (r - z);\n\tj = getHighWord( z );\n\tj = uint32ToInt32( j );\n\tj += (n << HIGH_NUM_SIGNIFICAND_BITS)>>>0; // asm type annotation\n\n\t// Check for subnormal output...\n\tif ( (j>>HIGH_NUM_SIGNIFICAND_BITS) <= 0 ) {\n\t\tz = ldexp( z, n );\n\t} else {\n\t\tz = setHighWord( z, j );\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default pow2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from './../../../../base/assert/is-nan';\nimport isOdd from './../../../../base/assert/is-odd';\nimport isInfinite from './../../../../base/assert/is-infinite';\nimport isInteger from './../../../../base/assert/is-integer';\nimport sqrt from './../../../../base/special/sqrt';\nimport abs from './../../../../base/special/abs';\nimport toWords from '@stdlib/number/float64/base/to-words';\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport uint32ToInt32 from '@stdlib/number/uint32/base/to-int32';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport xIsZero from './x_is_zero.js';\nimport yIsHuge from './y_is_huge.js';\nimport yIsInfinite from './y_is_infinite.js';\nimport log2ax from './log2ax.js';\nimport logx from './logx.js';\nimport pow2 from './pow2.js';\n\n\n// VARIABLES //\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\n// 0x41e00000 = 1105199104 => 0 10000011110 00000000000000000000 => biased exponent: 1054 = 31+1023 => 2^31\nvar HIGH_BIASED_EXP_31 = 0x41e00000|0; // asm type annotation\n\n// 0x43f00000 = 1139802112 => 0 10000111111 00000000000000000000 => biased exponent: 1087 = 64+1023 => 2^64\nvar HIGH_BIASED_EXP_64 = 0x43f00000|0; // asm type annotation\n\n// 0x40900000 = 1083179008 => 0 10000001001 00000000000000000000 => biased exponent: 1033 = 10+1023 => 2^10 = 1024\nvar HIGH_BIASED_EXP_10 = 0x40900000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x4090cc00 = 1083231232 => 0 10000001001 00001100110000000000\nvar HIGH_1075 = 0x4090cc00|0; // asm type annotation\n\n// 0xc090cc00 = 3230714880 => 1 10000001001 00001100110000000000\nvar HIGH_NEG_1075 = 0xc090cc00>>>0; // asm type annotation\n\nvar HIGH_NUM_NONSIGN_BITS = 31|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n// -(1024-log2(ovfl+.5ulp))\nvar OVT = 8.0085662595372944372e-17;\n\n// High/low words workspace:\nvar WORDS = [ 0|0, 0|0 ];\n\n// Log workspace:\nvar LOG_WORKSPACE = [ 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function.\n*\n* ## Method\n*\n* 1.  Let \\\\(x = 2^n (1+f)\\\\).\n*\n* 2.  Compute \\\\(\\operatorname{log2}(x)\\\\) as\n*\n*     ```tex\n*     \\operatorname{log2}(x) = w_1 + w_2\n*     ```\n*\n*     where \\\\(w_1\\\\) has \\\\(53 - 24 = 29\\\\) bit trailing zeros.\n*\n* 3.  Compute\n*\n*     ```tex\n*     y \\cdot \\operatorname{log2}(x) = n + y^\\prime\n*     ```\n*\n*     by simulating multi-precision arithmetic, where \\\\(|y^\\prime| \\leq 0.5\\\\).\n*\n* 4.  Return\n*\n*     ```tex\n*     x^y = 2^n e^{y^\\prime \\cdot \\mathrm{log2}}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* x^{\\mathrm{NaN}} &= \\mathrm{NaN} & \\\\\n* (\\mathrm{NaN})^y &= \\mathrm{NaN} & \\\\\n* 1^y &= 1 & \\\\\n* x^0 &= 1 & \\\\\n* x^1 &= x & \\\\\n* (\\pm 0)^\\infty &= +0 & \\\\\n* (\\pm 0)^{-\\infty} &= +\\infty & \\\\\n* (+0)^y &= +0 & \\mathrm{if}\\ y > 0 \\\\\n* (+0)^y &= +\\infty & \\mathrm{if}\\ y < 0 \\\\\n* (-0)^y &= -\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= +\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= -0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-0)^y &= +0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-1)^{\\pm\\infty} &= \\mathrm{NaN} & \\\\\n* x^{\\infty} &= +\\infty & |x| > 1 \\\\\n* x^{\\infty} &= +0 & |x| < 1 \\\\\n* x^{-\\infty} &= +0 & |x| > 1 \\\\\n* x^{-\\infty} &= +\\infty & |x| < 1 \\\\\n* (-\\infty)^y &= (-0)^y & \\\\\n* \\infty^y &= +0 & y < 0 \\\\\n* \\infty^y &= +\\infty & y > 0 \\\\\n* x^y &= \\mathrm{NaN} & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ a\\ finite\\ integer\\ and}\\ x < 0\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   \\\\(\\operatorname{pow}(x,y)\\\\) returns \\\\(x^y\\\\) nearly rounded. In particular, \\\\(\\operatorname{pow}(<\\mathrm{integer}>,<\\mathrm{integer}>)\\\\) **always** returns the correct integer, provided the value is representable.\n* -   The hexadecimal values shown in the source code are the intended values for used constants. Decimal values may be used, provided the compiler will accurately convert decimal to binary in order to produce the hexadecimal values.\n*\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* @example\n* var v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* @example\n* var v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* @example\n* var v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* @example\n* var v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var v = pow( 5.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = pow( NaN, NaN );\n* // returns NaN\n*/\nfunction pow( x, y ) {\n\tvar ahx; // absolute value high word `x`\n\tvar ahy; // absolute value high word `y`\n\tvar ax;  // absolute value `x`\n\tvar hx;  // high word `x`\n\tvar lx;  // low word `x`\n\tvar hy;  // high word `y`\n\tvar ly;  // low word `y`\n\tvar sx;  // sign `x`\n\tvar sy;  // sign `y`\n\tvar y1;\n\tvar hp;\n\tvar lp;\n\tvar t;\n\tvar z;   // y prime\n\tvar j;\n\tvar i;\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\t// Split `y` into high and low words:\n\ttoWords.assign( y, WORDS, 1, 0 );\n\thy = WORDS[ 0 ];\n\tly = WORDS[ 1 ];\n\n\t// Special cases `y`...\n\tif ( ly === 0 ) {\n\t\tif ( y === 0.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( y === 1.0 ) {\n\t\t\treturn x;\n\t\t}\n\t\tif ( y === -1.0 ) {\n\t\t\treturn 1.0 / x;\n\t\t}\n\t\tif ( y === 0.5 ) {\n\t\t\treturn sqrt( x );\n\t\t}\n\t\tif ( y === -0.5 ) {\n\t\t\treturn 1.0 / sqrt( x );\n\t\t}\n\t\tif ( y === 2.0 ) {\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( y === 3.0 ) {\n\t\t\treturn x * x * x;\n\t\t}\n\t\tif ( y === 4.0 ) {\n\t\t\tx *= x;\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( isInfinite( y ) ) {\n\t\t\treturn yIsInfinite( x, y );\n\t\t}\n\t}\n\t// Split `x` into high and low words:\n\ttoWords.assign( x, WORDS, 1, 0 );\n\thx = WORDS[ 0 ];\n\tlx = WORDS[ 1 ];\n\n\t// Special cases `x`...\n\tif ( lx === 0 ) {\n\t\tif ( hx === 0 ) {\n\t\t\treturn xIsZero( x, y );\n\t\t}\n\t\tif ( x === 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif (\n\t\t\tx === -1.0 &&\n\t\t\tisOdd( y )\n\t\t) {\n\t\t\treturn -1.0;\n\t\t}\n\t\tif ( isInfinite( x ) ) {\n\t\t\tif ( x === NINF ) {\n\t\t\t\t// `pow( 1/x, -y )`\n\t\t\t\treturn pow( -0.0, -y );\n\t\t\t}\n\t\t\tif ( y < 0.0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn PINF;\n\t\t}\n\t}\n\tif (\n\t\tx < 0.0 &&\n\t\tisInteger( y ) === false\n\t) {\n\t\t// Signal NaN...\n\t\treturn (x-x)/(x-x);\n\t}\n\tax = abs( x );\n\n\t// Remove the sign bits (i.e., get absolute values):\n\tahx = (hx & ABS_MASK)|0; // asm type annotation\n\tahy = (hy & ABS_MASK)|0; // asm type annotation\n\n\t// Extract the sign bits:\n\tsx = (hx >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\tsy = (hy >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\n\t// Determine the sign of the result...\n\tif ( sx && isOdd( y ) ) {\n\t\tsx = -1.0;\n\t} else {\n\t\tsx = 1.0;\n\t}\n\t// Case 1: `|y|` is huge...\n\n\t// |y| > 2^31\n\tif ( ahy > HIGH_BIASED_EXP_31 ) {\n\t\t// `|y| > 2^64`, then must over- or underflow...\n\t\tif ( ahy > HIGH_BIASED_EXP_64 ) {\n\t\t\treturn yIsHuge( x, y );\n\t\t}\n\t\t// Over- or underflow if `x` is not close to unity...\n\n\t\tif ( ahx < HIGH_MAX_NEAR_UNITY ) {\n\t\t\t// y < 0\n\t\t\tif ( sy === 1 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( ahx > HIGH_BIASED_EXP_0 ) {\n\t\t\t// y > 0\n\t\t\tif ( sy === 0 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\t// At this point, `|1-x|` is tiny (`<= 2^-20`). Suffice to compute `log(x)` by `x - x^2/2 + x^3/3 - x^4/4`.\n\t\tt = logx( LOG_WORKSPACE, ax );\n\t}\n\t// Case 2: `|y|` is not huge...\n\telse {\n\t\tt = log2ax( LOG_WORKSPACE, ax, ahx );\n\t}\n\t// Split `y` into `y1 + y2` and compute `(y1+y2) * (t1+t2)`...\n\ty1 = setLowWord( y, 0 );\n\tlp = ( (y-y1)*t[0] ) + ( y*t[1] );\n\thp = y1 * t[0];\n\tz = lp + hp;\n\n\t// Note: *can* be more performant to use `getHighWord` and `getLowWord` directly, but using `toWords` looks cleaner.\n\ttoWords.assign( z, WORDS, 1, 0 );\n\tj = uint32ToInt32( WORDS[0] );\n\ti = uint32ToInt32( WORDS[1] );\n\n\t// z >= 1024\n\tif ( j >= HIGH_BIASED_EXP_10 ) {\n\t\t// z > 1024\n\t\tif ( ((j-HIGH_BIASED_EXP_10)|i) !== 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t\tif ( (lp+OVT) > (z-hp) ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t}\n\t// z <= -1075\n\telse if ( (j&ABS_MASK) >= HIGH_1075 ) {\n\t\t// z < -1075\n\t\tif ( ((j-HIGH_NEG_1075)|i) !== 0 ) {\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( lp <= (z-hp) ) {\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t}\n\t// Compute `2^(hp+lp)`...\n\tz = pow2( j, hp, lp );\n\n\treturn sx * z;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport abs from './../../../../base/special/abs';\nimport PINF from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\( y = \\pm \\infty\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( -1.0, Infinity );\n* // returns NaN\n*\n* @example\n* var v = pow( -1.0, -Infinity  );\n* // returns NaN\n*\n* @example\n* var v = pow( 1.0, Infinity );\n* // returns 1.0\n*\n* @example\n* var v = pow( 1.0, -Infinity  );\n* // returns 1.0\n*\n* @example\n* var v = pow( 0.5, Infinity );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.5, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 1.5, -Infinity  );\n* // returns 0.0\n*\n* @example\n* var v = pow( 1.5, Infinity );\n* // returns Infinity\n*/\nfunction pow( x, y ) {\n\tif ( x === -1.0 ) {\n\t\t// Julia (0.4.2) and Python (2.7.9) return `1.0` (WTF???). JavaScript (`Math.pow`), R, and libm return `NaN`. We choose `NaN`, as the value is indeterminate; i.e., we cannot determine whether `y` is odd, even, or somewhere in between.\n\t\treturn (x-x)/(x-x); // signal NaN\n\t}\n\tif ( x === 1.0 ) {\n\t\treturn 1.0;\n\t}\n\t// (|x| > 1 && y === NINF) || (|x| < 1 && y === PINF)\n\tif ( (abs(x) < 1.0) === (y === PINF) ) {\n\t\treturn 0.0;\n\t}\n\t// (|x| > 1 && y === PINF) || (|x| < 1 && y === NINF)\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isOdd from './../../../../base/assert/is-odd';\nimport copysign from './../../../../base/special/copysign';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport PINF from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|x| = 0\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 0.0, 2 );\n* // returns 0.0\n*\n* @example\n* var v = pow( -0.0, -9 );\n* // returns -Infinity\n*\n* @example\n* var v = pow( 0.0, -9 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -0.0, 9 );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.0, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 0.0, Infinity );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tif ( y === NINF ) {\n\t\treturn PINF;\n\t}\n\tif ( y === PINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( y > 0.0 ) {\n\t\tif ( isOdd( y ) ) {\n\t\t\treturn x; // handles +-0\n\t\t}\n\t\treturn 0.0;\n\t}\n\t// y < 0.0\n\tif ( isOdd( y ) ) {\n\t\treturn copysign( PINF, x ); // handles +-0\n\t}\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nexport default pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\treturn 0.5 + (x * (-0.3333333333333333 + (x * 0.25)));\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5999999999999946;\n\t}\n\treturn 0.5999999999999946 + (x * (0.4285714285785502 + (x * (0.33333332981837743 + (x * (0.272728123808534 + (x * (0.23066074577556175 + (x * 0.20697501780033842))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/\nvar ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/12.2.0/lib/msun/src/e_log2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number/float64/base/get-high-word';\nimport setHighWord from '@stdlib/number/float64/base/set-high-word';\nimport setLowWord from '@stdlib/number/float64/base/set-low-word';\nimport toWords from '@stdlib/number/float64/base/to-words';\nimport isnan from './../../../../base/assert/is-nan';\nimport ABS_MASK from '@stdlib/constants/float64/high-word-abs-mask';\nimport HIGH_SIGNIFICAND_MASK from '@stdlib/constants/float64/high-word-significand-mask';\nimport BIAS from '@stdlib/constants/float64/exponent-bias';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport kernelLog1p from './../../../../base/special/kernel-log1p';\n\n\n// VARIABLES //\n\nvar TWO54 = 1.80143985094819840000e+16;   // 0x43500000, 0x00000000\nvar IVLN2HI = 1.44269504072144627571e+00; // 0x3ff71547, 0x65200000\nvar IVLN2LO = 1.67517131648865118353e-10; // 0x3de705fc, 0x2eefa200\n\n// 0x7ff00000 = 2146435072 => 0 11111111111 00000000000000000000 => biased exponent: 2047 = 1023+1023 => 2^1023\nvar HIGH_MAX_NORMAL_EXP = 0x7ff00000|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// High/low words workspace:\nvar WORDS = [ 0|0, 0|0 ];\n\n\n// MAIN //\n\n/**\n* Evaluates the binary logarithm (base two).\n*\n* @param {NonNegativeNumber} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = log2( 4.0 );\n* // returns 2.0\n*\n* @example\n* var v = log2( 8.0 );\n* // returns 3.0\n*\n* @example\n* var v = log2( 0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = log2( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = log2( NaN );\n* // returns NaN\n*\n* @example\n* var v = log2( -4.0 );\n* // returns NaN\n*/\nfunction log2( x ) {\n\tvar valHi;\n\tvar valLo;\n\tvar hfsq;\n\tvar hx;\n\tvar lx;\n\tvar hi;\n\tvar lo;\n\tvar f;\n\tvar R;\n\tvar w;\n\tvar y;\n\tvar i;\n\tvar k;\n\n\tif ( isnan( x ) || x < 0.0 ) {\n\t\treturn NaN;\n\t}\n\ttoWords.assign( x, WORDS, 1, 0 );\n\thx = WORDS[ 0 ] | 0; // asm type annotation\n\tlx = WORDS[ 1 ];\n\tk = 0|0; // asm type annotation\n\tif ( hx < HIGH_MIN_NORMAL_EXP ) {\n\t\t// Case: x < 2**-1022\n\t\tif ( ( (hx&ABS_MASK) | lx ) === 0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tk -= 54|0; // asm type annotation\n\n\t\t// Subnormal number, scale up x:\n\t\tx *= TWO54;\n\t\thx = getHighWord( x ) | 0; // asm type annotation\n\t}\n\tif ( hx >= HIGH_MAX_NORMAL_EXP ) {\n\t\treturn x + x;\n\t}\n\t// Case: log(1) = +0\n\tif ( hx === HIGH_BIASED_EXP_0 && lx === 0 ) {\n\t\treturn 0.0;\n\t}\n\tk += ( (hx>>20) - BIAS )|0; // asm type annotation\n\thx &= HIGH_SIGNIFICAND_MASK;\n\ti = ( ( hx+0x95f64 ) & HIGH_MIN_NORMAL_EXP )|0; // asm type annotation\n\n\t// Normalize x or x/2...\n\tx = setHighWord( x, hx|(i^HIGH_BIASED_EXP_0) );\n\tk += (i>>20)|0; // asm type annotation\n\ty = k;\n\tf = x - 1.0;\n\thfsq = 0.5 * f * f;\n\tR = kernelLog1p( f );\n\n\t/*\n\t* Notes:\n\t*\n\t* -   `f-hfsq` must (for args near `1`) be evaluated in extra precision to avoid a large cancellation when `x` is near `sqrt(2)` or `1/sqrt(2)`.This is fairly efficient since `f-hfsq` only depends on `f`, so can be evaluated in parallel with `R`. Not combining `hfsq` with `R` also keeps `R` small (though not as small as a true `lo` term would be), so that extra precision is not needed for terms involving `R`.\n\t* -   When implemented in C, compiler bugs involving extra precision used to break Dekker's theorem for spitting `f-hfsq` as `hi+lo`. These problems are now automatically avoided as a side effect of the optimization of combining the Dekker splitting step with the clear-low-bits step.\n\t* -   `y` must (for args near `sqrt(2)` and `1/sqrt(2)`) be added in extra precision to avoid a very large cancellation when `x` is very near these values.  Unlike the above cancellations, this problem is specific to base `2`.  It is strange that adding `+-1` is so much harder than adding `+-ln2` or `+-log10_2`.\n\t* -   This implementation uses Dekker's theorem to normalize `y+val_hi`, so, when implemented in C, compiler bugs may reappear in some configurations.\n\t* -   The multi-precision calculations for the multiplications are routine.\n\t*/\n\thi = f - hfsq;\n\thi = setLowWord( hi, 0 );\n\tlo = ( f - hi ) - hfsq + R;\n\tvalHi = hi * IVLN2HI;\n\tvalLo = ( ( lo + hi ) * IVLN2LO ) + ( lo * IVLN2HI );\n\n\tw = y + valHi;\n\tvalLo += ( y - w ) + valHi;\n\tvalHi = w;\n\n\treturn valLo + valHi;\n}\n\n\n// EXPORTS //\n\nexport default log2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from './../../../../base/assert/is-nan';\nimport isInfinite from './../../../../base/assert/is-infinite';\nimport pow from './../../../../base/special/pow';\nimport floor from './../../../../base/special/floor';\nimport ceil from './../../../../base/special/ceil';\nimport log2 from './../../../../base/special/log2';\nimport MAX_EXP from '@stdlib/constants/float64/max-base2-exponent';\nimport MIN_EXP_SUBNORMAL from '@stdlib/constants/float64/min-base2-exponent-subnormal';\nimport PINF from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Rounds a numeric value to the nearest power of two toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil2( 3.141592653589793 );\n* // returns 4.0\n*\n* @example\n* var v = ceil2( 9.0 );\n* // returns 16.0\n*\n* @example\n* var v = ceil2( -0.314 );\n* // returns -0.25\n*/\nfunction ceil2( x ) {\n\tvar sign;\n\tvar p;\n\tif (\n\t\tisnan( x ) ||\n\t\tisInfinite( x ) ||\n\t\tx === 0.0\n\t) {\n\t\treturn x;\n\t}\n\tif ( x < 0 ) {\n\t\tx = -x;\n\t\tsign = -1.0;\n\t} else {\n\t\tsign = 1.0;\n\t}\n\t// Solve the equation `2^p = x` for `p`:\n\tp = log2( x );\n\n\t// If provided the smallest subnormal, no rounding possible:\n\tif ( p === MIN_EXP_SUBNORMAL ) {\n\t\treturn x;\n\t}\n\t// Determine a power of two which rounds the input value toward positive infinity:\n\tif ( sign === -1.0 ) {\n\t\tp = floor( p );\n\t} else {\n\t\tp = ceil( p );\n\t}\n\t// Handle overflow:\n\tif ( p > MAX_EXP ) {\n\t\treturn PINF;\n\t}\n\treturn sign * pow( 2.0, p );\n}\n\n\n// EXPORTS //\n\nexport default ceil2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/12.2.0/lib/msun/src/k_log.h}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport polyvalP from './polyval_p.js';\nimport polyvalQ from './polyval_q.js';\n\n\n// MAIN //\n\n/**\n* Computes `log(1+f) - f` for `1+f` in `~[sqrt(2)/2, sqrt(2)]`.\n*\n* ## Method\n*\n* This function is a helper function for computing logarithms in base \\\\(e\\\\), and what follows describes the overall strategy for doing so. The argument reduction and adding the final term of the polynomial are done by the caller for increased accuracy when different bases are used.\n*\n* 1.  Argument Reduction. Find \\\\(k\\\\) and \\\\(f\\\\) such that\n*\n*     ```tex\n*     x = 2^k \\cdot (1+f)\n*     ```\n*\n*     where \\\\(\\sqrt(2)/2 < 1+f < \\sqrt(2)\\\\).\n*\n* 2.  Approximation of \\\\(\\operatorname{log}(1+f)\\\\). Let\n*\n*     ```tex\n*     \\begin{align*}\n*     s &= \\frac{f}{2+f} \\\\\n*     &= 2s + \\frac{2}{3} s^3 + \\frac{2}{5} s^5 + \\ldots \\\\\n*     &= 2s + s R\n*     \\end{align*}\n*     ```\n*\n*     based on\n*\n*     ```tex\n*     \\operatorname{log}(1+f) &= \\operatorname{log}(1+s) - \\operatorname{log}(1-s)\n*     ```\n*\n*     We use a special Reme algorithm on \\\\(\\[0,0.1716]\\\\) to generate a polynomial of degree \\\\(14\\\\) to approximate \\\\(R\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-58.45}\\\\). In other words,\n*\n*     ```tex\n*     R(z) ~ L_{g1} s^2 + L_{g2} s^4 + L_{g3} s^6 + L_{g4} s^8 + L_{g5} s^{10} + L_{g6} s^{12} + L_{g7} s^{14}\n*     ```\n*\n*     where the values of \\\\(L_{g1}\\\\) to \\\\(L_{g7}\\\\) are the polynomial coefficients used in the program below and\n*\n*     ```tex\n*     L_{g1} s^2 + \\ldots + L_{g7} s^{14} - R(z) \\leq 2^{-58.45}\n*     ```\n*\n*     Note that\n*\n*     ```tex\n*     2s = f - s \\cdot f = f - h_{fsq} + (s \\cdot h_{fsq})\n*     ```\n*\n*     where \\\\(h_{fsq} = f^{2}/2\\\\).\n*\n*     In order to guarantee an error in \\\\(\\operatorname{log}\\\\) below 1 ulp, we compute \\\\(\\operatorname{log}\\\\) by\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{log}(1+f) &= f - s (f - R) & \\textrm{(if f is not too large)} \\\\\n*     \\operatorname{log}(1+f) &= f - (h_{fsq} - s (h_{fsq}+R)) & \\textrm{(better accuracy)}\n*     \\end{align*}\n*\n* 3.  Finally,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{log}(x) &= k \\cdot \\operatorname{ln2} + \\operatorname{log}(1+f) \\\\\n*     &= k \\cdot \\operatorname{ln2}_{hi} + (f-(h_{fsq}-(s \\cdot (h_{fsq}+R) + k \\cdot \\operatorname{ln2}_{lo})))\n*     \\end{align*}\n*     ```\n*\n*     Here, \\\\(\\operatorname{ln2}\\\\) is split into two floating point numbers:\n*\n*     ```tex\n*     \\operatorname{ln2} = \\operatorname{ln2}_{hi} + \\operatorname{ln2}_{lo}\n*     ```\n*\n*     where \\\\(n \\cdot \\operatorname{ln2}_{hi}\\\\) is always exact for \\\\(|n| < 2000\\\\).\n*\n* @param {number} f - input value\n* @returns {number} function value\n*\n* @example\n* var v = kernelLog1p( 1.0 );\n* // returns ~0.1931\n*\n* @example\n* var v = kernelLog1p( 1.4142135623730951 );\n* // returns ~0.4672\n*\n* @example\n* var v = kernelLog1p( NaN );\n* // returns NaN\n*/\nfunction kernelLog1p( f ) {\n\tvar hfsq;\n\tvar t1;\n\tvar t2;\n\tvar s;\n\tvar z;\n\tvar R;\n\tvar w;\n\n\ts = f / ( 2.0 + f );\n\tz = s * s;\n\tw = z * z;\n\tt1 = w * polyvalP( w );\n\tt2 = z * polyvalQ( w );\n\tR = t2 + t1;\n\thfsq = 0.5 * f * f;\n\treturn s * ( hfsq + R );\n}\n\n\n// EXPORTS //\n\nexport default kernelLog1p;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.3999999999940942;\n\t}\n\treturn 0.3999999999940942 + (x * (0.22222198432149784 + (x * 0.15313837699209373))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6666666666666735;\n\t}\n\treturn 0.6666666666666735 + (x * (0.2857142874366239 + (x * (0.1818357216161805 + (x * 0.14798198605116586))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport appendArray from './append_array.js';\nimport appendObject from './append_object.js';\nimport appendTypedArray from './append_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds elements from one collection to the end of another collection.\n*\n* @param {Collection} collection1 - collection\n* @param {Collection} collection2 - collection containing elements to add\n* @throws {TypeError} first argument must be either an array, typed array, or an array-like object\n* @throws {TypeError} second argument must be an array-like object\n* @returns {Collection} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( collection1, collection2 ) {\n\tif ( !isCollection( collection2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', collection2 ) );\n\t}\n\tif ( isArray( collection1 ) ) {\n\t\treturn appendArray( collection1, collection2 );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection1 ) ) {\n\t\treturn appendTypedArray( collection1, collection2 );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection1 !== null &&\n\t\ttypeof collection1 === 'object' &&\n\t\ttypeof collection1.length === 'number' &&\n\t\tisInteger( collection1.length ) &&\n\t\tcollection1.length >= 0\n\t) {\n\t\treturn appendObject( collection1, collection2 );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection1 ) );\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar i;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tarr.push( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is followed by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\ttotal = nbytes + ibytes + arr.byteOffset;\n\n\tif ( arr.buffer.byteLength < total ) {\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\tv = new arr.constructor( buf, 0, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i ] = arr[ i ];\n\t\t}\n\t} else {\n\t\tv = new arr.constructor( arr.buffer, arr.byteOffset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ len+i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {ArrayLike} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = append( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 1.0, '1': 2.0, '2': 3.0, '3': 4.0 }\n*/\nfunction append( obj, items ) {\n\tvar len;\n\tvar i;\n\tlen = obj.length;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tobj[ len+i ] = items[ i ];\n\t}\n\tobj.length = len + items.length;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function which always returns a specified argument.\n*\n* @param {NonNegativeInteger} idx - argument index\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {Function} argument function\n*\n* @example\n* var argn = wrap( 1 );\n*\n* var v = argn( 1.0, 2.0, 3.0 );\n* // returns 2.0\n*\n* v = argn( 'a', 'b', 'c' );\n* // returns 'b'\n*\n* v = argn( null );\n* // returns undefined\n*/\nfunction wrap( idx ) {\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\treturn argn;\n\n\t/**\n\t* Argument function.\n\t*\n\t* @private\n\t* @returns {*} argument\n\t*/\n\tfunction argn() {\n\t\treturn arguments[ idx ];\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../is-array';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object.\n*\n* @name Object\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {Object} object\n*\n* @example\n* var o = new Object( null );\n* // returns {}\n*\n* @example\n* var o = new Object( 5.0 );\n* // returns <Number>\n*\n* @example\n* var o = new Object( 'beep' );\n* // returns <String>\n*\n* @example\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/\nvar Obj = Object; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport Object from '@stdlib/object/ctor';\nimport getProto from './proto.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\nimport getProto from './detect.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from './../../is-object';\nimport isFunction from './../../is-function';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport hasOwnProp from './../../has-own-property';\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* import isPositiveInteger from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'any-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `anyByAsync` function which invokes the predicate function for each collection element sequentially:\n* var anyByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* anyByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn anyByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction anyByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* anyByAsync( files, predicate, done );\n*/\nfunction anyByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default anyByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in a collection passes a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/any-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import anyByAsync from '@stdlib/utils/async/any-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* anyByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'any-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `anyByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var anyByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* anyByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn anyByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction anyByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* anyByRightAsync( files, predicate, done );\n*/\nfunction anyByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default anyByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number';\nimport isNan from '@stdlib/math/base/assert/is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number';\nimport isNan from '@stdlib/math/base/assert/is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/any-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import anyByRightAsync from '@stdlib/utils/async/any-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read at least one file.' );\n*     } else {\n*         console.log( 'Unable to read any files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* anyByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* import isnan from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isnan } from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* import { isObject as isnan } from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nexport default valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport test from './try2valueof.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport valueOf from './valueof.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* import isString from '@stdlib/assert/is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* import { isObject as isString } from '@stdlib/assert/is-string';\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* import { isPrimitive as isString } from '@stdlib/assert/is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport indexOf from './../../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10,\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'bifurcate-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the predicate function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {string} [options.returns] - output format\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = [];\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tout.push( [], [] );\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, v, cb );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [bool] - group indicator\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, bool ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, ( bool ) ? '0' : '1' );\n\n\t\t\t// Default is to return values...\n\t\t\tif ( opts.returns === 'indices' ) {\n\t\t\t\tif ( bool ) {\n\t\t\t\t\tout[ 0 ].push( j );\n\t\t\t\t} else {\n\t\t\t\t\tout[ 1 ].push( j );\n\t\t\t\t}\n\t\t\t} else if ( opts.returns === '*' ) {\n\t\t\t\tif ( bool ) {\n\t\t\t\t\tout[ 0 ].push( [ j, v ] );\n\t\t\t\t} else {\n\t\t\t\t\tout[ 1 ].push( [ j, v ] );\n\t\t\t\t}\n\t\t\t} else if ( bool ) {\n\t\t\t\tout[ 0 ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( v );\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function which splits values into two groups according to a predicate function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `bifurcateByAsync` function which invokes the predicate function for each collection element sequentially:\n* var bifurcateByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* bifurcateByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn bifurcateByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction bifurcateByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} results - bifurcation results\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, results ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, results );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* bifurcateByAsync( files, predicate, done );\n*/\nfunction bifurcateByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split values into two groups according to a predicate function.\n*\n* @module @stdlib/utils/async/bifurcate-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import bifurcateByAsync from '@stdlib/utils/async/bifurcate-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* bifurcateByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// VARIABLES //\n\nvar debug = logger( 'count-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\tout[ group ] += 1;\n\t\t\t} else {\n\t\t\t\tout[ group ] = 1;\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for grouping values according to an indicator function and returns group counts.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `countByAsync` function which invokes the indicator function for each collection element sequentially:\n* var countByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* countByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn countByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction countByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - counts\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and returns group counts.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* countByAsync( files, indicator, done );\n*/\nfunction countByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default countByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values according to an indicator function and return group counts.\n*\n* @module @stdlib/utils/async/count-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import countByAsync from '@stdlib/utils/async/count-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* countByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'every-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( !result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `everyByAsync` function which invokes the predicate function for each collection element sequentially:\n* var everyByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* everyByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn everyByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction everyByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* everyByAsync( files, predicate, done );\n*/\nfunction everyByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default everyByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/every-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import everyByAsync from '@stdlib/utils/async/every-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* everyByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'every-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions, and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( !result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `everyByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var everyByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* everyByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn everyByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction everyByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* everyByRightAsync( files, predicate, done );\n*/\nfunction everyByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default everyByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/every-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import everyByRightAsync from '@stdlib/utils/async/every-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read all files.' );\n*     } else {\n*         console.log( 'Was unable to read all files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* everyByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'for-each-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, collection, clbk );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `forEachAsync` function which invokes `read` for each collection element sequentially:\n* var forEachAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* // Run `read` for each element in `files`:\n* forEachAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn forEachAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction forEachAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* forEachAsync( files, read, done );\n*/\nfunction forEachAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default forEachAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection.\n*\n* @module @stdlib/utils/async/for-each\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import forEachAsync from '@stdlib/utils/async/for-each';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* forEachAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'for-each-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ idx ], idx, collection, clbk );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `forEachRightAsync` function which invokes `read` for each collection element sequentially:\n* var forEachRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* // Run `read` for each element in `files`:\n* forEachRightAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn forEachRightAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction forEachRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* forEachRightAsync( files, read, done );\n*/\nfunction forEachRightAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default forEachRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection, iterating from right to left.\n*\n* @module @stdlib/utils/async/for-each-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import forEachRightAsync from '@stdlib/utils/async/for-each-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Successfully read all files.' );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         console.log( 'Successfully read file: %s', file );\n*         next();\n*     }\n* }\n*\n* forEachRightAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport indexOf from './../../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10,\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// VARIABLES //\n\nvar debug = logger( 'group-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the indicator function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {string} [options.returns] - output format\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Default is to return values...\n\t\t\tif ( opts.returns === 'indices' ) {\n\t\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\t\tout[ group ].push( j );\n\t\t\t\t} else {\n\t\t\t\t\tout[ group ] = [ j ];\n\t\t\t\t}\n\t\t\t} else if ( opts.returns === '*' ) {\n\t\t\t\tif ( hasOwnProp( out, group ) ) {\n\t\t\t\t\tout[ group ].push( [ j, v ] );\n\t\t\t\t} else {\n\t\t\t\t\tout[ group ] = [ [ j, v ] ];\n\t\t\t\t}\n\t\t\t} else if ( hasOwnProp( out, group ) ) {\n\t\t\t\tout[ group ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ group ] = [ v ];\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for grouping values according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `groupByAsync` function which invokes the indicator function for each collection element sequentially:\n* var groupByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* groupByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn groupByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction groupByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - group-by result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* groupByAsync( files, indicator, done );\n*/\nfunction groupByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default groupByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Group values according to an indicator function.\n*\n* @module @stdlib/utils/async/group-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import groupByAsync from '@stdlib/utils/async/group-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* groupByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'inmap-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions, and updates a collection in-place.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx += 1;\n\t\tj = idx;\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( collection[ j ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tcollection[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection and to update the collection in-place.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `inmapAsync` function which invokes `read` for each collection element sequentially:\n* var inmapAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* // Run `read` for each element in `files`:\n* inmapAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn inmapAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection and updates a collection in-place.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction inmapAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, collection );\n\t\t\t}\n\t\t\tdone( null, collection );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates a collection in-place.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* inmapAsync( files, read, done );\n*/\nfunction inmapAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default inmapAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection and update a collection in-place.\n*\n* @module @stdlib/utils/async/inmap\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import inmapAsync from '@stdlib/utils/async/inmap';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* inmapAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'inmap-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left, and updates a collection in-place.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done();\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx -= 1;\n\t\tj = idx;\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( collection[ j ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, collection[ j ], j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tcollection[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function once for each element in a collection and to update the collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `inmapRightAsync` function which invokes `read` for each collection element sequentially:\n* var inmapRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* // Run `read` for each element in `files`:\n* inmapRightAsync( files, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn inmapRightAsync;\n\n\t/**\n\t* Invokes a function for each element in a collection and updates a collection in-place, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction inmapRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, collection );\n\t\t\t}\n\t\t\tdone( null, collection );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates a collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling. Note, however, that the function may have mutated an input collection during prior invocations, resulting in a partially mutated collection.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* inmapRightAsync( files, read, done );\n*/\nfunction inmapRightAsync( collection, options, fcn, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, fcn );\n\t}\n\tfactory( options, fcn )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default inmapRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each element in a collection and update a collection in-place, iterating from right to left.\n*\n* @module @stdlib/utils/async/inmap-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import inmapRightAsync from '@stdlib/utils/async/inmap-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* function read( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             error = new Error( 'unable to read file: '+file );\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* inmapRightAsync( files, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-function-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times, limiting the number of concurrently pending invocations, and returns an array of accumulated function return values.\n*\n* @private\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( n, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar out;\n\tvar lim;\n\tvar idx;\n\tvar m;\n\tvar i;\n\n\tdebug( 'Number of invocations: %d', n );\n\n\t// Note: we explicitly preallocate in order to facilitate inserting a function result into its associated output array index. This means we do not ensure \"fast\" elements for large output arrays.\n\tout = new Array( n );\n\tif ( n === 0 ) {\n\t\tdebug( 'Finished invoking a function.' );\n\t\treturn done( null, out );\n\t}\n\tif ( n < opts.limit ) {\n\t\tlim = n;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\n\tcount = 0;\n\tidx = -1;\n\tm = n - 1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all invocations...\n\t\tif ( idx < m ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to process the next function invocation.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar j;\n\t\tidx += 1;\n\t\tj = idx;\n\t\tdebug( 'Invocation number: %d', j );\n\t\tfcn.call( opts.thisArg, j, cb );\n\n\t\t/**\n\t\t* Callback invoked once a provided function completes.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further invocations:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tout[ j ] = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next invocation.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Completed invocation %d of %d.', count, n );\n\t\tif ( idx < m ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === n ) {\n\t\t\tdebug( 'Finished invoking a function.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to invoke a function `n` times and return an array of accumulated function return values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function again\n* @param {Function} fcn - function to invoke\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes a function `n` times and returns an array of accumulated function return values\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* var mapFunAsync = factory( opts, fcn );\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( results );\n* }\n*\n* mapFunAsync( 10, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapFunAsync;\n\n\t/**\n\t* Invokes a function `n` times and returns an array of accumulated function return values.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} n - number of function invocations\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a nonnegative integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapFunAsync( n, done ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Number of function invocations must be a nonnegative integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {Array} results - results\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, results ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, results );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before the next invocation\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times and returns an array of accumulated function return values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Function} fcn - function to invoke\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function again\n* @param {Function} done - callback to invoke upon invoking a function `n` times\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( JSON.stringify( out ) );\n*     // => [ 0, 1, 2, 3, 4 ]\n* }\n*\n* mapFunAsync( fcn, 5, done );\n*/\nfunction mapFunAsync( fcn, n, options, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( fcn )( n, options );\n\t}\n\tfactory( options, fcn )( n, done );\n}\n\n\n// EXPORTS //\n\nexport default mapFunAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function `n` times and return an array of accumulated function return values.\n*\n* @module @stdlib/utils/async/map-function\n*\n* @example\n* import mapFunAsync from '@stdlib/utils/async/map-function';\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         next( null, i );\n*     }\n* }\n*\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( JSON.stringify( out ) );\n*     // => [ 0, 1, 2, 3, 4 ]\n* }\n*\n* mapFunAsync( fcn, 5, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from './main.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnum from './native.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isString from './../../is-string';\nimport { isPrimitive as isnan } from './../../is-nan';\nimport { isPrimitive as isInteger } from './../../is-integer';\nimport isEnum from './native.js';\nimport hasStringEnumBug from './has_string_enumerability_bug.js';\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert/is-arguments\n*\n* @example\n* import isArguments from '@stdlib/assert/is-arguments';\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport hasArgumentsClass from './detect.js';\nimport main from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from './../../has-own-property';\nimport isEnumerableProperty from './../../is-enumerable-property';\nimport isArray from './../../is-array';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/uint32/max';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from '@stdlib/assert/is-arguments';\nimport builtin from './builtin.js';\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport noop from './../../noop';\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\nimport getThis from './codegen.js';\nimport Self from './self.js';\nimport Win from './window.js';\nimport Global from './global.js';\nimport GlobalThis from './global_this.js';\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from './../../../global';\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Symbol from '@stdlib/symbol/ctor';\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils/native-class';\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert/has-tostringtag-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport toStringTag from './tostringtag.js';\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\nimport isBuffer from '@stdlib/assert/is-buffer';\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* import typeOf from '@stdlib/utils/type-of';\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js';\nimport nodeList from './fixtures/nodelist.js';\nimport typedarray from './fixtures/typedarray.js';\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nexport default isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nexport default w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport typeOf from './../../type-of';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport EXCLUDED_KEYS from './excluded_keys.json';\nimport win from './window.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasArgumentsBug from './has_arguments_bug.js';\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport wrapper from './builtin_wrapper.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './builtin.js';\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArguments from '@stdlib/assert/is-arguments';\nimport HAS_ENUM_PROTO_BUG from './has_enumerable_prototype_bug.js';\nimport HAS_NON_ENUM_PROPS_BUG from './has_non_enumerable_properties_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype_wrapper.js';\nimport NON_ENUMERABLE from './non_enumerable.json';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasAutomationEqualityBug from './has_automation_equality_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport HAS_WINDOW from './has_window.js';\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport objectKeys from './../../../keys';\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-values-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own property in a source object, limiting the number of concurrently pending functions.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   We need to cache an object value to prevent the edge case where, during the invocation of the transform function, the value corresponding to a particular key is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Object} obj - source object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( obj, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar keys;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tdebug( 'Number of keys: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing an object.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all properties...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next property.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar value;\n\t\tvar key;\n\n\t\tidx += 1;\n\t\tkey = keys[ idx ];\n\n\t\tvalue = obj[ key ];\n\t\tdebug( '%s: %s', key, JSON.stringify( value ) );\n\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, key, cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, key, value, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, key, value, obj, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes transforming a property.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [key] - transformed key\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, key ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of properties:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Transform result => %s: %s', key, JSON.stringify( value ) );\n\t\t\tout[ key ] = value;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next property.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d properties.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing an object.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to map keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which maps keys from one object to a new object having the same values\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a reusable function:\n* var mapKeysAsync = factory( opts, read );\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, done );\n*/\nfunction factory( options, transform ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = transform;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapKeysAsync;\n\n\t/**\n\t* Maps keys from one object to a new object having the same values.\n\t*\n\t* @private\n\t* @param {Object} obj - source object\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapKeysAsync( obj, done ) {\n\t\tif ( typeof obj !== 'object' || obj === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( obj, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} [out] - output object\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, out ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Maps keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, opts, read, done );\n*/\nfunction mapKeysAsync( obj, options, transform, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( obj, transform );\n\t}\n\tfactory( options, transform )( obj, done );\n}\n\n\n// EXPORTS //\n\nexport default mapKeysAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map keys from one object to a new object having the same values.\n*\n* @module @stdlib/utils/async/map-keys\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import mapKeysAsync from '@stdlib/utils/async/map-keys';\n*\n* function read( key, value, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( value, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, key+':unreadable' );\n*         }\n*         next( null, key+':readable' );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapKeysAsync( files, opts, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport objectKeys from './../../../keys';\n\n\n// VARIABLES //\n\nvar debug = logger( 'map-values-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own property in a source object, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Object} obj - source object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( obj, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar keys;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tdebug( 'Number of keys: %d', len );\n\n\tout = {};\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing an object.' );\n\t\treturn done( null, out );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all properties...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next property.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar key;\n\t\tidx += 1;\n\t\tkey = keys[ idx ];\n\t\tdebug( '%s: %s', key, JSON.stringify( obj[ key ] ) );\n\t\tif ( fcn.length === 2 ) {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], cb );\n\t\t} else if ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], key, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, obj[ key ], key, obj, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes transforming a property value.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [value] - transformed value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, value ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of properties:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Transform result => %s: %s', key, JSON.stringify( value ) );\n\t\t\tout[ key ] = value;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next property.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d properties.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing an object.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to map values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which maps values from one object to a new object having the same keys\n*\n* @example\n* var stat = require( 'fs' ).stat;\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a reusable function:\n* var mapValuesAsync = factory( opts, getStats );\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, done );\n*/\nfunction factory( options, transform ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = transform;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn mapValuesAsync;\n\n\t/**\n\t* Maps values from one object to a new object having the same keys.\n\t*\n\t* @private\n\t* @param {Object} obj - source object\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction mapValuesAsync( obj, done ) {\n\t\tif ( typeof obj !== 'object' || obj === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( obj, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} [out] - output object\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, out ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Maps values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n* -   Iteration and insertion order are **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next own property\n* @param {Function} transform - transform function\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* var stat = require( 'fs' ).stat;\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, opts, getStats, done );\n*/\nfunction mapValuesAsync( obj, options, transform, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( obj, transform );\n\t}\n\tfactory( options, transform )( obj, done );\n}\n\n\n// EXPORTS //\n\nexport default mapValuesAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map values from one object to a new object having the same keys.\n*\n* @module @stdlib/utils/async/map-values\n*\n* @example\n* var stat = require( 'fs' ).stat;\n* import mapValuesAsync from '@stdlib/utils/async/map-values';\n*\n* function getStats( file, next ) {\n*     stat( file, onStats );\n*\n*     function onStats( error, data ) {\n*         if ( error ) {\n*             return next( error );\n*         }\n*         next( null, data );\n*     }\n* }\n*\n* // Define a callback which handles errors:\n* function done( error, out ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( out );\n* }\n*\n* // Create a dictionary of file names:\n* var files = {\n*     'file1': './beep.js',\n*     'file2': './boop.js'\n* };\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Process each file in `files`:\n* mapValuesAsync( files, opts, getStats, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'none-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection fail a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `noneByAsync` function which invokes the predicate function for each collection element sequentially:\n* var noneByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* noneByAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn noneByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction noneByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* noneByAsync( files, predicate, done );\n*/\nfunction noneByAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default noneByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection fail a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/none-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import noneByAsync from '@stdlib/utils/async/none-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* noneByAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'none-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions, and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, true );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, true );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create an `noneByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var noneByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* noneByRightAsync( files, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn noneByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction noneByRightAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* noneByRightAsync( files, predicate, done );\n*/\nfunction noneByRightAsync( collection, options, predicate, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, predicate );\n\t}\n\tfactory( options, predicate )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default noneByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/none-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import noneByRightAsync from '@stdlib/utils/async/none-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Was unable to read all files.' );\n*     } else {\n*         console.log( 'Was able to read at least one file.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* noneByRightAsync( files, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'reduce-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {*} acc - initial value\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, acc, opts, fcn, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, acc );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], cb );\n\t\t} else if ( fcn.length === 4 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, collection, cb ); // eslint-disable-line max-len\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - accumulation result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Accumulator: %s', JSON.stringify( result ) );\n\t\t\tacc = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to apply a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var opts = {\n*     'series': false\n* };\n*\n* // Create a `reduceAsync` function which invokes `read` for each collection element concurrently:\n* var reduceAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* // Run `read` for each element in `files`:\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series === void 0 && opts.limit === void 0 ) {\n\t\topts.series = true;\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn reduceAsync;\n\n\t/**\n\t* Applies a function against an accumulator and each element in a collection and return the accumulated result.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {*} initial - initial value\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction reduceAsync( collection, initial, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, initial, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [acc] - accumulated value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, acc ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {*} initial - initial value\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, read, done );\n*/\nfunction reduceAsync( collection, initial, options, fcn, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, initial, fcn );\n\t}\n\tfactory( options, fcn )( collection, initial, done );\n}\n\n\n// EXPORTS //\n\nexport default reduceAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function against an accumulator and each element in a collection and return the accumulated result.\n*\n* @module @stdlib/utils/async/reduce\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import reduceAsync from '@stdlib/utils/async/reduce';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var acc = {\n*     'count': 0\n* };\n* reduceAsync( files, acc, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'reduce-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {*} acc - initial value\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, acc, opts, fcn, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, acc );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', fcn.length );\n\n\tcount = 0;\n\tidx = len;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( fcn.length === 3 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], cb );\n\t\t} else if ( fcn.length === 4 ) {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, cb );\n\t\t} else {\n\t\t\tfcn.call( opts.thisArg, acc, collection[ idx ], idx, collection, cb ); // eslint-disable-line max-len\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [result] - accumulation result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, result ) {\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Accumulator: %s', JSON.stringify( result ) );\n\t\t\tacc = result;\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the provided function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error, data ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var opts = {\n*     'series': false\n* };\n*\n* // Create a `reduceRightAsync` function which invokes `read` for each collection element concurrently:\n* var reduceRightAsync = factory( opts, read );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles errors:\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* // Run `read` for each element in `files`:\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, done );\n*/\nfunction factory( options, fcn ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = fcn;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series === void 0 && opts.limit === void 0 ) {\n\t\topts.series = true;\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn reduceRightAsync;\n\n\t/**\n\t* Applies a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {*} initial - initial value\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction reduceRightAsync( collection, initial, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, initial, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [acc] - accumulated value\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, acc ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, acc );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a provided function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {*} initial - initial value\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=true] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} fcn - function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, read, done );\n*/\nfunction reduceRightAsync( collection, initial, options, fcn, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, initial, fcn );\n\t}\n\tfactory( options, fcn )( collection, initial, done );\n}\n\n\n// EXPORTS //\n\nexport default reduceRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left.\n*\n* @module @stdlib/utils/async/reduce-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import reduceRightAsync from '@stdlib/utils/async/reduce-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, acc ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( acc.count );\n* }\n*\n* function read( acc, file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, acc );\n*         }\n*         acc.count += 1;\n*         next( null, acc );\n*     }\n* }\n*\n* var acc = {\n*     'count': 0\n* };\n* reduceRightAsync( files, acc, read, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* import MAX_ARRAY_LENGTH from '@stdlib/constants/array/max-array-length';\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLike from './../../../is-array-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* import isOdd from '@stdlib/assert/is-odd';\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arraylikefcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array-like object passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArrayLike( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only functions.\n*\n* @module @stdlib/assert/is-function-array\n*\n* @example\n* import isFunctionArray from '@stdlib/assert/is-function-array';\n*\n* function beep() {}\n*\n* function boop() {}\n*\n* var bool = isFunctionArray( [ beep, boop ] );\n* // returns true\n*\n* bool = isFunctionArray( [ {}, beep ] );\n* // returns false\n*\n* bool = isFunctionArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport arrayfun from './../../tools/array-like-function';\nimport isFunction from './../../is-function';\n\n\n// MAIN //\n\nvar isFunctionArray = arrayfun( isFunction );\n\n\n// EXPORTS //\n\nexport default isFunctionArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunctionArray from '@stdlib/assert/is-function-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a reusable waterfall function.\n*\n* @param {FunctionArray} fcns - array of functions\n* @param {Callback} clbk - callback to invoke upon completion\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be an array of functions\n* @throws {TypeError} second argument must be a function\n* @returns {Function} waterfall function\n*\n* @example\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* var waterfall = factory( fcns, done );\n*\n* waterfall();\n* waterfall();\n* waterfall();\n*/\nfunction factory( fcns, clbk, thisArg ) {\n\tif ( !isFunctionArray( fcns ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of functions. Value: `%s`.', fcns ) );\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\treturn waterfall;\n\n\t/**\n\t* Executes functions in series, passing the results of one function as arguments to the next function.\n\t*\n\t* @private\n\t*/\n\tfunction waterfall() {\n\t\tvar idx = -1;\n\t\tnext(); // eslint-disable-line node/callback-return\n\n\t\t/**\n\t\t* Executes the next function in the series.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {...*} args - results to pass to next callback\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next() {\n\t\t\tvar args;\n\t\t\tvar len;\n\t\t\tvar i;\n\n\t\t\t// Check for an error...\n\t\t\tif ( arguments[ 0 ] ) {\n\t\t\t\treturn clbk( arguments[ 0 ] );\n\t\t\t}\n\t\t\t// Update the counter and check if we have run all functions...\n\t\t\tidx += 1;\n\t\t\tif ( idx >= fcns.length ) {\n\t\t\t\treturn clbk();\n\t\t\t}\n\t\t\t// Copy the remaining arguments...\n\t\t\tlen = arguments.length;\n\t\t\targs = new Array( len );\n\t\t\tfor ( i = 0; i < len-1; i++ ) {\n\t\t\t\targs[ i ] = arguments[ i+1 ];\n\t\t\t}\n\t\t\t// Add the callback:\n\t\t\targs[ i ] = next;\n\n\t\t\t// Apply the arguments to the next function in the waterfall:\n\t\t\tfcns[ idx ].apply( thisArg, args );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Executes functions in series, passing the results of one function as arguments to the next function.\n*\n* @param {FunctionArray} fcns - array of functions\n* @param {Callback} clbk - callback to invoke upon completion\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be an array of functions\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* waterfall( fcns, done );\n*/\nfunction waterfall( fcns, clbk, thisArg ) {\n\tfactory( fcns, clbk, thisArg )();\n}\n\n\n// EXPORTS //\n\nexport default waterfall;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Execute functions in series, passing the results of one function as arguments to the next function.\n*\n* @module @stdlib/utils/async/series-waterfall\n*\n* @example\n* import waterfall from '@stdlib/utils/async/series-waterfall';\n*\n* function foo( next ) {\n*     next( null, 'beep' );\n* }\n*\n* function bar( str, next ) {\n*     console.log( str );\n*     // => 'beep'\n*\n*     next();\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* var fcns = [ foo, bar ];\n*\n* waterfall( fcns, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'some-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, n, opts, predicate, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar cnt;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0; // processed element count\n\tidx = -1;\n\tcnt = 0; // success count\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx += 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tcnt += 1;\n\t\t\tif ( cnt === n ) {\n\t\t\t\tflg = true;\n\t\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\t\treturn done( null, true );\n\t\t\t}\n\t\t}\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `someByAsync` function which invokes the predicate function for each collection element sequentially:\n* var someByAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* someByAsync( files, 2, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn someByAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {PositiveInteger} n - number of elements\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction someByAsync( collection, n, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isPositiveInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* someByAsync( files, 2, predicate, done );\n*/\nfunction someByAsync( collection, n, options, predicate, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, n, predicate );\n\t}\n\tfactory( options, predicate )( collection, n, done );\n}\n\n\n// EXPORTS //\n\nexport default someByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils/async/some-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import someByAsync from '@stdlib/utils/async/some-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* someByAsync( files, 2, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'some-by-right-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes a predicate function once for each element in a collection, limiting the number of concurrently pending functions and iterating from right to left.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} predicate - predicate function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, n, opts, predicate, done ) {\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar cnt;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, false );\n\t}\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', predicate.length );\n\n\tcount = 0; // processed element count\n\tidx = len;\n\tcnt = 0; // success count\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx > 0 ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tidx -= 1;\n\t\tdebug( 'Collection element %d: %s.', idx, JSON.stringify( collection[ idx ] ) );\n\t\tif ( predicate.length === 2 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], clbk );\n\t\t} else if ( predicate.length === 3 ) {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, clbk );\n\t\t} else {\n\t\t\tpredicate.call( opts.thisArg, collection[ idx ], idx, collection, clbk ); // eslint-disable-line max-len\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a provided function finishes processing a collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @param {*} [result] - test result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( flg ) {\n\t\t\t// Prevent further processing of collection elements:\n\t\t\treturn;\n\t\t}\n\t\tif ( error ) {\n\t\t\tflg = true;\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\n\t\tdebug( 'Test result: %s', !!result );\n\t\tif ( result && !flg ) {\n\t\t\tcnt += 1;\n\t\t\tif ( cnt === n ) {\n\t\t\t\tflg = true;\n\t\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\t\treturn done( null, true );\n\t\t\t}\n\t\t}\n\t\tif ( idx > 0 ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, false );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for testing whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the predicate function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `someByRightAsync` function which invokes the predicate function for each collection element sequentially:\n* var someByRightAsync = factory( opts, predicate );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* // Try to read each element in `files`:\n* someByRightAsync( files, 2, done );\n*/\nfunction factory( options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = predicate;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn someByRightAsync;\n\n\t/**\n\t* Invokes a predicate function for each element in a collection, iterating from right to left.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {PositiveInteger} n - number of elements\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} second argument must be a positive integer\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction someByRightAsync( collection, n, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isPositiveInteger( n ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, n, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {boolean} bool - test result\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, bool ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error, false );\n\t\t\t}\n\t\t\tdone( null, bool );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   If a predicate function calls the provided callback with a truthy error argument, the function suspends execution and immediately calls the `done` callback for subsequent error handling.\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} predicate - predicate function to invoke for each element in a collection\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* someByRightAsync( files, 2, predicate, done );\n*/\nfunction someByRightAsync( collection, n, options, predicate, done ) {\n\tif ( arguments.length < 5 ) {\n\t\treturn factory( options )( collection, n, predicate );\n\t}\n\tfactory( options, predicate )( collection, n, done );\n}\n\n\n// EXPORTS //\n\nexport default someByRightAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/async/some-by-right\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import someByRightAsync from '@stdlib/utils/async/some-by-right';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, bool ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     if ( bool ) {\n*         console.log( 'Successfully read some files.' );\n*     } else {\n*         console.log( 'Unable to read some files.' );\n*     }\n* }\n*\n* function predicate( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, false );\n*         }\n*         next( null, true );\n*     }\n* }\n*\n* someByRightAsync( files, 2, predicate, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport indexOf from './../../../index-of';\n\n\n// VARIABLES //\n\nvar debug = logger( 'tabulate-by-async:limit' );\n\n\n// MAIN //\n\n/**\n* Invokes an indicator function once for each element in a collection, limiting the number of concurrently pending functions.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {PositiveInteger} [opts.limit] - maximum number of pending function invocations\n* @param {Function} indicator - indicator function\n* @param {Callback} done - function to invoke upon completion or upon encountering an error\n* @returns {void}\n*/\nfunction limit( collection, opts, indicator, done ) {\n\tvar maxIndex;\n\tvar count;\n\tvar flg;\n\tvar lim;\n\tvar len;\n\tvar idx;\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tlen = collection.length;\n\tdebug( 'Collection length: %d', len );\n\n\tout = [];\n\tif ( len === 0 ) {\n\t\tdebug( 'Finished processing a collection.' );\n\t\treturn done( null, out );\n\t}\n\ttmp = [];\n\tif ( len < opts.limit ) {\n\t\tlim = len;\n\t} else {\n\t\tlim = opts.limit;\n\t}\n\tdebug( 'Concurrency limit: %d', lim );\n\tdebug( 'Number of arguments: %d', indicator.length );\n\n\tmaxIndex = len - 1;\n\tcount = 0;\n\tidx = -1;\n\tfor ( i = 0; i < lim; i++ ) {\n\t\t// This guard is necessary to protect against synchronous functions which exhaust all collection elements...\n\t\tif ( idx < maxIndex ) {\n\t\t\tnext(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\t/**\n\t* Callback to invoke a provided function for the next element in a collection.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tvar j;\n\n\t\tidx += 1;\n\t\tj = idx;\n\t\tv = collection[ j ];\n\n\t\tdebug( 'Collection element %d: %s.', j, JSON.stringify( v ) );\n\t\tif ( indicator.length === 2 ) {\n\t\t\tindicator.call( opts.thisArg, v, cb );\n\t\t} else if ( indicator.length === 3 ) {\n\t\t\tindicator.call( opts.thisArg, v, j, cb );\n\t\t} else {\n\t\t\tindicator.call( opts.thisArg, v, j, collection, cb );\n\t\t}\n\t\t/**\n\t\t* Callback invoked once a provided function finishes processing a collection element.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {*} [group] - group\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction cb( error, group ) {\n\t\t\tvar i;\n\t\t\tif ( flg ) {\n\t\t\t\t// Prevent further processing of collection elements:\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( error ) {\n\t\t\t\tflg = true;\n\t\t\t\treturn clbk( error );\n\t\t\t}\n\t\t\tdebug( 'Collection element %d group: %s.', j, group );\n\n\t\t\t// Determine if we've seen the group/category before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\t\t\ti = indexOf( tmp, group );\n\t\t\tif ( i === -1 ) {\n\t\t\t\ttmp.push( group );\n\t\t\t\tout.push( [ group, 1, 0 ] );\n\t\t\t} else {\n\t\t\t\tout[ i ][ 1 ] += 1;\n\t\t\t}\n\t\t\tclbk();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once ready to process the next collection element.\n\t*\n\t* @private\n\t* @param {*} [error] - error\n\t* @returns {void}\n\t*/\n\tfunction clbk( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\tdebug( 'Encountered an error: %s', error.message );\n\t\t\treturn done( error );\n\t\t}\n\t\tcount += 1;\n\t\tdebug( 'Processed %d of %d collection elements.', count, len );\n\t\tif ( idx < maxIndex ) {\n\t\t\treturn next();\n\t\t}\n\t\tif ( count === len ) {\n\t\t\t// Compute percentages...\n\t\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t\t\t}\n\t\t\tdebug( 'Finished processing a collection.' );\n\t\t\treturn done( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default limit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport validate from './validate.js';\nimport limit from './limit.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for generating a frequency table according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* -   The output frequency table is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a function\n* @returns {Function} function which invokes the indicator function once for each element in a collection\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var opts = {\n*     'series': true\n* };\n*\n* // Create a `tabulateByAsync` function which invokes the indicator function for each collection element sequentially:\n* var tabulateByAsync = factory( opts, indicator );\n*\n* // Create a collection over which to iterate:\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* // Define a callback which handles results:\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* // Try to read each element in `files`:\n* tabulateByAsync( files, done );\n*/\nfunction factory( options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = indicator;\n\t} else {\n\t\tf = options;\n\t}\n\tif ( !isFunction( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', f ) );\n\t}\n\tif ( opts.series ) {\n\t\topts.limit = 1;\n\t} else if ( !opts.limit ) {\n\t\topts.limit = PINF;\n\t}\n\treturn tabulateByAsync;\n\n\t/**\n\t* Invokes an indicator function for each element in a collection.\n\t*\n\t* @private\n\t* @param {Collection} collection - input collection\n\t* @param {Callback} done - function to invoke upon completion\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} last argument must be a function\n\t* @returns {void}\n\t*/\n\tfunction tabulateByAsync( collection, done ) {\n\t\tif ( !isCollection( collection ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t\t}\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\treturn limit( collection, opts, f, clbk );\n\n\t\t/**\n\t\t* Callback invoked upon completion.\n\t\t*\n\t\t* @private\n\t\t* @param {*} [error] - error\n\t\t* @param {Object} result - frequency table\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction clbk( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\tdone( null, result );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {},\n*     'series': false,\n*     'limit': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'series' ) ) {\n\t\topts.series = options.series;\n\t\tif ( !isBoolean( opts.series ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'series', opts.series ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'limit' ) ) {\n\t\topts.limit = options.limit;\n\t\tif ( !isPositiveInteger( opts.limit ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'limit', opts.limit ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Generates a frequency table according to an indicator function.\n*\n* ## Notes\n*\n* -   This function does **not** guarantee that execution is asynchronous. To do so, wrap the `done` callback in a function which either executes at the end of the current stack (e.g., `nextTick`) or during a subsequent turn of the event loop (e.g., `setImmediate`, `setTimeout`).\n*\n* -   The output frequency table is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {PositiveInteger} [options.limit] - maximum number of pending invocations at any one time\n* @param {boolean} [options.series=false] - boolean indicating whether to wait for a previous invocation to complete before invoking a provided function for the next element in a collection\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @param {Callback} done - function to invoke upon completion\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} second-to-last argument must be a function\n* @throws {TypeError} last argument must be a function\n* @returns {void}\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* tabulateByAsync( files, indicator, done );\n*/\nfunction tabulateByAsync( collection, options, indicator, done ) {\n\tif ( arguments.length < 4 ) {\n\t\treturn factory( options )( collection, indicator );\n\t}\n\tfactory( options, indicator )( collection, done );\n}\n\n\n// EXPORTS //\n\nexport default tabulateByAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a frequency table according to an indicator function.\n*\n* @module @stdlib/utils/async/tabulate-by\n*\n* @example\n* import readFile from '@stdlib/fs/read-file';\n* import tabulateByAsync from '@stdlib/utils/async/tabulate-by';\n*\n* var files = [\n*     './beep.js',\n*     './boop.js'\n* ];\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* function indicator( file, next ) {\n*     var opts = {\n*         'encoding': 'utf8'\n*     };\n*     readFile( file, opts, onFile );\n*\n*     function onFile( error ) {\n*         if ( error ) {\n*             return next( null, 'nonreadable' );\n*         }\n*         next( null, 'readable' );\n*     }\n* }\n*\n* tabulateByAsync( files, indicator, done );\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name anyByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/any-by}\n*/\nimport anyByAsync from './../../async/any-by';\nsetReadOnly( ns, 'anyByAsync', anyByAsync );\n\n/**\n* @name anyByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/any-by-right}\n*/\nimport anyByRightAsync from './../../async/any-by-right';\nsetReadOnly( ns, 'anyByRightAsync', anyByRightAsync );\n\n/**\n* @name bifurcateByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/bifurcate-by}\n*/\nimport bifurcateByAsync from './../../async/bifurcate-by';\nsetReadOnly( ns, 'bifurcateByAsync', bifurcateByAsync );\n\n/**\n* @name composeAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/compose}\n*/\nimport composeAsync from './../../async/compose';\nsetReadOnly( ns, 'composeAsync', composeAsync );\n\n/**\n* @name countByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/count-by}\n*/\nimport countByAsync from './../../async/count-by';\nsetReadOnly( ns, 'countByAsync', countByAsync );\n\n/**\n* @name doUntilAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/do-until}\n*/\nimport doUntilAsync from './../../async/do-until';\nsetReadOnly( ns, 'doUntilAsync', doUntilAsync );\n\n/**\n* @name doWhileAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/do-while}\n*/\nimport doWhileAsync from './../../async/do-while';\nsetReadOnly( ns, 'doWhileAsync', doWhileAsync );\n\n/**\n* @name everyByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/every-by}\n*/\nimport everyByAsync from './../../async/every-by';\nsetReadOnly( ns, 'everyByAsync', everyByAsync );\n\n/**\n* @name everyByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/every-by-right}\n*/\nimport everyByRightAsync from './../../async/every-by-right';\nsetReadOnly( ns, 'everyByRightAsync', everyByRightAsync );\n\n/**\n* @name forEachAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/for-each}\n*/\nimport forEachAsync from './../../async/for-each';\nsetReadOnly( ns, 'forEachAsync', forEachAsync );\n\n/**\n* @name forEachRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/for-each-right}\n*/\nimport forEachRightAsync from './../../async/for-each-right';\nsetReadOnly( ns, 'forEachRightAsync', forEachRightAsync );\n\n/**\n* @name functionSequenceAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/function-sequence}\n*/\nimport functionSequenceAsync from './../../async/function-sequence';\nsetReadOnly( ns, 'functionSequenceAsync', functionSequenceAsync );\n\n/**\n* @name groupByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/group-by}\n*/\nimport groupByAsync from './../../async/group-by';\nsetReadOnly( ns, 'groupByAsync', groupByAsync );\n\n/**\n* @name ifelseAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/if-else}\n*/\nimport ifelseAsync from './../../async/if-else';\nsetReadOnly( ns, 'ifelseAsync', ifelseAsync );\n\n/**\n* @name ifthenAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/if-then}\n*/\nimport ifthenAsync from './../../async/if-then';\nsetReadOnly( ns, 'ifthenAsync', ifthenAsync );\n\n/**\n* @name inmapAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/inmap}\n*/\nimport inmapAsync from './../../async/inmap';\nsetReadOnly( ns, 'inmapAsync', inmapAsync );\n\n/**\n* @name inmapRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/inmap-right}\n*/\nimport inmapRightAsync from './../../async/inmap-right';\nsetReadOnly( ns, 'inmapRightAsync', inmapRightAsync );\n\n/**\n* @name mapFunAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-function}\n*/\nimport mapFunAsync from './../../async/map-function';\nsetReadOnly( ns, 'mapFunAsync', mapFunAsync );\n\n/**\n* @name mapKeysAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-keys}\n*/\nimport mapKeysAsync from './../../async/map-keys';\nsetReadOnly( ns, 'mapKeysAsync', mapKeysAsync );\n\n/**\n* @name mapValuesAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/map-values}\n*/\nimport mapValuesAsync from './../../async/map-values';\nsetReadOnly( ns, 'mapValuesAsync', mapValuesAsync );\n\n/**\n* @name noneByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/none-by}\n*/\nimport noneByAsync from './../../async/none-by';\nsetReadOnly( ns, 'noneByAsync', noneByAsync );\n\n/**\n* @name noneByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/none-by-right}\n*/\nimport noneByRightAsync from './../../async/none-by-right';\nsetReadOnly( ns, 'noneByRightAsync', noneByRightAsync );\n\n/**\n* @name reduceAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/reduce}\n*/\nimport reduceAsync from './../../async/reduce';\nsetReadOnly( ns, 'reduceAsync', reduceAsync );\n\n/**\n* @name reduceRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/reduce-right}\n*/\nimport reduceRightAsync from './../../async/reduce-right';\nsetReadOnly( ns, 'reduceRightAsync', reduceRightAsync );\n\n/**\n* @name waterfall\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/series-waterfall}\n*/\nimport waterfall from './../../async/series-waterfall';\nsetReadOnly( ns, 'waterfall', waterfall );\n\n/**\n* @name someByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/some-by}\n*/\nimport someByAsync from './../../async/some-by';\nsetReadOnly( ns, 'someByAsync', someByAsync );\n\n/**\n* @name someByRightAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/some-by-right}\n*/\nimport someByRightAsync from './../../async/some-by-right';\nsetReadOnly( ns, 'someByRightAsync', someByRightAsync );\n\n/**\n* @name tabulateByAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/tabulate-by}\n*/\nimport tabulateByAsync from './../../async/tabulate-by';\nsetReadOnly( ns, 'tabulateByAsync', tabulateByAsync );\n\n/**\n* @name trycatchAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/try-catch}\n*/\nimport trycatchAsync from './../../async/try-catch';\nsetReadOnly( ns, 'trycatchAsync', trycatchAsync );\n\n/**\n* @name trythenAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/try-then}\n*/\nimport trythenAsync from './../../async/try-then';\nsetReadOnly( ns, 'trythenAsync', trythenAsync );\n\n/**\n* @name untilAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/until}\n*/\nimport untilAsync from './../../async/until';\nsetReadOnly( ns, 'untilAsync', untilAsync );\n\n/**\n* @name whileAsync\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/async/while}\n*/\nimport whileAsync from './../../async/while';\nsetReadOnly( ns, 'whileAsync', whileAsync );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function composition.\n*\n* @param {...Function} f - functions to compose\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} composite function\n*\n* @example\n* function a( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, 2*x );\n*     }\n* }\n*\n* function b( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x+3 );\n*     }\n* }\n*\n* function c( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x/5 );\n*     }\n* }\n*\n* var f = composeAsync( c, b, a );\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n*     // => 3\n* }\n*\n* f( 6, done );\n*/\nfunction composeAsync() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to compose.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn composite;\n\n\t/**\n\t* Composite function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @param {Callback} done - callback to invoke after invoking all functions\n\t*/\n\tfunction composite() {\n\t\tvar done;\n\t\tvar args;\n\t\tvar i;\n\n\t\t// Cache the callback function:\n\t\tdone = arguments[ arguments.length-1 ];\n\n\t\t// Copy arguments which should be provided to the first invoked function...\n\t\targs = new Array( arguments.length-1 );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\t// Append the callback an invoked function should call upon completion:\n\t\targs.push( next );\n\n\t\t// Start invoking provided functions:\n\t\ti = nFuncs - 1;\n\t\tf[ i ].apply( null, args );\n\n\t\t/**\n\t\t* Callback invoked upon completion of a composed function.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {*} result - result to pass to next function\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\ti -= 1;\n\t\t\tif ( i < 0 ) {\n\t\t\t\treturn done( null, result );\n\t\t\t}\n\t\t\tf[ i ]( result, next );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default composeAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function predicate( i, clbk ) {\n*     clbk( null, i >= 5 );\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* doUntilAsync( fcn, predicate, done );\n*/\nfunction doUntilAsync( fcn, predicate, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tfcn.call( thisArg, idx, next );\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default doUntilAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function predicate( i, clbk ) {\n*     clbk( null, i < 5 );\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* doWhileAsync( fcn, predicate, done );\n*/\nfunction doWhileAsync( fcn, predicate, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tfcn.call( thisArg, idx, next );\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default doWhileAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function sequence.\n*\n* @param {...Function} f - functions to evaluate in sequential order\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} pipeline function\n*\n* @example\n* function a( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, 2*x );\n*     }\n* }\n*\n* function b( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x+3 );\n*     }\n* }\n*\n* function c( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x/5 );\n*     }\n* }\n*\n* var f = funseqAsync( a, b, c );\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n*     // => 3\n* }\n*\n* f( 6, done );\n*/\nfunction funseqAsync() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to execute sequentially.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @param {Callback} done - callback to invoke after invoking all functions\n\t*/\n\tfunction pipeline() {\n\t\tvar done;\n\t\tvar args;\n\t\tvar i;\n\n\t\t// Cache the callback function:\n\t\tdone = arguments[ arguments.length-1 ];\n\n\t\t// Copy arguments which should be provided to the first invoked function...\n\t\targs = new Array( arguments.length-1 );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\t// Append the callback an invoked function should call upon completion:\n\t\targs.push( next );\n\n\t\t// Start invoking provided functions:\n\t\ti = 0;\n\t\tf[ i ].apply( null, args );\n\n\t\t/**\n\t\t* Callback invoked upon completion of a provided function.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {*} result - result to pass to next function\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tif ( i === nFuncs ) {\n\t\t\t\treturn done( null, result );\n\t\t\t}\n\t\t\tf[ i ]( result, next );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default funseqAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a predicate function returns a truthy value, returns `x`; otherwise, returns `y`.\n*\n* @param {Function} predicate - predicate function\n* @param {*} x - value to return if a condition is truthy\n* @param {*} y - value to return if a condition is falsy\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function predicate( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, randu() > 0.5 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n* ifelseAsync( predicate, 1.0, -1.0, done );\n*/\nfunction ifelseAsync( predicate, x, y, done ) {\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tpredicate( clbk );\n\n\t/**\n\t* Callback invoked by a predicate function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - condition\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, bool ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( bool ) {\n\t\t\treturn done( null, x );\n\t\t}\n\t\tdone( null, y );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ifelseAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a predicate function returns a truthy value, invokes `x`; otherwise, invokes `y`.\n*\n* @param {Function} predicate - predicate function\n* @param {Function} x - function to invoke if a condition is truthy\n* @param {Function} y - function to invoke if a condition is falsy\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function predicate( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, randu() > 0.5 );\n*     }\n* }\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, 1.0 );\n*     }\n* }\n*\n* function y( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, -1.0 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n* ifthenAsync( predicate, x, y, done );\n*/\nfunction ifthenAsync( predicate, x, y, done ) {\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tpredicate( clbk1 );\n\n\t/**\n\t* Callback invoked by a predicate function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} bool - condition\n\t* @returns {void}\n\t*/\n\tfunction clbk1( error, bool ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( bool ) {\n\t\t\treturn x( clbk2 );\n\t\t}\n\t\ty( clbk2 );\n\t}\n\n\t/**\n\t* Callback invoked by either `x` or `y`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - results\n\t* @returns {void}\n\t*/\n\tfunction clbk2( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ifthenAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not return an error, invokes a callback with the function result; otherwise, invokes a callback with a value `y`.\n*\n* @param {Function} x - function to invoke\n* @param {*} y - value to return if `x` returns an error\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         if ( randu() > 0.5 ) {\n*             return clbk( null, 1.0 );\n*         }\n*         clbk( new Error( 'beep' ) );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         console.log( error.message );\n*     }\n*     console.log( result );\n* }\n*\n* trycatchAsync( x, -1.0, done );\n*/\nfunction trycatchAsync( x, y, done ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tx( clbk );\n\n\t/**\n\t* Callback invoked by `x`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {*} result - result\n\t* @returns {void}\n\t*/\n\tfunction clbk( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error, y );\n\t\t}\n\t\tdone( null, result );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trycatchAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not return an error, invokes a callback with the function result; otherwise, invokes a second function `y`.\n*\n* @param {Function} x - function to invoke\n* @param {Function} y - function to invoke if `x` returns an error\n* @param {Function} done - callback to invoke upon completion\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} last argument must be a function\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         if ( randu() > 0.5 ) {\n*             return clbk( null, 1.0 );\n*         }\n*         clbk( new Error( 'beep' ) );\n*     }\n* }\n*\n* function y( clbk ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         clbk( null, -1.0 );\n*     }\n* }\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n* }\n*\n* trythenAsync( x, y, done );\n*/\nfunction trythenAsync( x, y, done ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', done ) );\n\t}\n\tx( clbk1 );\n\n\t/**\n\t* Callback invoked by `x`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - function results\n\t* @returns {void}\n\t*/\n\tfunction clbk1( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\tif ( y.length === 1 ) {\n\t\t\t\treturn y( clbk2 );\n\t\t\t}\n\t\t\treturn y( error, clbk2 );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\treturn done.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked by `y`.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} args - function results\n\t* @returns {void}\n\t*/\n\tfunction clbk2( error ) {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tnargs = arguments.length;\n\t\targs = new Array( nargs );\n\t\targs[ 0 ] = null;\n\t\tfor ( i = 1; i < nargs; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\treturn done.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trythenAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function predicate( i, clbk ) {\n*     clbk( null, i >= 5 );\n* }\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* untilAsync( predicate, fcn, done );\n*/\nfunction untilAsync( predicate, fcn, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tpredicate( idx, onPredicate );\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default untilAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function predicate( i, clbk ) {\n*     clbk( null, i < 5 );\n* }\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* whileAsync( predicate, fcn, done );\n*/\nfunction whileAsync( predicate, fcn, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tpredicate( idx, onPredicate );\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default whileAsync;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar TYPE = 'function';\n\n\n// MAIN //\n\n/**\n* Tests if an array-like object supports the accessor (get/set) protocol.\n*\n* @param {Object} value - value to test\n* @returns {boolean} boolean indicating whether a value is an accessor array\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var bool = isAccessorArray( new Complex128Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isAccessorArray( [] );\n* // returns false\n*/\nfunction isAccessorArray( value ) {\n\treturn ( typeof value.get === TYPE && typeof value.set === TYPE ); // eslint-disable-line valid-typeof\n}\n\n\n// EXPORTS //\n\nexport default isAccessorArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'complex128': getComplex128,\n\t'complex64': getComplex64,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex128( arr, 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 3.0\n*\n* var im = imag( v );\n* // returns 4.0\n*/\nfunction getComplex128( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex64( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getComplex64( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'float64': getFloat64,\n\t'float32': getFloat32,\n\t'int32': getInt32,\n\t'int16': getInt16,\n\t'int8': getInt8,\n\t'uint32': getUint32,\n\t'uint16': getUint16,\n\t'uint8': getUint8,\n\t'uint8c': getUint8c,\n\t'generic': getGeneric,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat64( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat64( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* var arr = new Float32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat32( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat32( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var arr = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt32( arr, 2 );\n* // returns 3\n*/\nfunction getInt32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int16Array from '@stdlib/array/int16';\n*\n* var arr = new Int16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt16( arr, 2 );\n* // returns 3\n*/\nfunction getInt16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var arr = new Int8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt8( arr, 2 );\n* // returns 3\n*/\nfunction getInt8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var arr = new Uint32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint32( arr, 2 );\n* // returns 3\n*/\nfunction getUint32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint16Array from '@stdlib/array/uint16';\n*\n* var arr = new Uint16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint16( arr, 2 );\n* // returns 3\n*/\nfunction getUint16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* var arr = new Uint8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8( arr, 2 );\n* // returns 3\n*/\nfunction getUint8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint8ClampedArray from '@stdlib/array/uint8c';\n*\n* var arr = new Uint8ClampedArray( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8c( arr, 2 );\n* // returns 3\n*/\nfunction getUint8c( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getGeneric( arr, 2 );\n* // returns 3\n*/\nfunction getGeneric( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 2 );\n* // returns 3\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Mapping from array constructors to data types...\nvar ctor2dtypes = {\n\t'Float32Array': 'float32',\n\t'Float64Array': 'float64',\n\t'Array': 'generic',\n\t'Int16Array': 'int16',\n\t'Int32Array': 'int32',\n\t'Int8Array': 'int8',\n\t'Uint16Array': 'uint16',\n\t'Uint32Array': 'uint32',\n\t'Uint8Array': 'uint8',\n\t'Uint8ClampedArray': 'uint8c',\n\t'Complex64Array': 'complex64',\n\t'Complex128Array': 'complex128',\n\t'BooleanArray': 'bool'\n};\n\n\n// EXPORTS //\n\nexport default ctor2dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* import ctor from '@stdlib/array/float32';\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nimport hasFloat32ArraySupport from '@stdlib/assert/has-float32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat32Array from './../../is-float32array';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport GlobalFloat32Array from './float32array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasInt32Array = ( typeof Int32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/\nfunction isInt32Array( value ) {\n\treturn (\n\t\t( hasInt32Array && value instanceof Int32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/max\n* @type {integer32}\n*\n* @example\n* import INT32_MAX from '@stdlib/constants/int32/max';\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{31} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 2147483647\n*/\nvar INT32_MAX = 2147483647|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/min\n* @type {integer32}\n*\n* @example\n* import INT32_MIN from '@stdlib/constants/int32/min';\n* // returns -2147483648\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{31})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -2147483648\n*/\nvar INT32_MIN = -2147483648|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT32_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int32\n*\n* @example\n* import ctor from '@stdlib/array/int32';\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nimport hasInt32ArraySupport from '@stdlib/assert/has-int32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt32Array from './../../is-int32array';\nimport INT32_MAX from '@stdlib/constants/int32/max';\nimport INT32_MIN from '@stdlib/constants/int32/min';\nimport GlobalInt32Array from './int32array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasInt16Array = ( typeof Int16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/\nfunction isInt16Array( value ) {\n\treturn (\n\t\t( hasInt16Array && value instanceof Int16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/max\n* @type {integer32}\n*\n* @example\n* import INT16_MAX from '@stdlib/constants/int16/max';\n* // returns 32767\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{15} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 32767\n*/\nvar INT16_MAX = 32767|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/min\n* @type {integer32}\n*\n* @example\n* import INT16_MIN from '@stdlib/constants/int16/min';\n* // returns -32768\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{15})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 1000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -32768\n*/\nvar INT16_MIN = -32768|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT16_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int16Array === 'function' ) ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int16\n*\n* @example\n* import ctor from '@stdlib/array/int16';\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nimport hasInt16ArraySupport from '@stdlib/assert/has-int16array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt16Array from './../../is-int16array';\nimport INT16_MAX from '@stdlib/constants/int16/max';\nimport INT16_MIN from '@stdlib/constants/int16/min';\nimport GlobalInt16Array from './int16array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt16Array( [ 1, 3.14, -3.14, INT16_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT16_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasUint8ClampedArray = ( typeof Uint8ClampedArray === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/\nfunction isUint8ClampedArray( value ) {\n\treturn (\n\t\t( hasUint8ClampedArray && value instanceof Uint8ClampedArray ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8ClampedArray]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array/uint8c\n*\n* @example\n* import ctor from '@stdlib/array/uint8c';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nimport hasUint8ClampedArraySupport from '@stdlib/assert/has-uint8clampedarray-support'; // eslint-disable-line id-length\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint8ClampedArray from './../../is-uint8clampedarray';\nimport GlobalUint8ClampedArray from './uint8clampedarray.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ClampedArraySupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8ClampedArray !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalUint8ClampedArray( [ -1, 0, 1, 3.14, 4.99, 255, 256 ] );\n\t\tbool = (\n\t\t\tisUint8ClampedArray( arr ) &&\n\t\t\tarr[ 0 ] === 0 &&   // clamped\n\t\t\tarr[ 1 ] === 0 &&\n\t\t\tarr[ 2 ] === 1 &&\n\t\t\tarr[ 3 ] === 3 &&   // round to nearest\n\t\t\tarr[ 4 ] === 5 &&   // round to nearest\n\t\t\tarr[ 5 ] === 255 &&\n\t\t\tarr[ 6 ] === 255    // clamped\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasInt8Array = ( typeof Int8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/\nfunction isInt8Array( value ) {\n\treturn (\n\t\t( hasInt8Array && value instanceof Int8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/max\n* @type {integer32}\n*\n* @example\n* import INT8_MAX from '@stdlib/constants/int8/max';\n* // returns 127\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* 2^{7} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 127\n*/\nvar INT8_MAX = 127|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int8Array === 'function' ) ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int8\n*\n* @example\n* import ctor from '@stdlib/array/int8';\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nimport hasInt8ArraySupport from '@stdlib/assert/has-int8array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt8Array from './../../is-int8array';\nimport INT8_MAX from '@stdlib/constants/int8/max';\nimport INT8_MIN from '@stdlib/constants/int8/min';\nimport GlobalInt8Array from './int8array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt8Array( [ 1, 3.14, -3.14, INT8_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&     // truncation\n\t\t\tarr[ 2 ] === -3 &&    // truncation\n\t\t\tarr[ 3 ] === INT8_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/min\n* @type {integer32}\n*\n* @example\n* import INT8_MIN from '@stdlib/constants/int8/min';\n* // returns -128\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* -(2^{7})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -128\n*/\nvar INT8_MIN = -128|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT8_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of strings.\n*\n* @module @stdlib/assert/is-string-array\n*\n* @example\n* import isStringArray from '@stdlib/assert/is-string-array';\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', 123 ] );\n* // returns false\n*\n* @example\n* import { primitives as isStringArray } from '@stdlib/assert/is-string-array';\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', new String( 'def' ) ] );\n* // returns false\n*\n* @example\n* import { objects as isStringArray } from '@stdlib/assert/is-string-array';\n*\n* var bool = isStringArray( [ new String( 'abc' ), new String( 'def' ) ] );\n* // returns true\n*\n* bool = isStringArray( [ new String( 'abc' ), 'def' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport arrayfun from './../../tools/array-function';\nimport isString from './../../is-string';\n\n\n// VARIABLES //\n\nvar isPrimitiveArray = arrayfun( isString.isPrimitive );\nvar isObjectArray = arrayfun( isString.isObject );\n\n\n// MAIN //\n\nvar isStringArray = arrayfun( isString );\nsetReadOnly( isStringArray, 'primitives', isPrimitiveArray );\nsetReadOnly( isStringArray, 'objects', isObjectArray );\n\n\n// EXPORTS //\n\nexport default isStringArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport defineProperty from '@stdlib/utils/define-property';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport format from '@stdlib/string/format';\nimport toStr from './tostring.js';\nimport toJSON from './tojson.js';\n\n\n// MAIN //\n\n/**\n* 128-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex128} 128-bit complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\nfunction Complex128( real, imag ) {\n\tif ( !( this instanceof Complex128 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': real\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': imag\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex128.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128.prototype, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 16\n*/\nsetReadOnly( Complex128.prototype, 'byteLength', 16 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex128.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex128` instance.\n*\n* @name toJSON\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex128', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex128.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex128';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar fround = ( typeof Math.fround === 'function' ) ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default fround;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\n\n\n// MAIN //\n\n/**\n* Converts a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @param {number} x - double-precision floating-point number\n* @returns {number} nearest single-precision floating-point number\n*\n* @example\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\nfunction float64ToFloat32( x ) {\n\tFLOAT32_VIEW[ 0 ] = x;\n\treturn FLOAT32_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/to-float32\n*\n* @example\n* import float64ToFloat32 from '@stdlib/number/float64/base/to-float32';\n*\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\n\n// MODULES //\n\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar float64ToFloat32;\nif ( typeof builtin === 'function' ) {\n\tfloat64ToFloat32 = builtin;\n} else {\n\tfloat64ToFloat32 = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport defineProperty from '@stdlib/utils/define-property';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport float64ToFloat32 from '@stdlib/number/float64/base/to-float32';\nimport format from '@stdlib/string/format';\nimport toStr from './tostring.js';\nimport toJSON from './tojson.js';\n\n\n// MAIN //\n\n/**\n* 64-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\nfunction Complex64( real, imag ) {\n\tif ( !( this instanceof Complex64 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( real )\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( imag )\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex64.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64.prototype, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 8\n*/\nsetReadOnly( Complex64.prototype, 'byteLength', 8 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex64.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex64` instance.\n*\n* @name toJSON\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex64', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex64.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex128 from '@stdlib/complex/float64/ctor';\nimport Complex64 from '@stdlib/complex/float32/ctor';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex number-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex number-like object.\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\nfunction isComplexLike( value ) {\n\tif ( value instanceof Complex128 || value instanceof Complex64 ) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.re === 'number' &&\n\t\ttypeof value.im === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex64';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 8; // 4 bytes per float32 x (1 real + 1 imag component)\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n*\n* var bool = isComplex64Array( new Complex64Array( 10 ) );\n* // returns true\n*\n* bool = isComplex64Array( [] );\n* // returns false\n*/\nfunction isComplex64Array( value ) {\n\t// Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex64Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex64array`.\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isComplex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 16; // 8 bytes per float64 x (1 real + 1 imag component)\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var bool = isComplex128Array( new Complex128Array( 10 ) );\n* // returns true\n*\n* bool = isComplex128Array( [] );\n* // returns false\n*/\nfunction isComplex128Array( value ) {\n\t// Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex128Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex128array`.\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isComplex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from './../../has-own-property';\nimport Symbol from '@stdlib/symbol/ctor';\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nexport default IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\nfunction real( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nexport default real;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nfunction imag( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nexport default imag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex64Array` as a `Float32Array`.\n*\n* @param {Complex64Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float32Array} `Float32Array` view\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float32Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from '@stdlib/array/float64';\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex128Array` as a `Float64Array`.\n*\n* @param {Complex128Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} `Float64Array` view\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float64Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/float32/real';\nimport imagf from '@stdlib/complex/float32/imag';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isArray from '@stdlib/assert/is-array';\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport isEven from '@stdlib/math/base/assert/is-even';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport isComplex64Array from './../../base/assert/is-complex64array';\nimport isComplex128Array from './../../base/assert/is-complex128array';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Float32Array from './../../float32';\nimport Complex64 from '@stdlib/complex/float32/ctor';\nimport format from '@stdlib/string/format';\nimport realf from '@stdlib/complex/float32/real';\nimport imagf from '@stdlib/complex/float32/imag';\nimport floor from '@stdlib/math/base/special/floor';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport getter from './../../base/getter';\nimport accessorGetter from './../../base/accessor-getter';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\nimport fromArray from './from_array.js';\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex64Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n\t\tvalue.name === 'Complex128Array'\n\t);\n}\n\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float32Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex64} complex number\n*/\nfunction getComplex64( buf, idx ) {\n\tidx *= 2;\n\treturn new Complex64( buf[ idx ], buf[ idx+1 ] );\n}\n\n\n// MAIN //\n\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex64Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex64Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex64Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex64Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex64Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex64Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float32Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float32Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float32Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float32Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float32Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) ); // FIXME: `buf` is what is returned from above, NOT the original value\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/\nsetReadOnly( Complex64Array, 'name', 'Complex64Array' );\n\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex64Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of %u. Length: `%u`.', 2, len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex64Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var z = arr.at( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 9.0\n*\n* im = imagf( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'at', function at( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx < 0 ) {\n\t\tidx += this._length;\n\t}\n\tif ( idx < 0 || idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex64( this._buffer, idx );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array.prototype, 'BYTES_PER_ELEMENT', Complex64Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'entries', function entries() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar buf;\n\tvar FLG;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': [ i, getComplex64( buf, i ) ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, getComplex64( buf, i ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {Complex64Array} modified array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.fill( new Complex64( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*\n* z = arr.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tre = realf( value );\n\tim = imagf( value );\n\tfor ( i = start; i < end; i++ ) {\n\t\tidx = 2*i;\n\t\tbuf[ idx ] = re;\n\t\tbuf[ idx+1 ] = im;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\tout.push( z );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( Complex64Array.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/\nsetReadOnly( Complex64Array.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( Complex64Array.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tfcn.call( thisArg, z, i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'get', function get( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex64( this._buffer, idx );\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex64( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex64( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex64( 4.0, -4.0 ), -3 );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var arr = new Complex64Array( 10 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex64( 4.0, -4.0 ), -3 );\n* // returns -1\n*/\nsetReadOnly( Complex64Array.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'join', function join( separator ) {\n\tvar out;\n\tvar buf;\n\tvar sep;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tsep = ',';\n\t} else if ( isString( separator ) ) {\n\t\tsep = separator;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toString() );\n\t}\n\treturn out.join( sep );\n});\n\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'keys', function keys() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.keys();\n\t}\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex64( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex64( 2.0, -2.0 ), -3 );\n* // returns 1\n*/\nsetReadOnly( Complex64Array.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function scale( v, i ) {\n*     return new Complex64( 2.0*realf( v ), 2.0*imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2\n*\n* var im = imagf( z );\n* // returns -2\n*/\nsetReadOnly( Complex64Array.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = fcn.call( thisArg, getComplex64( buf, i ), i, this );\n\t\tif ( isComplexLike( v ) ) {\n\t\t\toutbuf[ 2*i ] = realf( v );\n\t\t\toutbuf[ (2*i)+1 ] = imagf( v );\n\t\t} else if ( isArrayLikeObject( v ) && v.length === 2 ) {\n\t\t\toutbuf[ 2*i ] = v[ 0 ];\n\t\t\toutbuf[ (2*i)+1 ] = v[ 1 ];\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t}\n\t}\n\treturn out;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import caddf from '@stdlib/complex/float32/base/add';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduce( caddf );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 6.0\n*\n* var im = imagf( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex64Array.prototype, 'reduce', function reduce( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = 0;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex64( buf, 0 );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\tv = getComplex64( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import caddf from '@stdlib/complex/float32/base/add';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduceRight( caddf );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 6.0\n*\n* var im = imagf( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex64Array.prototype, 'reduceRight', function reduceRight( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = len-1;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex64( buf, len-1 );\n\t\ti = len-2;\n\t}\n\tfor ( ; i >= 0; i-- ) {\n\t\tv = getComplex64( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ (2*i) ];\n\t\tbuf[ (2*i) ] = buf[ (2*j) ];\n\t\tbuf[ (2*j) ] = tmp;\n\t\ttmp = buf[ (2*i)+1 ];\n\t\tbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t\tbuf[ (2*j)+1 ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = realf( value );\n\t\tbuf[ idx+1 ] = imagf( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float32Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float32Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ]; // TODO: handle accessor arrays\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = realf( v );\n\t\t\tbuf[ idx+1 ] = imagf( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} complex number array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var out = arr.slice();\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 5\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* out = arr.slice( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = out.length;\n* // returns 2\n*\n* z = out.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'slice', function slice( start, end ) {\n\tvar outlen;\n\tvar outbuf;\n\tvar out;\n\tvar idx;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tstart = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( start < end ) {\n\t\toutlen = end - start;\n\t} else {\n\t\toutlen = 0;\n\t}\n\tout = new this.constructor( outlen );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < outlen; i++ ) {\n\t\tidx = 2*(i+start);\n\t\toutbuf[ 2*i ] = buf[ idx ];\n\t\toutbuf[ (2*i)+1 ] = buf[ idx+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, getComplex64( buf, i ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} sorted array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = realf( a );\n*     re2 = realf( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imagf( a );\n*     im2 = imagf( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'sort', function sort( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex64( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = 2 * i;\n\t\tbuf[ j ] = realf( tmp[i] );\n\t\tbuf[ j+1 ] = imagf( tmp[i] );\n\t}\n\treturn this;\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex64Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + (begin*BYTES_PER_ELEMENT);\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toLocaleString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'toLocaleString', function toLocaleString( locales, options ) {\n\tvar opts;\n\tvar loc;\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tloc = [];\n\t} else if ( isString( locales ) || isStringArray( locales ) ) {\n\t\tloc = locales;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\topts = {};\n\t} else if ( isObject( options ) ) {\n\t\topts = options;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toLocaleString( loc, opts ) );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.toReversed();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'toReversed', function toReversed() {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = len - i - 1;\n\t\toutbuf[ (2*i) ] = buf[ (2*j) ];\n\t\toutbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} sorted array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = realf( a );\n*     re2 = realf( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imagf( a );\n*     im2 = imagf( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'toSorted', function toSorted( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex64( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\treturn new Complex64Array( tmp );\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toString() );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 1.0\n*\n* var im = imagf( v );\n* // returns -1.0\n*\n* v = iter.next().value;\n* // returns <Complex64>\n*\n* re = realf( v );\n* // returns 2.0\n*\n* im = imagf( v );\n* // returns -2.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'values', function values() {\n\tvar iter;\n\tvar self;\n\tvar len;\n\tvar FLG;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': getComplex64( buf, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.values();\n\t}\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex64Array} new typed array\n*\n* @example\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex64( 4.0, 4.0 ) );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 4.0\n*\n* var im = imagf( z );\n* // returns 4.0\n*/\nsetReadOnly( Complex64Array.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tbuf[ 2*index ] = realf( value );\n\tbuf[ (2*index)+1 ] = imagf( value );\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default Complex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/float32/real';\nimport imagf from '@stdlib/complex/float32/imag';\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = realf( v );\n\t\tbuf[ j+1 ] = imagf( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\nfunction real( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nexport default real;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nfunction imag( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nexport default imag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport format from '@stdlib/string/format';\nimport real from '@stdlib/complex/float64/real';\nimport imag from '@stdlib/complex/float64/imag';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/float32/real';\nimport imagf from '@stdlib/complex/float32/imag';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isArray from '@stdlib/assert/is-array';\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport isString from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport isEven from '@stdlib/math/base/assert/is-even';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport isComplex64Array from './../../base/assert/is-complex64array';\nimport isComplex128Array from './../../base/assert/is-complex128array';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Float64Array from './../../float64';\nimport Complex128 from '@stdlib/complex/float64/ctor';\nimport real from '@stdlib/complex/float64/real';\nimport imag from '@stdlib/complex/float64/imag';\nimport floor from '@stdlib/math/base/special/floor';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport getter from './../../base/getter';\nimport accessorGetter from './../../base/accessor-getter';\nimport format from '@stdlib/string/format';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\nimport fromArray from './from_array.js';\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex128Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n\t\tvalue.name === 'Complex64Array'\n\t);\n}\n\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float64Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex128} complex number\n*/\nfunction getComplex128( buf, idx ) {\n\tidx *= 2;\n\treturn new Complex128( buf[ idx ], buf[ idx+1 ] );\n}\n\n\n// MAIN //\n\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex128Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex128Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex128Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex128Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex128Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex128Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float64Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float64Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float64Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float64Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float64Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/\nsetReadOnly( Complex128Array, 'name', 'Complex128Array' );\n\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex128Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex128Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.at( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 9.0\n*\n* im = imag( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'at', function at( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx < 0 ) {\n\t\tidx += this._length;\n\t}\n\tif ( idx < 0 || idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex128( this._buffer, idx );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array.prototype, 'BYTES_PER_ELEMENT', Complex128Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex128( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, getComplex128( buf, i ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {Complex128Array} modified array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.fill( new Complex128( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*\n* z = arr.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tre = real( value );\n\tim = imag( value );\n\tfor ( i = start; i < end; i++ ) {\n\t\tidx = 2*i;\n\t\tbuf[ idx ] = re;\n\t\tbuf[ idx+1 ] = im;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex128Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\tout.push( z );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( Complex128Array.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/\nsetReadOnly( Complex128Array.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( Complex128Array.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tfcn.call( thisArg, z, i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'get', function get( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex128( this._buffer, idx );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex128( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex128( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex128( 4.0, -4.0 ), -3 );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex128( 4.0, -4.0 ), -3 );\n* // returns 3\n*/\nsetReadOnly( Complex128Array.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'join', function join( separator ) {\n\tvar out;\n\tvar buf;\n\tvar sep;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tsep = ',';\n\t} else if ( isString( separator ) ) {\n\t\tsep = separator;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toString() );\n\t}\n\treturn out.join( sep );\n});\n\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'keys', function keys() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.keys();\n\t}\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex128( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex128( 2.0, -2.0 ), -3 );\n* // returns 1\n*/\nsetReadOnly( Complex128Array.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64/ctor';\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function scale( v, i ) {\n*     return new Complex128( 2.0*real( v ), 2.0*imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns -2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = fcn.call( thisArg, getComplex128( buf, i ), i, this );\n\t\tif ( isComplexLike( v ) ) {\n\t\t\toutbuf[ 2*i ] = real( v );\n\t\t\toutbuf[ (2*i)+1 ] = imag( v );\n\t\t} else if ( isArrayLikeObject( v ) && v.length === 2 ) {\n\t\t\toutbuf[ 2*i ] = v[ 0 ];\n\t\t\toutbuf[ (2*i)+1 ] = v[ 1 ];\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t}\n\t}\n\treturn out;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n* import cadd from '@stdlib/complex/float64/base/add';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduce( cadd );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 6.0\n*\n* var im = imag( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex128Array.prototype, 'reduce', function reduce( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = 0;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex128( buf, 0 );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\tv = getComplex128( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n* import cadd from '@stdlib/complex/float64/base/add';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.reduceRight( cadd );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 6.0\n*\n* var im = imag( z );\n* // returns 6.0\n*/\nsetReadOnly( Complex128Array.prototype, 'reduceRight', function reduceRight( reducer, initialValue ) {\n\tvar buf;\n\tvar acc;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = len-1;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = getComplex128( buf, len-1 );\n\t\ti = len-2;\n\t}\n\tfor ( ; i >= 0; i-- ) {\n\t\tv = getComplex128( buf, i );\n\t\tacc = reducer( acc, v, i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} reversed array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ (2*i) ];\n\t\tbuf[ (2*i) ] = buf[ (2*j) ];\n\t\tbuf[ (2*j) ] = tmp;\n\t\ttmp = buf[ (2*i)+1 ];\n\t\tbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t\tbuf[ (2*j)+1 ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = real( value );\n\t\tbuf[ idx+1 ] = imag( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float64Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float64Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = real( v );\n\t\t\tbuf[ idx+1 ] = imag( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex128Array} complex number array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var out = arr.slice();\n* // returns <Complex128Array>\n*\n* var len = out.length;\n* // returns 5\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 5.0\n*\n* im = imag( z );\n* // returns -5.0\n*\n* out = arr.slice( 1, -2 );\n* // returns <Complex128Array>\n*\n* len = out.length;\n* // returns 2\n*\n* z = out.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'slice', function slice( start, end ) {\n\tvar outlen;\n\tvar outbuf;\n\tvar out;\n\tvar idx;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tstart = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( start < end ) {\n\t\toutlen = end - start;\n\t} else {\n\t\toutlen = 0;\n\t}\n\tout = new this.constructor( outlen );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < outlen; i++ ) {\n\t\tidx = 2*(i+start);\n\t\toutbuf[ 2*i ] = buf[ idx ];\n\t\toutbuf[ (2*i)+1 ] = buf[ idx+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, getComplex128( buf, i ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} sorted array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = real( a );\n*     re2 = real( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imag( a );\n*     im2 = imag( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'sort', function sort( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex128( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = 2 * i;\n\t\tbuf[ j ] = real( tmp[i] );\n\t\tbuf[ j+1 ] = imag( tmp[i] );\n\t}\n\treturn this;\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex128Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 5.0\n*\n* im = imag( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex128Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toLocaleString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'toLocaleString', function toLocaleString( locales, options ) {\n\tvar opts;\n\tvar loc;\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tloc = [];\n\t} else if ( isString( locales ) || isStringArray( locales ) ) {\n\t\tloc = locales;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\topts = {};\n\t} else if ( isObject( options ) ) {\n\t\topts = options;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toLocaleString( loc, opts ) );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} reversed array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.toReversed();\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'toReversed', function toReversed() {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = len - i - 1;\n\t\toutbuf[ (2*i) ] = buf[ (2*j) ];\n\t\toutbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} compareFcn - comparison function\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} sorted array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* function compare( a, b ) {\n*     var re1;\n*     var re2;\n*     var im1;\n*     var im2;\n*     re1 = real( a );\n*     re2 = real( b );\n*     if ( re1 < re2 ) {\n*         return -1;\n*     }\n*     if ( re1 > re2 ) {\n*         return 1;\n*     }\n*     im1 = imag( a );\n*     im2 = imag( b );\n*     if ( im1 < im2 ) {\n*         return -1;\n*     }\n*     if ( im1 > im2 ) {\n*         return 1;\n*     }\n*     return 0;\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 3.0, -3.0 ], 0 );\n* arr.set( [ 1.0, -1.0 ], 1 );\n* arr.set( [ 2.0, -2.0 ], 2 );\n*\n* var out = arr.sort( compare );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'toSorted', function toSorted( compareFcn ) {\n\tvar tmp;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\ttmp = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp.push( getComplex128( buf, i ) );\n\t}\n\ttmp.sort( compareFcn );\n\treturn new Complex128Array( tmp );\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toString() );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 1.0\n*\n* var im = imag( v );\n* // returns -1.0\n*\n* v = iter.next().value;\n* // returns <Complex128>\n*\n* re = real( v );\n* // returns 2.0\n*\n* im = imag( v );\n* // returns -2.0\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'values', function values() {\n\tvar iter;\n\tvar self;\n\tvar len;\n\tvar FLG;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': getComplex128( buf, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.values();\n\t}\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex128Array} new typed array\n*\n* @example\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n* import Complex128 from '@stdlib/complex/float64/ctor';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex128( 4.0, 4.0 ) );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 4.0\n*\n* var im = imag( z );\n* // returns 4.0\n*/\nsetReadOnly( Complex128Array.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tbuf[ 2*index ] = real( value );\n\tbuf[ (2*index)+1 ] = imag( value );\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default Complex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport real from '@stdlib/complex/float64/real';\nimport imag from '@stdlib/complex/float64/imag';\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = real( v );\n\t\tbuf[ j+1 ] = imag( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Boolean from '@stdlib/boolean/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {Array} output array\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tout.push( Boolean( v.value ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport format from '@stdlib/string/format';\nimport real from '@stdlib/complex/float64/real';\nimport imag from '@stdlib/complex/float64/imag';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Uint8Array from './../../uint8';\nimport Boolean from '@stdlib/boolean/ctor';\nimport getter from './../../base/getter';\nimport floor from '@stdlib/math/base/special/floor';\nimport accessorGetter from './../../base/accessor-getter';\nimport format from '@stdlib/string/format';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\nimport fromArray from './from_array.js';\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Uint8Array.BYTES_PER_ELEMENT;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a `BooleanArray`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `BooleanArray`\n*/\nfunction isBooleanArray( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'BooleanArray' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a boolean typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean typed array constructor\n*/\nfunction isBooleanArrayConstructor( value ) {\n\treturn ( value === BooleanArray );\n}\n\n\n// MAIN //\n\n/**\n* Boolean array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = new BooleanArray();\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new BooleanArray( 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new BooleanArray( [ true, false ] );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 16\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new BooleanArray( buf, 8 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 8\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new BooleanArray( buf, 8, 2 );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction BooleanArray() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\tvar arg;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof BooleanArray) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new BooleanArray();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new BooleanArray( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new BooleanArray( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new BooleanArray( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Uint8Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\targ = arguments[ 0 ];\n\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\tbuf = new Uint8Array( arg );\n\t\t} else if ( isCollection( arg ) ) {\n\t\t\tbuf = fromArray( new Uint8Array( arg.length ), arg );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tbuf = new Uint8Array( arg );\n\t\t} else if ( isObject( arg ) ) {\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tbuf = arg[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tbuf = new Uint8Array( fromIterator( buf ) );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tbuf = new Uint8Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Uint8Array( buf, byteOffset, len );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof BooleanArray\n* @readonly\n* @type {PositiveInteger}\n* @default 1\n*\n* @example\n* var nbytes = BooleanArray.BYTES_PER_ELEMENT;\n* // returns 1\n*/\nsetReadOnly( BooleanArray, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof BooleanArray\n* @readonly\n* @type {string}\n* @default 'BooleanArray'\n*\n* @example\n* var str = BooleanArray.name;\n* // returns 'BooleanArray'\n*/\nsetReadOnly( BooleanArray, 'name', 'BooleanArray' );\n\n/**\n* Creates a new boolean array from an array-like object or an iterable.\n*\n* @name from\n* @memberof BooleanArray\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = BooleanArray.from( [ true, false ] );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* function clbk( v ) {\n*     return !v;\n* }\n*\n* var arr = BooleanArray.from( [ true, false ], clbk );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( BooleanArray, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isBooleanArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tbuf[ i ] = Boolean( clbk.call( thisArg, get( src, i ), i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tlen = tmp.length;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new boolean array from a variable number of arguments.\n*\n* @name of\n* @memberof BooleanArray\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = BooleanArray.of( true, true, true, true );\n* // returns <BooleanArray>\n*\n* var len = arr.length;\n* // returns 4\n*/\nsetReadOnly( BooleanArray, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isBooleanArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element located at integer position (index) `i`, with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} must provide an integer\n* @returns {(boolean|void)} array element\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.at( 0 );\n* // returns true\n*\n* v = arr.at( -1 );\n* // returns true\n*\n* v = arr.at( 100 );\n* // returns undefined\n*/\nsetReadOnly( BooleanArray.prototype, 'at', function at( idx ) {\n\tvar buf;\n\tvar len;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tif ( idx < 0 ) {\n\t\tidx += len;\n\t}\n\tif ( idx < 0 || idx >= len ) {\n\t\treturn;\n\t}\n\treturn Boolean( buf[ idx ] );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 10\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 1\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 1\n*/\nsetReadOnly( BooleanArray.prototype, 'BYTES_PER_ELEMENT', BooleanArray.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} modified array\n*\n* @example\n* var arr = new BooleanArray( 4 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n* arr.set( true, 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* var v = arr.get( 2 );\n* // returns true\n*\n* v = arr.get( 3 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target, start );\n\t} else {\n\t\tthis._buffer.copyWithin( target, start, arguments[2] );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var it = arr.entries();\n*\n* var v = it.next().value;\n* // returns [ 0, true ]\n*\n* v = it.next().value;\n* // returns [ 1, false ]\n*\n* v = it.next().value;\n* // returns [ 2, true ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'entries', function entries() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar buf;\n\tvar FLG;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': [ i, Boolean( buf[ i ] ) ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( true, 1 );\n* arr.set( true, 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, Boolean( buf[ i ] ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @returns {BooleanArray} modified array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.fill( true, 1 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* v = arr.get( 1 );\n* // returns true\n*\n* v = arr.get( 2 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar val;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tif ( value ) {\n\t\tval = 1;\n\t} else {\n\t\tval = 0;\n\t}\n\tfor ( i = start; i < end; i++ ) {\n\t\tbuf[ i ] = val;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} boolean array\n*\n* @example\n* function predicate( v ) {\n*     return ( v === true );\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <BooleanArray>\n*\n* var len = out.length;\n* // returns 2\n*\n* var v = out.get( 0 );\n* // returns true\n*\n* v = out.get( 1 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\tout.push( v );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {(boolean|void)} array element or undefined\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.find( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn v;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findIndex( predicate );\n* // returns 0\n*/\nsetReadOnly( BooleanArray.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {(boolean|void)} array element or undefined\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findLast( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn v;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var v = arr.findLastIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( BooleanArray.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar v;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tv = Boolean( buf[ i ] );\n\t\tif ( predicate.call( thisArg, v, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( BooleanArray.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tfcn.call( thisArg, Boolean( buf[ i ] ), i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(boolean|void)} array element\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* arr.set( [ true, false ], 0 );\n*\n* v = arr.get( 0 );\n* // returns true\n*\n* v = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( BooleanArray.prototype, 'get', function get( idx ) {\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn Boolean( this._buffer[ idx ] );\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a value\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( true, 3 );\n* arr.set( true, 4 );\n*\n* var bool = arr.includes( true );\n* // returns true\n*\n* bool = arr.includes( false, 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tif ( searchElement === Boolean( buf[ i ] ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( true, 3 );\n* arr.set( true, 4 );\n*\n* var idx = arr.indexOf( true );\n* // returns 0\n*\n* idx = arr.indexOf( false, 2 );\n* // returns -1\n*\n* idx = arr.indexOf( false, -3 );\n* // returns -1\n*/\nsetReadOnly( BooleanArray.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tif ( searchElement === Boolean( buf[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.join();\n* // returns 'true,false,true'\n*\n* str = arr.join( '|' );\n* // returns 'true|false|true'\n*/\nsetReadOnly( BooleanArray.prototype, 'join', function join( separator ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isString( separator ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t\t}\n\t} else {\n\t\tseparator = ',';\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( buf[i] ) {\n\t\t\tout.push( 'true' );\n\t\t} else {\n\t\t\tout.push( 'false' );\n\t\t}\n\t}\n\treturn out.join( separator );\n});\n\n/**\n* Returns an iterator for iterating over each index key in a typed array.\n*\n* @name keys\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 2 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n*\n* var iter = arr.keys();\n*\n* var v = iter.next().value;\n* // returns 0\n*\n* v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'keys', function keys() {\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tself = this;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': i,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.keys();\n\t}\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {boolean} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (inclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a boolean value\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( true, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var idx = arr.lastIndexOf( true );\n* // returns 4\n*\n* idx = arr.lastIndexOf( false, 2 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( false, -3 );\n* // returns -1\n*/\nsetReadOnly( BooleanArray.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isBoolean( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a boolean. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tif ( searchElement === Boolean( buf[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof BooleanArray.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( BooleanArray.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} new boolean array\n*\n* @example\n* function invert( v ) {\n*     return !v;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.map( invert );\n* // returns <BooleanArray>\n*\n* var z = out.get( 0 );\n* // returns false\n*\n* z = out.get( 1 );\n* // returns true\n*\n* z = out.get( 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be a function. Value: `%s`.', fcn );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\toutbuf[ i ] = Boolean( fcn.call( thisArg, Boolean( buf[ i ] ), i, this ) );\n\t}\n\treturn out;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduce\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* function reducer( acc, v ) {\n*     if ( v ) {\n*          return acc + 1;\n*     }\n*     return acc;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.reduce( reducer, 0 );\n* // returns 2\n*/\nsetReadOnly( BooleanArray.prototype, 'reduce', function reduce( reducer, initialValue ) {\n\tvar buf;\n\tvar len;\n\tvar acc;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = 0;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = Boolean( buf[ 0 ] );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\tacc = reducer( acc, Boolean( buf[ i ] ), i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n*\n* @name reduceRight\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} reducer - callback function\n* @param {*} [initialValue] - initial value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {Error} if not provided an initial value, the array must have at least one element\n* @returns {*} accumulated result\n*\n* @example\n* function reducer( acc, v ) {\n*     if ( v ) {\n*          return acc + 1;\n*     }\n*     return acc;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.reduceRight( reducer, 0 );\n* // returns 2\n*/\nsetReadOnly( BooleanArray.prototype, 'reduceRight', function reduceRight( reducer, initialValue ) {\n\tvar buf;\n\tvar len;\n\tvar acc;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tacc = initialValue;\n\t\ti = len - 1;\n\t} else {\n\t\tif ( len === 0 ) {\n\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t}\n\t\tacc = Boolean( buf[ len-1 ] );\n\t\ti = len - 2;\n\t}\n\tfor ( ; i >= 0; i-- ) {\n\t\tacc = reducer( acc, Boolean( buf[ i ] ), i, this );\n\t}\n\treturn acc;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} reversed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n*\n* var out = arr.reverse();\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*\n* v = out.get( 1 );\n* // returns false\n*\n* v = out.get( 2 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ i ];\n\t\tbuf[ i ] = buf[ j ];\n\t\tbuf[ j ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n*\n* @name set\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {(Collection|BooleanArray|*)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var arr = new BooleanArray( 10 );\n*\n* var v = arr.get( 0 );\n* // returns false\n*\n* arr.set( [ true, false ], 0 );\n*\n* v = arr.get( 0 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'set', function set( value ) {\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isCollection( value ) ) {\n\t\tN = value.length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tif ( isBooleanArray( value ) ) {\n\t\t\tsbuf = value._buffer; // eslint-disable-line no-underscore-dangle\n\t\t} else {\n\t\t\tsbuf = value;\n\t\t}\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Uint8Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ]; // TODO: handle accessor arrays\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tfor ( i = 0; i < N; idx++, i++ ) {\n\t\t\tbuf[ idx ] = ( sbuf[ i ] ) ? 1 : 0;\n\t\t}\n\t\treturn;\n\t}\n\tif ( idx >= this._length ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t}\n\tbuf[ idx ] = ( value ) ? 1 : 0;\n});\n\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} [begin] - start index (inclusive)\n* @param {integer} [end] - end index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be integer\n* @throws {TypeError} second argument must be integer\n* @returns {BooleanArray} boolean array\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var out = arr.slice();\n* // returns <BooleanArray>\n*\n* var len = out.length;\n* // returns 5\n*\n* var bool = out.get( 0 );\n* // returns true\n*\n* bool = out.get( len-1 );\n* // returns true\n*\n* out = arr.slice( 1, -2 );\n* // returns <BooleanArray>\n*\n* len = out.length;\n* // returns 2\n*\n* bool = out.get( 0 );\n* // returns false\n*\n* bool = out.get( len-1 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'slice', function slice( begin, end ) {\n\tvar outlen;\n\tvar outbuf;\n\tvar out;\n\tvar buf;\n\tvar len;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin < end ) {\n\t\toutlen = end - begin;\n\t} else {\n\t\toutlen = 0;\n\t}\n\tout = new this.constructor( outlen );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < outlen; i++ ) {\n\t\toutbuf[ i ] = buf[ i+begin ];\n\t}\n\treturn out;\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function predicate( v ) {\n*     return v === true;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( false, 0 );\n* arr.set( true, 1 );\n* arr.set( false, 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, Boolean( buf[ i ] ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Sorts an array in-place.\n*\n* @name sort\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} [compareFcn] - comparison function\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} sorted array\n*\n* @example\n* function compare( a, b ) {\n*    if ( a === false ) {\n*        if ( b === false ) {\n*            return 0;\n*        }\n*        return 1;\n*    }\n*    if ( b === true ) {\n*        return 0;\n*    }\n*    return -1;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* arr.sort( compare );\n*\n* var v = arr.get( 0 );\n* // returns true\n*\n* v = arr.get( 1 );\n* // returns true\n*\n* v = arr.get( 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'sort', function sort( compareFcn ) {\n\tvar buf;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length === 0 ) {\n\t\tbuf.sort();\n\t\treturn this;\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\tbuf.sort( compare );\n\treturn this;\n\n\t/**\n\t* Comparison function for sorting.\n\t*\n\t* @private\n\t* @param {boolean} a - first boolean value for comparison\n\t* @param {boolean} b - second boolean value for comparison\n\t* @returns {number} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn compareFcn( Boolean( a ), Boolean( b ) );\n\t}\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} [begin] - start index (inclusive)\n* @param {integer} [end] - end index (exclusive)\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {BooleanArray} subarray\n*\n* @example\n* var arr = new BooleanArray( 5 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n* arr.set( false, 3 );\n* arr.set( true, 4 );\n*\n* var subarr = arr.subarray();\n* // returns <BooleanArray>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var bool = subarr.get( 0 );\n* // returns true\n*\n* bool = subarr.get( len-1 );\n* // returns true\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <BooleanArray>\n*\n* len = subarr.length;\n* // returns 2\n*\n* bool = subarr.get( 0 );\n* // returns false\n*\n* bool = subarr.get( len-1 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Serializes an array as a locale-specific string.\n*\n* @name toLocaleString\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {(string|Array<string>)} [locales] - locale identifier(s)\n* @param {Object} [options] - configuration options\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a string or an array of strings\n* @throws {TypeError} options argument must be an object\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.toLocaleString();\n* // returns 'true,false,true'\n*/\nsetReadOnly( BooleanArray.prototype, 'toLocaleString', function toLocaleString( locales, options ) {\n\tvar opts;\n\tvar loc;\n\tvar out;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tloc = [];\n\t} else if ( isString( locales ) || isStringArray( locales ) ) {\n\t\tloc = locales;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\topts = {};\n\t} else if ( isObject( options ) ) {\n\t\topts = options;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( Boolean( buf[ i ] ).toLocaleString( loc, opts ) );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {BooleanArray} reversed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( false, 2 );\n*\n* var out = arr.toReversed();\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*\n* v = out.get( 1 );\n* // returns false\n*\n* v = out.get( 2 );\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'toReversed', function toReversed() {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\toutbuf[ i ] = buf[ len - i - 1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Returns a new typed array containing the elements in sorted order.\n*\n* @name toSorted\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {Function} [compareFcn] - comparison function\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be a function\n* @returns {BooleanArray} sorted array\n*\n* @example\n* function compare( a, b ) {\n*    if ( a === false ) {\n*        if ( b === false ) {\n*            return 0;\n*        }\n*        return 1;\n*    }\n*    if ( b === true ) {\n*        return 0;\n*    }\n*    return -1;\n* }\n*\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.sort( compare );\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns true\n*\n* v = out.get( 1 );\n* // returns true\n*\n* v = out.get( 2 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'toSorted', function toSorted( compareFcn ) {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\toutbuf[ i ] = buf[ i ];\n\t}\n\tif ( arguments.length === 0 ) {\n\t\toutbuf.sort();\n\t\treturn out;\n\t}\n\tif ( !isFunction( compareFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFcn ) );\n\t}\n\toutbuf.sort( compare );\n\treturn out;\n\n\t/**\n\t* Comparison function for sorting.\n\t*\n\t* @private\n\t* @param {boolean} a - first boolean value for comparison\n\t* @param {boolean} b - second boolean value for comparison\n\t* @returns {number} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn compareFcn( Boolean( a ), Boolean( b ) );\n\t}\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {string} string representation\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var str = arr.toString();\n* // returns 'true,false,true'\n*/\nsetReadOnly( BooleanArray.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( buf[i] ) {\n\t\t\tout.push( 'true' );\n\t\t} else {\n\t\t\tout.push( 'false' );\n\t\t}\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns an iterator for iterating over each value in a typed array.\n*\n* @name values\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a boolean array\n* @returns {Iterator} iterator\n*\n* @example\n* var arr = new BooleanArray( 2 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n*\n* var iter = arr.values();\n*\n* var v = iter.next().value;\n* // returns true\n*\n* v = iter.next().value;\n* // returns false\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nsetReadOnly( BooleanArray.prototype, 'values', function values() {\n\tvar iter;\n\tvar self;\n\tvar len;\n\tvar FLG;\n\tvar buf;\n\tvar i;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tself = this;\n\tbuf = this._buffer;\n\tlen = this._length;\n\n\t// Initialize an iteration index:\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': Boolean( buf[ i ] ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.values();\n\t}\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof BooleanArray.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {boolean} value - new value\n* @throws {TypeError} `this` must be a boolean array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a boolean\n* @returns {BooleanArray} new typed array\n*\n* @example\n* var arr = new BooleanArray( 3 );\n*\n* arr.set( true, 0 );\n* arr.set( false, 1 );\n* arr.set( true, 2 );\n*\n* var out = arr.with( 0, false );\n* // returns <BooleanArray>\n*\n* var v = out.get( 0 );\n* // returns false\n*/\nsetReadOnly( BooleanArray.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\n\tif ( !isBooleanArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a boolean array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isBoolean( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tif ( value ) {\n\t\tbuf[ index ] = 1;\n\t} else {\n\t\tbuf[ index ] = 0;\n\t}\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default BooleanArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Boolean from '@stdlib/boolean/ctor';\n\n\n// MAIN //\n\n/**\n* Fills an output array with \"boolean\" values.\n*\n* @private\n* @param {Uint8Array} buf - output array\n* @param {Array} arr - input array\n* @returns {Uint8Array} output array\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar i;\n\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tbuf[ i ] = Boolean( arr[ i ] );\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Boolean from '@stdlib/boolean/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {Array} output array\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tout.push( Boolean( clbk.call( thisArg, v.value, i ) ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Uint32Array from './../../uint32';\nimport Int32Array from './../../int32';\nimport Uint16Array from './../../uint16';\nimport Int16Array from './../../int16';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Int8Array from './../../int8';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\nimport BooleanArray from './../../bool';\n\n\n// MAIN //\n\n// Note: order should match `dtypes` order\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray,\n\tComplex64Array,\n\tComplex128Array,\n\tBooleanArray\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Note: order should match `ctors` order\nvar DTYPES = [\n\t'float64',\n\t'float32',\n\t'int32',\n\t'uint32',\n\t'int16',\n\t'uint16',\n\t'int8',\n\t'uint8',\n\t'uint8c',\n\t'complex64',\n\t'complex128',\n\t'bool'\n];\n\n\n// EXPORTS //\n\nexport default DTYPES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport isArray from '@stdlib/assert/is-array';\nimport constructorName from '@stdlib/utils/constructor-name';\nimport ctor2dtype from './ctor2dtype.js';\nimport CTORS from './ctors.js';\nimport DTYPES from './dtypes.js';\n\n\n// VARIABLES //\n\nvar NTYPES = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Returns the data type of an array.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/\nfunction dtype( value ) {\n\tvar i;\n\tif ( isArray( value ) ) {\n\t\treturn 'generic';\n\t}\n\tif ( isBuffer( value ) ) {\n\t\treturn null;\n\t}\n\tfor ( i = 0; i < NTYPES; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn DTYPES[ i ];\n\t\t}\n\t}\n\t// If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n\treturn ctor2dtype[ constructorName( value ) ] || null;\n}\n\n\n// EXPORTS //\n\nexport default dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from './../../../base/assert/is-accessor-array';\nimport accessorGetter from './../../../base/accessor-getter';\nimport getter from './../../../base/getter';\nimport dtype from './../../../dtype';\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an array-like object.\n*\n* @param {Collection} x - input array\n* @returns {Function} accessor\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = resolveGetter( arr );\n* var v = get( arr, 2 );\n* // returns 3\n*/\nfunction resolveGetter( x ) {\n\tvar dt = dtype( x );\n\tif ( isAccessorArray( x ) ) {\n\t\treturn accessorGetter( dt );\n\t}\n\treturn getter( dt );\n}\n\n\n// EXPORTS //\n\nexport default resolveGetter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport returnValues from '@stdlib/array/base/bifurcate-values';\nimport returnIndices from '@stdlib/array/base/bifurcate-indices';\nimport returnPairs from '@stdlib/array/base/bifurcate-entries';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Collection} filter - collection indicating which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a collection\n* @throws {RangeError} first and last arguments must be the same length\n* @returns {(Array|ArrayArray)} results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcate( arr, filter );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcate( collection, options, filter ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tf = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = filter;\n\t}\n\tif ( !isCollection( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a collection. Value: `%s`.', f ) );\n\t}\n\tif ( collection.length !== f.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and last arguments must be the same length.' );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, f );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, f );\n\t}\n\treturn returnPairs( collection, f );\n}\n\n\n// EXPORTS //\n\nexport default bifurcate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits array element values into two groups.\n*\n* @param {Collection} x - input array\n* @param {Collection} filter - array indicating which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {ArrayArray} results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcateValues( x, filter );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateValues( x, filter ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( filter.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( filter );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( filter, i );\n\t\tif ( g ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits array element indices into two groups.\n*\n* @param {Collection} x - input array\n* @param {Collection} filter - array indicating which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {ArrayArray} results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcateIndices( x, filter );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\nfunction bifurcateIndices( x, filter ) {\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( filter.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve accessors for retrieving array elements:\n\tgget = resolveGetter( filter );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = gget( filter, i );\n\t\tif ( g ) {\n\t\t\tout[ 0 ].push( i );\n\t\t} else {\n\t\t\tout[ 1 ].push( i );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIndices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits array element entries into two groups.\n*\n* @param {Collection} x - input array\n* @param {Collection} filter - array indicating which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {ArrayArray} results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcateEntries( x, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateEntries( x, filter ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( filter.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( filter );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( filter, i );\n\t\tif ( g ) {\n\t\t\tout[ 0 ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ i, v ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnIndices from './return_indices.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} predicate - predicate function indicating which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, predicate );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n* var out = bifurcateBy( arr, opts, predicate );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = bifurcateBy( arr, opts, predicate );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateBy( collection, options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = predicate;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, opts, cb );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, opts, cb );\n\t}\n\treturn returnPairs( collection, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the predicate function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input collection belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, {}, predicate );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateBy( collection, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tbool = predicate.call( thisArg, v, i );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as element indices.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, {}, predicate );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\nfunction bifurcateBy( collection, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar len;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tbool = predicate.call( thisArg, collection[ i ], i );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( i );\n\t\t} else {\n\t\t\tout[ 1 ].push( i );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as index-element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the predicate function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input collection belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateBy( arr, {}, predicate );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateBy( collection, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tbool = predicate.call( thisArg, v, i );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ i, v ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Splits an object's own and inherited property values into two groups according to a predicate function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = bifurcateIn( obj, opts, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = bifurcateIn( obj, opts, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateIn( obj, options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = predicate;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, {}, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateIn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tflg = false;\n\t\tv = obj[ key ];\n\t\tbool = predicate.call( thisArg, v, key );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function specifying which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, {}, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*/\nfunction bifurcateIn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tflg = false;\n\t\tbool = predicate.call( thisArg, obj[ key ], key );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( key );\n\t\t} else {\n\t\t\tout[ 1 ].push( key );\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = bifurcateIn( obj, {}, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateIn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tflg = false;\n\t\tv = obj[ key ];\n\t\tbool = predicate.call( thisArg, v, key );\n\t\tif ( bool ) {\n\t\t\tout[ 0 ].push( [ key, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ key, v ] );\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Splits an object's own property values into two groups according to a predicate function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = bifurcateOwn( obj, opts, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': '*'\n* };\n* var out = bifurcateOwn( obj, opts, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateOwn( obj, options, predicate ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = predicate;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, {}, predicate );\n* // e.g., returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateOwn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tflg = false;\n\t\t\tv = obj[ key ];\n\t\t\tbool = predicate.call( thisArg, v, key );\n\t\t\tif ( bool ) {\n\t\t\t\tout[ 0 ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( v );\n\t\t\t}\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function specifying which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, {}, predicate );\n* // e.g., returns [ [ 'a', 'b', 'd' ], [ 'c' ] ]\n*/\nfunction bifurcateOwn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tflg = false;\n\t\t\tbool = predicate.call( thisArg, obj[ key ], key );\n\t\t\tif ( bool ) {\n\t\t\t\tout[ 0 ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( key );\n\t\t\t}\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Splits values into two groups according to a predicate function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the predicate function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} predicate - predicate function indicating which group an element in the input object belongs to\n* @returns {(Array<Array>|Array)} results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = bifurcateOwn( obj, {}, predicate );\n* // e.g., returns [ [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], [ [ 'c', 'foo' ] ] ]\n*/\nfunction bifurcateOwn( obj, opts, predicate ) {\n\tvar thisArg;\n\tvar bool;\n\tvar out;\n\tvar key;\n\tvar flg;\n\tvar v;\n\n\tthisArg = opts.thisArg;\n\tout = [ [], [] ];\n\tflg = true;\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tflg = false;\n\t\t\tv = obj[ key ];\n\t\t\tbool = predicate.call( thisArg, v, key );\n\t\t\tif ( bool ) {\n\t\t\t\tout[ 0 ].push( [ key, v ] );\n\t\t\t} else {\n\t\t\t\tout[ 1 ].push( [ key, v ] );\n\t\t\t}\n\t\t}\n\t}\n\tif ( flg ) {\n\t\tout.length = 0;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts the first letter of each object key to uppercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'aa': 1,\n*     'bb': 2\n* };\n*\n* var obj2 = capitalizeKeys( obj1 );\n* // returns { 'Aa': 1, 'Bb': 2 }\n*/\nfunction capitalizeKeys( obj ) {\n\tvar out;\n\tvar key;\n\tvar k;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tif ( key === '' ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t} else {\n\t\t\t\tk = key.charAt( 0 ).toUpperCase() + key.slice( 1 );\n\t\t\t\tout[ k ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default capitalizeKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns the common own property names of two or more objects.\n*\n* @param {*} obj1 - first object\n* @param {*} obj2 - second object\n* @param {...*} [obj] - additional objects\n* @throws {Error} must provide at least two objects\n* @returns {(StringArray|EmptyArray)} common keys\n*\n* @example\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var keys = commonKeys( obj, obj2 );\n* // returns [ 'a', 'b' ]\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj3 = {\n*     'a': 1,\n* };\n*\n* var keys = commonKeys( obj1, obj2, obj3 );\n* // returns [ 'a' ]\n*/\nfunction commonKeys() {\n\tvar nargs;\n\tvar keys;\n\tvar arg;\n\tvar ptr;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tnargs = arguments.length;\n\tif ( nargs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least two objects.' );\n\t}\n\tkeys = objectKeys( arguments[ 0 ] );\n\tN = keys.length;\n\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\targ = arguments[ i ];\n\t\tptr = 0;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( hasOwnProp( arg, keys[ j ] ) ) {\n\t\t\t\tkeys[ ptr ] = keys[ j ];\n\t\t\t\tptr += 1;\n\t\t\t}\n\t\t}\n\t\tN = ptr;\n\t}\n\tkeys.length = N;\n\treturn keys;\n}\n\n\n// EXPORTS //\n\nexport default commonKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property names.\n*\n* @param {ObjectLike} obj - input object\n* @returns {Array} key array\n*\n* @example\n* function Foo() {\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var keys = keysIn( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keysIn( obj ) {\n\tvar out;\n\tvar key;\n\n\tout = [];\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tout.push( key );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keysIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keysIn from './../../keys-in';\nimport hasProp from '@stdlib/assert/has-property';\n\n\n// MAIN //\n\n/**\n* Returns the common own and inherited property names of two or more objects.\n*\n* @param {*} obj1 - first object\n* @param {*} obj2 - second object\n* @param {...*} [obj] - additional objects\n* @throws {Error} must provide at least two objects\n* @returns {(StringArray|EmptyArray)} common keys\n*\n* @example\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var keys = commonKeysIn( obj, obj2 );\n* // returns [ 'a', 'b' ]\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3\n* };\n*\n* var obj2 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj3 = {\n*     'a': 1,\n* };\n*\n* var keys = commonKeysIn( obj1, obj2, obj3 );\n* // returns [ 'a' ]\n*/\nfunction commonKeysIn() {\n\tvar nargs;\n\tvar keys;\n\tvar arg;\n\tvar ptr;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tnargs = arguments.length;\n\tif ( nargs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least two objects.' );\n\t}\n\tkeys = keysIn( arguments[ 0 ] );\n\tN = keys.length;\n\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\targ = arguments[ i ];\n\t\tptr = 0;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( hasProp( arg, keys[ j ] ) ) {\n\t\t\t\tkeys[ ptr ] = keys[ j ];\n\t\t\t\tptr += 1;\n\t\t\t}\n\t\t}\n\t\tN = ptr;\n\t}\n\tkeys.length = N;\n\treturn keys;\n}\n\n\n// EXPORTS //\n\nexport default commonKeysIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property, either own or inherited.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasProp( value, property ) {\n\tif ( value === void 0 || value === null ) {\n\t\treturn false;\n\t}\n\tif ( typeof property === 'symbol' ) {\n\t\treturn property in Object( value );\n\t}\n\treturn ( String( property ) in Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default hasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function composition.\n*\n* @param {...Function} f - functions to compose\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} composite function\n*\n* @example\n* function a( x ) {\n*     return 2 * x;\n* }\n*\n* function b( x ) {\n*     return x + 3;\n* }\n*\n* function c( x ) {\n*     return x / 5;\n* }\n*\n* var f = compose( c, b, a );\n*\n* var z = f( 6 );\n* // returns 3\n*/\nfunction compose() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to compose.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn composite;\n\n\t/**\n\t* Composite function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} result\n\t*/\n\tfunction composite() {\n\t\tvar args;\n\t\tvar i;\n\t\targs = new Array( arguments.length );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\targs = f[ nFuncs-1 ].apply( null, args );\n\t\tfor ( i = nFuncs-2; i >= 0; i-- ) {\n\t\t\targs = f[ i ]( args );\n\t\t}\n\t\treturn args;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default compose;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Creates a function which always returns the same value.\n*\n* @param {*} [value] - value to always return\n* @returns {Function} constant function\n*\n* @example\n* var fcn = wrap( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\nfunction wrap( value ) {\n\treturn constantFunction;\n\n\t/**\n\t* Constant function.\n\t*\n\t* @private\n\t* @returns {*} constant value\n\t*/\n\tfunction constantFunction() {\n\t\treturn value;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression that matches an extended-length path.\n*\n* @returns {RegExp} regular expression\n*/\nfunction reExtendedLengthPath() {\n\treturn /^\\\\\\\\\\?\\\\.+/;\n}\n\n\n// EXPORTS //\n\nexport default reExtendedLengthPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to test if a string is an extended-length path.\n*\n* @module @stdlib/regexp/extended-length-path\n*\n* @example\n* import reExtendedLengthPath from '@stdlib/regexp/extended-length-path';\n* var RE_EXTENDED_LENGTH_PATH = reExtendedLengthPath();\n*\n* var bool = RE_EXTENDED_LENGTH_PATH.test( '\\\\\\\\?\\\\C:\\\\foo\\\\bar' );\n* // returns true\n*\n* bool = RE_EXTENDED_LENGTH_PATH.test( 'C:\\\\foo\\\\bar' );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n\n\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\nfunction rescape( str ) {\n\tvar len;\n\tvar s;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Check if the string starts with a forward slash...\n\tif ( str[ 0 ] === '/' ) {\n\t\t// Find the last forward slash...\n\t\tlen = str.length;\n\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\tif ( str[ i ] === '/' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\tif ( i === void 0 || i <= 0 ) {\n\t\treturn str.replace( RE_CHARS, '\\\\$&' );\n\t}\n\t// We need to de-construct the string...\n\ts = str.substring( 1, i );\n\n\t// Only escape the characters between the `/`:\n\ts = s.replace( RE_CHARS, '\\\\$&' );\n\n\t// Reassemble:\n\tstr = str[ 0 ] + s + str.substring( i );\n\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar exec = RegExp.prototype.exec; // non-generic\n\n\n// EXPORTS //\n\nexport default exec;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport test from './try2exec.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a regular expression.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a regular expression\n*\n* @example\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* @example\n* var bool = isRegExp( {} );\n* // returns false\n*/\nfunction isRegExp( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof RegExp ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object RegExp]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport exec from './exec.js';\n\n\n// MAIN //\n\n/**\n* Attempts to call a `RegExp` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `RegExp` method\n*/\nfunction test( value ) {\n\ttry {\n\t\texec.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Replaces search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {RegExp} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* import capitalize from '@stdlib/string/base/capitalize';\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer );\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\nfunction replace( str, search, newval ) {\n\treturn str.replace( search, newval );\n}\n\n\n// EXPORTS //\n\nexport default replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport rescape from '@stdlib/utils/escape-regexp-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isRegExp from '@stdlib/assert/is-regexp';\nimport format from './../../format';\nimport base from './../../base/replace';\n\n\n// MAIN //\n\n/**\n* Replaces search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {(string|RegExp)} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument argument must be a string or regular expression\n* @throws {TypeError} third argument must be a string or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* import capitalize from '@stdlib/string/capitalize';\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer );\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\nfunction replace( str, search, newval ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( isString( search ) ) {\n\t\tsearch = new RegExp( rescape( search ), 'g' );\n\t} else if ( !isRegExp( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string or regular expression. Value: `%s`.', search ) );\n\t}\n\tif ( !isString( newval ) && !isFunction( newval ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string or replacement function. Value: `%s`.', newval ) );\n\t}\n\treturn base( str, search, newval );\n}\n\n\n// EXPORTS //\n\nexport default replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport reExtendedLengthPath from '@stdlib/regexp/extended-length-path';\nimport lowercase from '@stdlib/string/base/lowercase';\nimport replace from '@stdlib/string/replace';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar RE_WIN_DEVICE_ROOT = /^([A-Za-z]):[\\\\\\/]+/; // eslint-disable-line no-useless-escape\nvar RE_POSIX_DEVICE_ROOT =/^\\/([A-Za-z])\\//;\n\n\n// MAIN //\n\n/**\n* Converts between POSIX and Windows paths.\n*\n* @param {string} from - path to convert\n* @param {string} to - output path convention\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {RangeError} second argument must be a recognized output path convention\n* @throws {Error} cannot convert a Windows extended-length path to a non-Windows path convention\n* @returns {string} converted path\n*\n* @example\n* var p = convertPath( '/c/foo/bar/beep.c', 'win32' );\n* // returns 'c:\\foo\\bar\\beep.c'\n*\n* @example\n* var p = convertPath( '/c/foo/bar/beep.c', 'mixed' );\n* // returns 'c:/foo/bar/beep.c'\n*\n* @example\n* var p = convertPath( 'C:\\\\foo\\\\bar\\\\beep.c', 'posix' );\n* // returns '/c/foo/bar/beep.c'\n*\n* @example\n* var p = convertPath( 'C:\\\\foo\\\\bar\\\\beep.c', 'mixed' );\n* // returns 'C:/foo/bar/beep.c'\n*/\nfunction convertPath( from, to ) {\n\tvar device;\n\tvar parts;\n\tvar out;\n\tif ( !isString( from ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', from ) );\n\t}\n\tif ( !isString( to ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', to ) );\n\t}\n\tif (\n\t\tto !== 'win32' &&\n\t\tto !== 'mixed' &&\n\t\tto !== 'posix'\n\t) {\n\t\tthrow new Error( format( 'invalid argument. Second argument must be a recognized output path convention. Value: `%s`.', to ) );\n\t}\n\tout = from;\n\n\t// Convert to a Windows path convention by transforming a POSIX device root (if present) and using a Windows path separator...\n\tif ( to === 'win32' ) {\n\t\tparts = RE_POSIX_DEVICE_ROOT.exec( out );\n\t\tif ( parts ) {\n\t\t\tdevice = parts[ 1 ]+':\\\\';\n\t\t\tout = replace( out, RE_POSIX_DEVICE_ROOT, device );\n\t\t}\n\t\treturn replace( out, '/', '\\\\' );\n\t}\n\t// Check for Windows extended-length paths...\n\tif ( reExtendedLengthPath.REGEXP.test( from ) ) {\n\t\tthrow new Error( format( 'invalid argument. Cannot convert Windows extended-length paths to POSIX paths. Value: `%s`.', from ) );\n\t}\n\t// Convert to a mixed path convention by combining a Windows drive letter convention with a POSIX path separator...\n\tif ( to === 'mixed' ) {\n\t\tparts = RE_POSIX_DEVICE_ROOT.exec( out );\n\t\tif ( parts ) {\n\t\t\tdevice = parts[ 1 ]+':/';\n\t\t\tout = replace( out, RE_POSIX_DEVICE_ROOT, device );\n\t\t} else {\n\t\t\tparts = RE_WIN_DEVICE_ROOT.exec( out );\n\t\t\tif ( parts ) {\n\t\t\t\tdevice = parts[ 1 ]+':/';\n\t\t\t\tout = replace( out, RE_WIN_DEVICE_ROOT, device );\n\t\t\t}\n\t\t}\n\t\treturn replace( out, '\\\\', '/' );\n\t}\n\t// Convert to a POSIX path convention by transforming a Windows device root (if present) and using a POSIX path separator...\n\tparts = RE_WIN_DEVICE_ROOT.exec( out );\n\tif ( parts ) {\n\t\tdevice = '/'+lowercase( parts[ 1 ] )+'/';\n\t\tout = replace( out, RE_WIN_DEVICE_ROOT, device );\n\t}\n\treturn replace( out, '\\\\', '/' );\n}\n\n\n// EXPORTS //\n\nexport default convertPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts a string to lowercase.\n*\n* @param {string} str - string to convert\n* @returns {string} lowercase string\n*\n* @example\n* var str = lowercase( 'bEEp' );\n* // returns 'beep'\n*/\nfunction lowercase( str ) {\n\treturn str.toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default lowercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an `Error` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `Error` object\n*\n* @example\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isError( {} );\n* // returns false\n*/\nfunction isError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof Error ) {\n\t\treturn true;\n\t}\n\t// Walk the prototype tree until we find an object having the desired native class...\n\twhile ( value ) {\n\t\tif ( nativeClass( value ) === '[object Error]' ) {\n\t\t\treturn true;\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a regular expression string.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*/\nfunction reRegExp() {\n\treturn /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nexport default reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport reRegExp from '@stdlib/regexp/regexp';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Parses a regular expression string and returns a new regular expression.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} must provide a regular expression string\n* @returns {(RegExp|null)} regular expression or null\n*\n* @example\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\nfunction reFromString( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = reRegExp().exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n}\n\n\n// EXPORTS //\n\nexport default reFromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a regular expression string.\n*\n* @module @stdlib/regexp/regexp\n*\n* @example\n* import reRegExp from '@stdlib/regexp/regexp';\n*\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*\n* @example\n* import reRegExp from '@stdlib/regexp/regexp';\n*\n* var RE_REGEXP = reRegExp();\n*\n* var parts = RE_REGEXP.exec( '/^.*$/ig' );\n* // returns [ '/^.*$/ig', '^.*$', 'ig', 'index': 0, 'input': '/^.*$/ig' ]\n*/\n\n// MAIN //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyNames !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\n\n\n// VARIABLES //\n\nvar propertyNames = Object.getOwnPropertyNames;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn propertyNames( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable and non-enumerable property names.\n*\n* @module @stdlib/utils/property-names\n*\n* @example\n* import getOwnPropertyNames from '@stdlib/utils/property-names';\n*\n* var keys = getOwnPropertyNames({\n*   'foo': 'bar',\n*   'beep': 'boop'\n* });\n* // e.g., returns [ 'foo', 'beep' ]\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\nimport keys from './../../keys';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n* -   In environments lacking support for `Object.getOwnPropertyNames()`, property descriptors are unavailable, and thus all properties can be safely assumed to be enumerable. Hence, we can defer to calling `Object.keys`, which retrieves all own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptor !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tvar desc;\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\tdesc = propertyDescriptor( value, property );\n\treturn ( desc === void 0 ) ? null : desc;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a property descriptor for an object's own property.\n*\n* @module @stdlib/utils/property-descriptor\n*\n* @example\n* import getOwnPropertyDescriptor from '@stdlib/utils/property-descriptor';\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':'bar'}\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n* -   In environments lacking `Object.getOwnPropertyDescriptor()` support, property descriptors do not exist. In non-supporting environment, if an object has a provided property, this function returns a descriptor object equivalent to that returned in a supporting environment; otherwise, the function returns `null`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tif ( hasOwnProp( value, property ) ) {\n\t\treturn {\n\t\t\t'configurable': true,\n\t\t\t'enumerable': true,\n\t\t\t'writable': true,\n\t\t\t'value': value[ property ]\n\t\t};\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport Object from '@stdlib/object/ctor';\nimport getProto from './proto.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\nimport getProto from './detect.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Buffer === 'function' ) ? Buffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Buffer constructor.\n*\n* @module @stdlib/buffer/ctor\n*\n* @example\n* import ctor from '@stdlib/buffer/ctor';\n*\n* var b = new ctor( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nimport hasNodeBufferSupport from '@stdlib/assert/has-node-buffer-support';\nimport main from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasNodeBufferSupport() ) {\n\tctor = main;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = require( 'buffer' ).Buffer; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from './../../is-buffer';\nimport GlobalBuffer from './buffer.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Buffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Buffer` support\n*\n* @example\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\nfunction hasNodeBufferSupport() {\n\tvar bool;\n\tvar b;\n\n\tif ( typeof GlobalBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tif ( typeof GlobalBuffer.from === 'function' ) {\n\t\t\tb = GlobalBuffer.from( [ 1, 2, 3, 4 ] );\n\t\t} else {\n\t\t\tb = new GlobalBuffer( [ 1, 2, 3, 4 ] ); // Note: this is deprecated behavior starting in Node v6 (see https://nodejs.org/api/buffer.html#buffer_new_buffer_array)\n\t\t}\n\t\tbool = (\n\t\t\tisBuffer( b ) &&\n\t\t\tb[ 0 ] === 1 &&\n\t\t\tb[ 1 ] === 2 &&\n\t\t\tb[ 2 ] === 3 &&\n\t\t\tb[ 3 ] === 4\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write (browser) polyfill\n\n// MAIN //\n\n/**\n* Buffer constructor.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy buffer data to a new `Buffer` instance.\n*\n* @module @stdlib/buffer/from-buffer\n*\n* @example\n* import fromArray from '@stdlib/buffer/from-array';\n* import copyBuffer from '@stdlib/buffer/from-buffer';\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = copyBuffer( b1 );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nimport hasFrom from './has_from.js';\nimport main from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar copyBuffer;\nif ( hasFrom ) {\n\tcopyBuffer = main;\n} else {\n\tcopyBuffer = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default copyBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport Buffer from './../../ctor';\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.from );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport format from '@stdlib/string/format';\nimport Buffer from './../../ctor';\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* import fromArray from '@stdlib/buffer/from-array';\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a Buffer. Value: `%s`.', buffer ) );\n\t}\n\treturn Buffer.from( buffer );\n}\n\n\n// EXPORTS //\n\nexport default fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport format from '@stdlib/string/format';\nimport Buffer from './../../ctor';\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* import fromArray from '@stdlib/buffer/from-array';\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a Buffer. Value: `%s`.', buffer ) );\n\t}\n\treturn new Buffer( buffer ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\n\nexport default fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array/int8';\nimport Uint8Array from '@stdlib/array/uint8';\nimport Uint8ClampedArray from '@stdlib/array/uint8c';\nimport Int16Array from '@stdlib/array/int16';\nimport Uint16Array from '@stdlib/array/uint16';\nimport Int32Array from '@stdlib/array/int32';\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float32Array from '@stdlib/array/float32';\nimport Float64Array from '@stdlib/array/float64';\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nexport default hash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArray from '@stdlib/assert/is-array';\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport isError from '@stdlib/assert/is-error';\nimport typeOf from './../../type-of';\nimport regexp from './../../regexp-from-string';\nimport indexOf from './../../index-of';\nimport objectKeys from './../../keys';\nimport propertyNames from './../../property-names';\nimport propertyDescriptor from './../../property-descriptor';\nimport getPrototypeOf from './../../get-prototype-of';\nimport defineProperty from './../../define-property';\nimport copyBuffer from '@stdlib/buffer/from-buffer';\nimport typedArrays from './typed_arrays.js';\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nexport default deepCopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport deepCopy from './deep_copy.js';\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', level ) );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nexport default copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and returns group counts.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} counts\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = countBy( arr, indicator );\n* // returns { 'b': 3, 'f': 1 }\n*/\nfunction countBy( collection, options, indicator ) {\n\tvar thisArg;\n\tvar opts;\n\tvar err;\n\tvar out;\n\tvar len;\n\tvar cb;\n\tvar g;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = cb.call( thisArg, collection[ i ], i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ] += 1;\n\t\t} else {\n\t\t\tout[ g ] = 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default countBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a function into a sequence of functions each accepting a single argument.\n*\n* @param {Function} fcn - function to curry\n* @param {PositiveInteger} [arity=fcn.length] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} first argument must be a function having at least one parameter\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} curry function\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var f = curry( add );\n*\n* var sum = f( 2 )( 3 );\n* // returns 5\n*/\nfunction curry( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t} else {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t\tcontext = arity;\n\t}\n\treturn createCurried( [] );\n\n\t/**\n\t* Returns a curry function.\n\t*\n\t* @private\n\t* @param {Array} args - arguments\n\t* @returns {Function} curry function\n\t*/\n\tfunction createCurried( args ) {\n\t\treturn curried;\n\n\t\t/**\n\t\t* Curry function.\n\t\t*\n\t\t* @private\n\t\t* @param {*} v - curried function parameter\n\t\t* @returns {(Function|*)} partially applied curry function or curried function result\n\t\t*/\n\t\tfunction curried( v ) {\n\t\t\tvar cargs = args.slice();\n\t\t\tcargs.push( v );\n\t\t\tif ( cargs.length < len ) {\n\t\t\t\treturn createCurried( cargs );\n\t\t\t}\n\t\t\treturn fcn.apply( context, cargs );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default curry;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a function into a sequence of functions each accepting a single argument.\n*\n* @param {Function} fcn - function to curry\n* @param {PositiveInteger} [arity=fcn.length] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} first argument must be a function having at least one parameter\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} curry function\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var f = curryRight( add );\n*\n* var sum = f( 2 )( 3 );\n* // returns 5\n*/\nfunction curryRight( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t} else if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t} else {\n\t\tlen = fcn.length;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function having at least one parameter. Value: `%s`.', len ) );\n\t\t}\n\t\tcontext = arity;\n\t}\n\treturn createCurried( [] );\n\n\t/**\n\t* Returns a curry function.\n\t*\n\t* @private\n\t* @param {Array} args - arguments\n\t* @returns {Function} curry function\n\t*/\n\tfunction createCurried( args ) {\n\t\treturn curried;\n\n\t\t/**\n\t\t* Curry function.\n\t\t*\n\t\t* @private\n\t\t* @param {*} v - curried function parameter\n\t\t* @returns {(Function|*)} partially applied curry function or curried function result\n\t\t*/\n\t\tfunction curried( v ) {\n\t\t\tvar cargs = args.slice();\n\t\t\tcargs.unshift( v );\n\t\t\tif ( cargs.length < len ) {\n\t\t\t\treturn createCurried( cargs );\n\t\t\t}\n\t\t\treturn fcn.apply( context, cargs );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default curryRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Applies provided arguments to a function and passes the result to another function.\n*\n* @private\n* @param {Function} fcn - function\n* @param {Array} args - function arguments\n* @param {Function} after - function to invoke with the result of `fcn`\n* @param {*} thisArg - evaluation context for `after`\n* @returns {*} result\n*/\nfunction apply( fcn, args, after, thisArg ) {\n\tvar r1 = fcn.apply( null, args );\n\tvar r2 = after.call( thisArg, r1 );\n\treturn ( r2 === void 0 ) ? r1 : r2;\n}\n\n\n// MAIN //\n\n/**\n* Decorates a provided function such that the function's return value is provided as an argument to another function.\n*\n* @param {Function} fcn - function to decorate\n* @param {NonNegativeInteger} arity - number of parameters\n* @param {Function} after - function to invoke with the result of the decorated function\n* @param {*} [thisArg] - evaluation context for `after`\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a function\n* @returns {Function} decorator\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, 1, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, 1, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*/\nfunction decorateAfter( fcn, arity, after, thisArg ) {\n\tvar fcns;\n\tvar f;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( after ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', after ) );\n\t}\n\t// NOTE: we select a specific signature so that `fcn.length` is preserved, thus matching the definition of a \"decorator\" where the decorator function should be transparent to external clients (i.e., have a matching signature). While more recent JavaScript environments allow `Function.prototype.length` to be configurable, older environments do not and error when attempting to manually specify the value for a function's length. We cap support for matching signature length as signatures with many parameters are likely to be exceedingly rare, especially when used in conjunction with this API...\n\tfcns = [ fN, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 ];\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tif ( arity < fcns.length ) {\n\t\tf = fcns[ arity ];\n\t} else {\n\t\tf = fN;\n\t}\n\treturn f;\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {...*} [args] - arguments\n\t* @returns {*} result\n\t*/\n\tfunction fN() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @returns {*} result\n\t*/\n\tfunction f1( x0 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\t// NOTE: the use of a `for` loop is intentional (both here and below), as JavaScript does not require that only a fixed number of arguments be provided; the number of provided arguments may be more or less than the signature specifies.\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @returns {*} result\n\t*/\n\tfunction f2( x0, x1 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @returns {*} result\n\t*/\n\tfunction f3( x0, x1, x2 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @returns {*} result\n\t*/\n\tfunction f4( x0, x1, x2, x3 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @returns {*} result\n\t*/\n\tfunction f5( x0, x1, x2, x3, x4 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @returns {*} result\n\t*/\n\tfunction f6( x0, x1, x2, x3, x4, x5 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @returns {*} result\n\t*/\n\tfunction f7( x0, x1, x2, x3, x4, x5, x6 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @returns {*} result\n\t*/\n\tfunction f8( x0, x1, x2, x3, x4, x5, x6, x7 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @param {*} x8 - ninth argument\n\t* @returns {*} result\n\t*/\n\tfunction f9( x0, x1, x2, x3, x4, x5, x6, x7, x8 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @param {*} x8 - ninth argument\n\t* @param {*} x9 - tenth argument\n\t* @returns {*} result\n\t*/\n\tfunction f10( x0, x1, x2, x3, x4, x5, x6, x7, x8, x9 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default decorateAfter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a Function object.\n*\n* @name Function\n* @constructor\n* @type {Function}\n* @param {...*} [argNames] - parameters names\n* @param {string} body - function body\n* @returns {Function} function\n*\n* @example\n* var add = new Fcn( 'x', 'y', 'return x + y' );\n*\n* var v = add( 1, 2 );\n* // returns 3\n*/\nvar Fcn = Function; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Fcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// Using `Function#toString` bypasses a value's own `toString` method to provide an extra, but not security proof, precaution to prevent a provided function from impersonating a native function:\nvar fcn2str = Function.prototype.toString;\n\n\n// MAIN //\n\n/**\n* Returns a string representing the source code of a provided function.\n*\n* ## Notes\n*\n* -   If called on built-in functions, functions created by `Function.prototype.bind()`, or other non-JavaScript functions, the function returns a \"native\" function string similar to the following:\n*\n*     ```text\n*     \"function foo() { [native code] }\"\n*     ```\n*\n*     For intrinsic object methods and functions, `foo` is the initial name of the function.\n*\n* -   If called on a function created by the `Function` constructor, the function returns the source code of a synthesized function declaration having the name \"anonymous\" and using the provided parameters and function body.\n*\n* -   Starting in ES2018, the ECMAScript specification requires that the returned string contain the exact same source code as it was declared, including any whitespace and/or comments. If the host is unable to access the source code, the specification requires that the returned string be the native function string.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} string representing function source code\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var str = function2string( add );\n* // e.g., returns 'function add( x, y ) {\\n    return x + y;\\n}'\n*/\nfunction function2string( fcn ) {\n\treturn fcn2str.call( fcn );\n}\n\n\n// EXPORTS //\n\nexport default function2string;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Fcn from '@stdlib/function/ctor';\nimport function2string from '@stdlib/function/to-string';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_NATIVE_FUNCTION = reNativeFunction();\n* var bool = RE_NATIVE_FUNCTION.test( Date.toString() );\n* // returns true\n*/\nfunction reNativeFunction() {\n\tvar str = '';\n\n\t// Use a native function as a template:\n\tstr += function2string( Fcn );\n\n\t// Escape special RegExp characters:\n\tstr = str.replace( /([.*+?^=!:$(){}|[\\]\\/\\\\])/g, '\\\\$1' ); // eslint-disable-line no-useless-escape\n\n\t// Replace any mentions of `Function` to make template generic and replace `for ...` and additional info provided in other environments, such as Rhino.\n\tstr = str.replace( /Function|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?' );\n\n\t// Bracket the regular expression:\n\tstr = '^' + str + '$';\n\n\t// Create the regular expression:\n\treturn new RegExp( str );\n}\n\n\n// EXPORTS //\n\nexport default reNativeFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reNativeFunction from './main.js';\n\n\n// MAIN //\n\n/**\n* Match a native function.\n*\n* @constant\n* @type {RegExp}\n*/\nvar RE_NATIVE_FUNCTION = reNativeFunction();\n\n\n// EXPORTS //\n\nexport default RE_NATIVE_FUNCTION;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a native function.\n*\n* @module @stdlib/regexp/native-function\n*\n* @example\n* import reNativeFunction from '@stdlib/regexp/native-function';\n*\n* var RE_NATIVE_FUNCTION = reNativeFunction();\n* function isNativeFunction( fcn ) {\n*     return RE_NATIVE_FUNCTION.test( fcn.toString() );\n* }\n*\n* var bool = isNativeFunction( Math.sqrt );\n* // returns true\n*\n* bool = isNativeFunction( Int8Array );\n* // returns true\n*\n* bool = isNativeFunction( Object.prototype.toString );\n* // returns true\n*\n* bool = isNativeFunction( function noop() {} );\n* // returns false\n*/\n\n\n// MAIN //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { REGEXP as reNativeFunction } from '@stdlib/regexp/native-function';\nimport function2string from '@stdlib/function/to-string';\nimport Fcn from '@stdlib/function/ctor';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\n/**\n* Captures everything that is not a right parenthesis immediately after the first left parenthesis.\n*\n* Regular expression: `/^\\s*function[^(]*\\(([^)]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `\\(`\n*     -   Match a left parenthesis `(`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^)]*`\n*     -   Match anything except a right parenthesis `)` zero or more times\n*\n* -   `)`\n*     -   Match a right parenthesis `)`\n*\n* -   `/i`\n*     -   Ignore case\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /^\\s*function[^(]*\\(([^)]*)/i\n*/\nvar RE_PARAMETERS = /^\\s*function[^(]*\\(([^)]*)/i;\n\n\n// MAIN //\n\n/**\n* Decorates a provided function such that the function's return value is provided as an argument to another function.\n*\n* @param {Function} fcn - function to decorate\n* @param {NonNegativeInteger} arity - number of parameters\n* @param {Function} after - function to invoke with the result of the decorated function\n* @param {*} [thisArg] - evaluation context for `after`\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a function\n* @returns {Function} decorator\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, abs.length, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, abs.length, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, abs.length, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*/\nfunction decorateAfter( fcn, arity, after, thisArg ) {\n\tvar params;\n\tvar str;\n\tvar len;\n\tvar f;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tif ( !isFunction( after ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', after ) );\n\t}\n\tstr = function2string( fcn );\n\n\t// Code generation. Start with the function definition for creating the decorator:\n\tf = 'return function make(__$$fcn$$__,__$$after$$__,__$$thisArg$$__){';\n\n\t// Include the \"use strict\" directive:\n\tf += '\"use strict\";';\n\n\t// Generate a list of function parameters:\n\tif ( reNativeFunction.test( str ) ) {\n\t\tparams = [];\n\t\tfor ( i = 0; i < arity; i++ ) {\n\t\t\tparams.push( 'x'+i );\n\t\t}\n\t} else {\n\t\tparams = str.match( RE_PARAMETERS )[ 1 ];\n\t\tif ( params ) {\n\t\t\tparams = params.split( ',' );\n\t\t} else {\n\t\t\tparams = [];\n\t\t}\n\t\tlen = params.length;\n\t\tif ( len < arity ) {\n\t\t\tfor ( i = len; i < arity; i++ ) {\n\t\t\t\tparams.push( '__$$x'+i+'$$__' );\n\t\t\t}\n\t\t} else if ( len > arity ) {\n\t\t\tparams.length = arity;\n\t\t}\n\t}\n\tparams = params.join( ',' );\n\n\t// Create the decorator definition:\n\tf += 'return function decorator(' + params + '){';\n\n\t// Initialize an array for storing provided arguments:\n\tf += 'var __$$args$$__=[];';\n\n\t// Gather provided arguments:\n\tf += 'for (var __$$i$$__=0;__$$i$$__<arguments.length;__$$i$$__++){__$$args$$__.push(arguments[__$$i$$__]);}';\n\n\t// Invoke the decorated function:\n\tf += 'var __$$r1$$__ = __$$fcn$$__.apply(null,__$$args$$__);';\n\n\t// Provide the result to the `after` function:\n\tf += 'var __$$r2$$__ = __$$after$$__.call(__$$thisArg$$__,__$$r1$$__);';\n\n\t// Return the result:\n\tf += 'return (__$$r2$$__ === void 0) ? __$$r1$$__ : __$$r2$$__;';\n\n\t// Close the decorator function:\n\tf += '}';\n\n\t// Close the outer function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=decorateAfter.factory.js';\n\n\t// Create the function the global scope:\n\treturn (new Fcn( f ))()( fcn, after, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default decorateAfter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns a nested property value.\n*\n* @private\n* @param {ObjectLike} obj - input object\n* @param {Array} props - list of properties defining a key path\n* @returns {*} nested property value\n*/\nfunction deepGet( obj, props ) {\n\tvar len = props.length;\n\tvar v = obj;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif (\n\t\t\tisObjectLike( v ) &&\n\t\t\thasOwnProp( v, props[ i ] )\n\t\t) {\n\t\t\tv = v[ props[ i ] ];\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default deepGet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dget from './dget.js';\n\n\n// MAIN //\n\n/**\n* Returns a nested property value.\n*\n* @param {ObjectLike} obj - input object\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {*} nested property value\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, 'a.b.c' );\n* // returns 'd'\n*\n* @example\n* var arr = [\n*     { 'a': [ {'x': 5} ] },\n*     { 'a': [ {'x': 10} ] }\n* ];\n* var val = deepGet( arr, '1.a.0.x' );\n* // returns 10\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, ['a','b','c'] );\n* // returns 'd'\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, 'a/b/c', {\n*     'sep': '/'\n* });\n* // returns 'd'\n*/\nfunction deepGet( obj, path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\treturn;\n\t}\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn dget( obj, props );\n}\n\n\n// EXPORTS //\n\nexport default deepGet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'sep': '.'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dget from './dget.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for retrieving a nested property value.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} deep get function\n*\n* @example\n* var dget = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepGet;\n\n\t/**\n\t* Returns a nested property value.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - input object\n\t* @returns {*} nested property value\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var val = deepGet( obj );\n\t*/\n\tfunction deepGet( obj ) {\n\t\tif ( isObjectLike( obj ) ) {\n\t\t\treturn dget( obj, props );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as deepGet } from './../../deep-get';\nimport isArray from '@stdlib/assert/is-array';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Extracts a nested property value from each element of an object array.\n*\n* @param {Array} arr - source array\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=true] - boolean indicating whether to return a new data structure\n* @param {string} [options.sep=\".\"] - key path separator\n* @throws {TypeError} first argument must be an array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} destination array\n*\n* @example\n* var arr = [\n*     {'a':{'b':{'c':1}}},\n*     {'a':{'b':{'c':2}}}\n* ];\n*\n* var out = deepPluck( arr, 'a.b.c' );\n* // returns [ 1, 2 ]\n*\n* @example\n* var arr = [\n*     {'a':[0,1,2]},\n*     {'a':[3,4,5]}\n* ];\n*\n* var out = deepPluck( arr, ['a',1] );\n* // returns [ 1, 4 ]\n*\n* @example\n* var arr = [\n*     {'a':{'b':{'c':1}}},\n*     {'a':{'b':{'c':2}}}\n* ];\n*\n* var out = deepPluck( arr, 'a.b.c', {'copy':false} );\n* // returns [ 1, 2 ]\n*\n* var bool = ( arr[ 0 ] === out[ 0 ] );\n* // returns true\n*\n* @example\n* var arr = [\n*     {'a':{'b':{'c':1}}},\n*     {'a':{'b':{'c':2}}}\n* ];\n*\n* var out = deepPluck( arr, 'a|b|c', {'sep':'|'} );\n* // returns [ 1, 2 ]\n*/\nfunction deepPluck( arr, path, options ) {\n\tvar dget;\n\tvar opts;\n\tvar out;\n\tvar err;\n\tvar i;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array. Value: `%s`.', arr ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.copy ) {\n\t\tout = new Array( arr.length );\n\t} else {\n\t\tout = arr;\n\t}\n\tdget = deepGet( path, {\n\t\t'sep': opts.sep\n\t});\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tout[ i ] = dget( arr[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default deepPluck;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'copy': true,\n\t\t'sep': '.'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {boolean} [options.copy] - boolean indicating whether to return a new data structure\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'copy': true,\n*     'sep': '-',\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {boolean} [options.create] - boolean indicating whether to create a path if the key path does not already exist\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'create' ) ) {\n\t\topts.create = options.create;\n\t\tif ( !isBoolean( opts.create ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'create', opts.create ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isFunction from '@stdlib/assert/is-function';\n\n\n// MAIN //\n\n/**\n* Sets a nested property.\n*\n* @private\n* @param {ObjectLike} obj - input object\n* @param {Array} props - list of properties defining a key path\n* @param {boolean} create - boolean indicating whether to create a path if the key path does not already exist\n* @param {*} val - value to set\n* @returns {boolean} boolean indicating if the property was successfully set\n*/\nfunction deepSet( obj, props, create, val ) {\n\tvar bool;\n\tvar len;\n\tvar v;\n\tvar p;\n\tvar i;\n\n\tlen = props.length;\n\tbool = false;\n\tv = obj;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tp = props[ i ];\n\t\tif ( isObjectLike( v ) ) {\n\t\t\tif ( !hasOwnProp( v, p ) ) {\n\t\t\t\tif ( create ) {\n\t\t\t\t\tv[ p ] = {};\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( i === len-1 ) {\n\t\t\t\tif ( isFunction( val ) ) {\n\t\t\t\t\tv[ p ] = val( v[ p ] );\n\t\t\t\t} else {\n\t\t\t\t\tv[ p ] = val;\n\t\t\t\t}\n\t\t\t\tbool = true;\n\t\t\t} else {\n\t\t\t\tv = v[ p ];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default deepSet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dset from './dset.js';\n\n\n// MAIN //\n\n/**\n* Sets a nested property value.\n*\n* @param {ObjectLike} obj - input object\n* @param {(string|Array)} path - key path\n* @param {*} value - value to set\n* @param {Options} [options] - function options\n* @param {boolean} [options.create=false] - boolean indicating whether to create a path if the key path does not already exist\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {boolean} boolean indicating if the property was successfully set\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.b.c', 'woot' );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.beep.c', 'boop' );\n* // returns false\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( null, 'a.beep.c', 'boop' );\n* // returns false\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* bool = deepSet( 'bap', 'a.beep.c', 'boop' );\n* // returns false\n*\n* @example\n* var arr = [\n*     { 'a': [ {'x': 5} ] },\n*     { 'a': [ {'x': 10} ] }\n* ];\n* var bool = deepSet( arr, '1.a.0.x', 25 );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a/b/c', 'beep', {\n*     'sep': '/'\n* });\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.e.c', 'boop', {\n*     'create': true\n* });\n* // returns true\n*/\nfunction deepSet( obj, path, value, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\treturn false;\n\t}\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn dset( obj, props, opts.create, value );\n}\n\n\n// EXPORTS //\n\nexport default deepSet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'create': false,\n\t\t'sep': '.'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setConfigurableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setConfigurableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setConfigurableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setConfigurableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* var name = 'bar';\n* var obj = {};\n*\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* setConfigurableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setConfigurableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a configurable write-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} setter - accessor\n*\n* @example\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setConfigurableWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\nfunction setConfigurableWriteOnlyAccessor( obj, prop, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setConfigurableWriteOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines a memoized object property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} desc - property descriptor\n* @param {boolean} [desc.configurable=false] - boolean indicating if the property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [desc.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [desc.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {Function} desc.value - function whose return value will be memoized\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {TypeError} property descriptor `value` property must be a function\n*\n* @example\n* var obj = {};\n*\n* function foo() {\n*     return 'bar';\n* }\n*\n* defineMemoizedProperty( obj, 'foo', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': foo\n* });\n*\n* var v = obj.foo;\n* // returns 'bar'\n*/\nfunction defineMemoizedProperty( obj, prop, desc ) {\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isObject( desc ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', desc ) );\n\t}\n\tif ( !isFunction( desc.value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. The `value` property of the property descriptor must be a function. Value: `%s`.', desc.value ) );\n\t}\n\t// Copy descriptor properties to a new data descriptor object:\n\tdesc = {\n\t\t'configurable': ( desc.configurable === void 0 ) ? false : desc.configurable,\n\t\t'enumerable': ( desc.enumerable === void 0 ) ? false : desc.enumerable,\n\t\t'writable': ( desc.writable === void 0 ) ? false : desc.writable,\n\t\t'value': desc.value\n\t};\n\n\t// Define a configurable (at least temporarily) accessor property:\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': desc.enumerable,\n\t\t'get': getter,\n\t\t'set': ( desc.writable ) ? memoize : void 0\n\t});\n\n\t/**\n\t* Temporary get accessor.\n\t*\n\t* @private\n\t* @returns {*} property value\n\t*/\n\tfunction getter() {\n\t\tvar value = desc.value.call( obj );\n\t\tmemoize( value );\n\t\treturn value;\n\t}\n\n\t/**\n\t* Defines a memoized object property.\n\t*\n\t* @private\n\t* @param {*} value - value to set\n\t*/\n\tfunction memoize( value ) {\n\t\tdesc.value = value;\n\t\tdefineProperty( obj, prop, desc );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default defineMemoizedProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport defineMemoizedProperty from './../../define-memoized-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines a configurable memoized read-only object property.\n*\n* ## Notes\n*\n* -   Configurable read-only properties are **enumerable**.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} fcn - function whose return value will be memoized and set as the property value\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* var obj = {};\n*\n* function foo() {\n*     return 'bar';\n* }\n*\n* setMemoizedConfigurableReadOnly( obj, 'foo', foo );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*/\nfunction setMemoizedConfigurableReadOnly( obj, prop, fcn ) { // eslint-disable-line id-length\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tdefineMemoizedProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': fcn\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setMemoizedConfigurableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport defineMemoizedProperty from './../../define-memoized-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines a memoized read-only object property.\n*\n* ## Notes\n*\n* -   Read-only properties are **enumerable** and **non-configurable**.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} fcn - function whose return value will be memoized and set as the property value\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* var obj = {};\n*\n* function foo() {\n*     return 'bar';\n* }\n*\n* setMemoizedReadOnly( obj, 'foo', foo );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*/\nfunction setMemoizedReadOnly( obj, prop, fcn ) {\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tdefineMemoizedProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': fcn\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setMemoizedReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* import objectKeys from '@stdlib/utils/keys';\n*\n* var obj = {};\n*\n* setNonEnumerableProperty( obj, 'foo', 'bar' );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*\n* var keys = objectKeys( obj );\n* // returns []\n*/\nfunction setNonEnumerableProperty( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setNonEnumerableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable write-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} setter - accessor\n*\n* @example\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setNonEnumerableWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\nfunction setNonEnumerableWriteOnlyAccessor( obj, prop, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableWriteOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Decorate a provided function such that the function's return value is provided as an argument to another function.\n*\n* @module @stdlib/utils/decorate-after\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, 1, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, 1, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import decorateAfter from '@stdlib/utils/decorate-after';\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter.factory( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Get a nested property value.\n*\n* @module @stdlib/utils/deep-get\n*\n* @example\n* import deepGet from '@stdlib/utils/deep-get';\n*\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* var val = deepGet( obj, 'a.b.c' );\n* // returns 'd'\n*\n* var dget = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*\n* obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* val = dget( obj );\n* // returns 'd'\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set a nested property value.\n*\n* @module @stdlib/utils/deep-set\n*\n* @example\n* import deepSet from '@stdlib/utils/deep-set';\n*\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepSet( obj, 'a.b.c', 'beep' );\n* // returns true\n*\n* var dset = deepSet.factory( 'a/b/c', {\n*     'create': true,\n*     'sep': '/'\n* });\n*\n* obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* bool = dset( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArray from '@stdlib/assert/is-array';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport dset from './dset.js';\n\n\n// MAIN //\n\n/**\n* Creates a reusable deep set function.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {boolean} [options.create=false] - boolean indicating whether to create a path if the key path does not already exist\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} deep set function\n*\n* @example\n* var dset = factory( 'a/b/c', {\n*     'create': true,\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepSet;\n\n\t/**\n\t* Sets a nested property.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - input object\n\t* @param {*} value - value to set\n\t* @returns {boolean} boolean indicating if the property was successfully set\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var bool = dset( obj, 'beep' );\n\t*/\n\tfunction deepSet( obj, value ) {\n\t\tif ( isObjectLike( obj ) ) {\n\t\t\treturn dset( obj, props, opts.create, value );\n\t\t}\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperties === 'function' ) ? Object.defineProperties : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) object properties.\n*\n* @name defineProperties\n* @type {Function}\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nvar defineProperties = Object.defineProperties;\n\n\n// EXPORTS //\n\nexport default defineProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (and/or modify) properties.\n*\n* @module @stdlib/utils/define-properties\n*\n* @example\n* import defineProperties from '@stdlib/utils/define-properties';\n*\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar',\n*         'writable': false,\n*         'configurable': false,\n*         'enumerable': true\n*     },\n*     'baz': {\n*         'value': 13\n*     }\n* });\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.log( err.message );\n* }\n*/\n\n// MODULES //\n\nimport hasDefinePropertiesSupport from '@stdlib/assert/has-define-properties-support'; // eslint-disable-line id-length\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperties;\nif ( hasDefinePropertiesSupport() ) {\n\tdefineProperties = builtin;\n} else {\n\tdefineProperties = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperties from './define_properties.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperties` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperties` support\n*\n* @example\n* var bool = hasDefinePropertiesSupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertiesSupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperties( {}, {\n\t\t\t'x': {}\n\t\t});\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertiesSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport objectKeys from './../../keys';\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) properties.\n*\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nfunction defineProperties( obj, props ) {\n\tvar keys;\n\tvar name;\n\tvar i;\n\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isObject( props ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an object containing property descriptors. Value: `%s`.', props ) );\n\t}\n\tkeys = objectKeys( props );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tname = keys[ i ];\n\t\tdefineProperty( obj, name, props[ name ] );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnlyAccessor( obj, prop, getter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setReadWriteAccessor( obj, prop, getter, setter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a write-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} setter - accessor\n*\n* @example\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\nfunction setWriteOnlyAccessor( obj, prop, setter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setWriteOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a POSIX path dirname.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DIRNAME_POSIX = reDirnamePosix();\n* var dir = RE_DIRNAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'foo/bar'\n*/\nfunction reDirnamePosix() {\n\treturn /^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nexport default reDirnamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reDirnamePosix from './main.js';\n\n\n// MAIN //\n\n/**\n* Captures a POSIX path dirname. Modified from Node.js [source][1].\n*\n* Regular expression: `/^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (includes root and dirname)\n*\n* -   `(?:)`\n*     -   capture but do not remember (handles `'.'` and `'./'` cases)\n*\n* -   `\\.(?![^\\/])`\n*     -   a `.` literal if the `.` literal is NOT followed by something other than a `/` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `(?:)`\n*     -   capture but do not remember (handles root+dirname case)\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `\\/+?`\n*     -   a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_DIRNAME_POSIX = reDirnamePosix();\n\n\n// EXPORTS //\n\nexport default RE_DIRNAME_POSIX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a Windows path dirname.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DIRNAME_WINDOWS = reDirnameWindows();\n* var dir = RE_DIRNAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'foo\\bar'\n*/\nfunction reDirnameWindows() {\n\treturn /^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nexport default reDirnameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a POSIX path dirname.\n*\n* @module @stdlib/regexp/dirname-posix\n*\n* @example\n* import reDirnamePosix from '@stdlib/regexp/dirname-posix';\n*\n* var RE_DIRNAME_POSIX = reDirnamePosix();\n* var dir = RE_DIRNAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'foo/bar'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reDirnameWindows from './main.js';\n\n\n// MAIN //\n\n/**\n* Regular expression to capture a Windows path dirname. Modified from Node.js [source][1].\n*\n* Regular expression: `/^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (includes the device, slash, and dirname)\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash before basename)\n*\n* -   `[\\\\\\/]+?`\n*     -   match a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_DIRNAME_WINDOWS = reDirnameWindows();\n\n\n// EXPORTS //\n\nexport default RE_DIRNAME_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a Windows path dirname.\n*\n* @module @stdlib/regexp/dirname-windows\n*\n* @example\n* import reDirnameWindows from '@stdlib/regexp/dirname-windows';\n*\n* var RE_DIRNAME_WINDOWS = reDirnameWindows();\n* var dir = RE_DIRNAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'foo\\bar'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Platform on which the current process is running.\n*\n* @constant\n* @type {string}\n*/\nvar PLATFORM = proc.platform;\n\n\n// EXPORTS //\n\nexport default PLATFORM;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the current process is running on Windows.\n*\n* @module @stdlib/assert/is-windows\n* @type {boolean}\n*\n* @example\n* import PLATFORM from '@stdlib/os/platform';\n* import IS_WINDOWS from '@stdlib/assert/is-windows';\n*\n* if ( IS_WINDOWS ) {\n*     console.log( 'Running on Windows...' );\n* } else {\n*     console.log( 'Running on %s...', PLATFORM );\n* }\n*/\n\n// MODULES //\n\nimport PLATFORM from '@stdlib/os/platform';\n\n\n// MAIN //\n\n/**\n* Boolean indicating if the current process is running on Windows.\n*\n* @constant\n* @type {boolean}\n*/\nvar IS_WINDOWS = ( PLATFORM === 'win32' );\n\n\n// EXPORTS //\n\nexport default IS_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isAccessorArray from './../../../../base/assert/is-accessor-array';\nimport accessorGetter from './../../../../base/accessor-getter';\nimport dtype from './../../../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function to tests if an array contains a provided search value.\n*\n* @param {Collection} x - input array\n* @throws {TypeError} must provide an array-like object\n* @returns {Function} function to test if an array contains a search value\n*\n* @example\n* var contains = factory( [ 1, 2, 3 ] );\n* // returns <Function>\n*\n* var bool = contains( 2 );\n* // returns true\n*/\nfunction factory( x ) {\n\tvar get;\n\tvar len;\n\tvar dt;\n\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', x ) );\n\t}\n\t// Resolve the input array data type:\n\tdt = dtype( x );\n\n\t// Resolve an accessor for retrieving input array elements:\n\tif ( isAccessorArray( x ) ) {\n\t\tget = accessorGetter( dt );\n\t}\n\t// Get the number of elements over which to iterate:\n\tlen = x.length;\n\n\treturn ( get === void 0 ) ? contains : accessors;\n\t/**\n\t* Tests if an array contains a provided search value.\n\t*\n\t* @private\n\t* @param {*} value - search value\n\t* @returns {boolean} boolean indicating if an array contains a search value\n\t*\n\t* @example\n\t* var out = contains( [ 1, 2, 3 ], 2 );\n\t* // returns true\n\t*/\n\tfunction contains( value ) {\n\t\tvar i;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( x[ i ] === value ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t/**\n\t* Tests if an array contains a provided search value.\n\t*\n\t* @private\n\t* @param {*} value - search value\n\t* @returns {boolean} boolean indicating if an array contains a search value\n\t*/\n\tfunction accessors( value ) {\n\t\tvar i;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( get( x, i ) === value ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an array contains a provided search value.\n*\n* @module @stdlib/array/base/assert/contains\n*\n* @example\n* import contains from '@stdlib/array/base/assert/contains';\n*\n* var out = contains( [ 1, 2, 3 ], 2 );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n\n// exports: { \"factory\": \"main.factory\" }\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from './../../../../base/assert/is-accessor-array';\nimport accessorGetter from './../../../../base/accessor-getter';\nimport getter from './../../../../base/getter';\nimport dtype from './../../../../dtype';\n\n\n// MAIN //\n\n/**\n* Tests if an array contains a provided search value.\n*\n* @param {Collection} x - input array\n* @param {*} value - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*\n* @example\n* var out = contains( [ 1, 2, 3 ], 2 );\n* // returns true\n*/\nfunction contains( x, value ) {\n\tvar len;\n\tvar get;\n\tvar dt;\n\tvar i;\n\n\t// Resolve the input array data type:\n\tdt = dtype( x );\n\n\t// Resolve an accessor for retrieving input array elements:\n\tif ( isAccessorArray( x ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\t// Get the number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Loop over the elements...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( get( x, i ) === value ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as contains } from '@stdlib/array/base/assert/contains';\nimport format from '@stdlib/string/format';\nimport posix from './../../dirname-posix';\nimport win32 from './../../dirname-windows';\nimport IS_WINDOWS from '@stdlib/assert/is-windows';\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\nvar isPlatform = contains( PLATFORMS );\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a path dirname.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reDirname();\n* var dir = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns <string>\n*/\nfunction reDirname( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isPlatform( platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument.  Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nexport default reDirname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a path dirname.\n*\n* @module @stdlib/regexp/dirname\n*\n* @example\n* import reDirname from '@stdlib/regexp/dirname';\n* var RE_DIRNAME = reDirname();\n*\n* // On a POSIX platform...\n* var dir = RE_DIRNAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '/foo/bar'\n*\n* @example\n* import reDirname from '@stdlib/regexp/dirname';\n* var RE_DIRNAME = reDirname();\n*\n* // On a Windows platform...\n* var dir = RE_DIRNAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'C:\\foo\\bar'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { REGEXP as posix } from './../../dirname-posix';\nimport { REGEXP as win32 } from './../../dirname-windows';\nimport IS_WINDOWS from '@stdlib/assert/is-windows';\nimport main from './main.js';\n\n\n// VARIABLES //\n\nvar REGEXP = ( IS_WINDOWS ) ? win32 : posix;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_POSIX', posix );\nsetReadOnly( main, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\nimport { REGEXP as RE_DIRNAME } from '@stdlib/regexp/dirname';\n\n\n// MAIN //\n\n/**\n* Returns a path dirname.\n*\n* @param {string} path - path\n* @throws {TypeError} must provide a string primitive\n* @returns {string} directory name\n*\n* @example\n* var dir = dirname( './foo/bar/index.js' );\n* // returns './foo/bar'\n*/\nfunction dirname( path ) {\n\tif ( !isString( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Path must be a string. Value: `%s`.', path ) );\n\t}\n\treturn RE_DIRNAME.exec( path )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default dirname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to stop invoking a function\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i <= 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* doUntil( beep, predicate );\n*/\nfunction doUntil( fcn, predicate, thisArg ) {\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t} while ( !predicate( i ) );\n}\n\n\n// EXPORTS //\n\nexport default doUntil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* doUntilEach( arr, log, predicate );\n*/\nfunction doUntilEach( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t} while (\n\t\ti < len &&\n\t\t!predicate( collection[ i-1 ], i-1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doUntilEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `doUntilEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `doUntilEach()`, `[].push()` behavior is consistent with `doUntilEachRight()` `[].unshift()` behavior.\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* doUntilEachRight( arr, log, predicate );\n*/\nfunction doUntilEachRight( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = len - 1;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t} while (\n\t\ti >= 0 &&\n\t\t!predicate( collection[ i+1 ], i+1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doUntilEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i < 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* doWhile( beep, predicate );\n*/\nfunction doWhile( fcn, predicate, thisArg ) {\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t} while ( predicate( i ) );\n}\n\n\n// EXPORTS //\n\nexport default doWhile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection.\n*\n* ## Notes\n*\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* doWhileEach( arr, log, predicate );\n*/\nfunction doWhileEach( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = 0;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t} while (\n\t\ti < len &&\n\t\tpredicate( collection[ i-1 ], i-1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doWhileEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `doWhileEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `doWhileEach()`, `[].push()` behavior is consistent with `doWhileEachRight()` `[].unshift()` behavior.\n* -   The condition is evaluated **after** executing the function to invoke; thus, the provided function **always** executes at least once.\n* -   If provided an empty collection, the function invokes the provided function with the collection index set to `undefined`.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* doWhileEachRight( arr, log, predicate );\n*/\nfunction doWhileEachRight( collection, fcn, predicate, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\tfcn.call( thisArg, void 0, void 0, collection );\n\t\tlen = collection.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn collection;\n\t\t}\n\t}\n\ti = len - 1;\n\tdo {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t} while (\n\t\ti >= 0 &&\n\t\tpredicate( collection[ i+1 ], i+1, collection )\n\t);\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default doWhileEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n\n\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\nfunction rescape( str ) {\n\tvar len;\n\tvar s;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Check if the string starts with a forward slash...\n\tif ( str[ 0 ] === '/' ) {\n\t\t// Find the last forward slash...\n\t\tlen = str.length;\n\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\tif ( str[ i ] === '/' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\tif ( i === void 0 || i <= 0 ) {\n\t\treturn str.replace( RE_CHARS, '\\\\$&' );\n\t}\n\t// We need to de-construct the string...\n\ts = str.substring( 1, i );\n\n\t// Only escape the characters between the `/`:\n\ts = s.replace( RE_CHARS, '\\\\$&' );\n\n\t// Reassemble:\n\tstr = str[ 0 ] + s + str.substring( i );\n\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport noop from './../../../../noop';\n\n\n// FUNCTIONS //\n\n/**\n* Throws a provided exception.\n*\n* @private\n* @param {Error} err - error object\n* @throws {Error} exception\n*/\nfunction throwError( err ) {\n\tthrow err;\n}\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t// Character sequence appearing at the beginning of a row which demarcates that the row content should be parsed as a commented line. A commented line ends upon encountering the first newline character sequence, regardless of whether that newline character sequence is preceded by an escape character sequence.\n\t\t'comment': '',\n\n\t\t// Character sequence separating record fields (e.g., use `','` for CSV and use `'\\t'` for TSV).\n\t\t'delimiter': ',',\n\n\t\t// Flag indicating how quote sequences should be escaped within a quoted field. When `true`, a quote sequence must be escaped by another quote sequence. When `false`, a quote sequence must be escaped by the escape sequence.\n\t\t'doublequote': true,\n\n\t\t// Character sequence for escaping character sequences having special meaning (i.e., delimiter, newline, escape, and comment outside of quoted fields, and the quote sequence within quoted fields when `doublequote` is `false`).\n\t\t'escape': '',\n\n\t\t// Flag indicating whether to trim leading whitespace from field values. If `false`, leading whitespace is not trimmed (e.g., `a, b, c` parses as `[ 'a', ' b', ' c' ]`). If `true`, leading whitespace is trimmed (e.g., `a, b, c` parses as `[ 'a', 'b', 'c' ]`).\n\t\t'ltrim': false,\n\n\t\t// Maximum number of records to process.\n\t\t'maxRows': 1e308,\n\n\t\t// Character sequence separating rows.\n\t\t'newline': '\\r\\n',\n\n\t\t// Callback to be invoked upon closing the parser.\n\t\t'onClose': noop,\n\n\t\t// Callback to be invoked upon processing a field.\n\t\t'onColumn': noop,\n\n\t\t// Callback to be invoked upon processing a commented line.\n\t\t'onComment': null,\n\n\t\t// Callback to be invoked upon encountering an unrecoverable parse error.\n\t\t'onError': throwError,\n\n\t\t// Callback to be invoked upon processing a record.\n\t\t'onRow': noop,\n\n\t\t// Callback to be invoked upon skipping a line.\n\t\t'onSkip': null,\n\n\t\t// When `strict` is `false`, a callback to be invoked upon encountering invalid DSV.\n\t\t'onWarn': null,\n\n\t\t// Character sequence demarcating the beginning and ending of a quoted field.\n\t\t'quote': '\"',\n\n\t\t// Flag indicating whether to enable special processing of quote character sequences (i.e., whether a quote sequence should demarcate a quoted field).\n\t\t'quoting': true,\n\n\t\t// Array-like object for storing the field values of the most recently processed record. This allows reusing memory and avoiding copies upon invocation of the `onRow` callback.\n\t\t'rowBuffer': [],\n\n\t\t// Flag indicating whether to trim trailing whitespace from field values. If `false`, trailing whitespace is not trimmed (e.g., `a ,b , c` parses as `[ 'a ', 'b ', ' c' ]`). If `true`, trailing whitespace is trimmed (e.g., `a ,b ,c` parses as `[ 'a', 'b', 'c' ]`).\n\t\t'rtrim': false,\n\n\t\t// Character sequence appearing at the beginning of a row which demarcates that the row content should be skipped.\n\t\t'skip': '',\n\n\t\t// Flag indicating whether to skip over rows which are either empty or containing only whitespace.\n\t\t'skipBlankRows': false,\n\n\t\t// Callback whose return value indicates whether to skip over a row.\n\t\t'skipRow': null,\n\n\t\t// Flag indicating whether to raise an exception upon encountering invalid DSV.\n\t\t'strict': true,\n\n\t\t// Flag indicating whether to trim leading whitespace in commented lines.\n\t\t'trimComment': true,\n\n\t\t// List of characters to be treated as whitespace.\n\t\t'whitespace': [ ' ' ]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enum2state from './enum2state.json';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a table mapping state names to enumeration constants.\n*\n* @private\n* @returns {Object} mapping table\n*/\nfunction table() {\n\tvar out;\n\tvar i;\n\n\tout = {};\n\tfor ( i = 0; i < enum2state.length; i++ ) {\n\t\tout[ enum2state[ i ] ] = i;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Table mapping state names to enumeration constants.\n*\n* @private\n* @name state2enum\n* @type {Object}\n*/\nvar state2enum = table(); // eslint-disable-line vars-on-top\n\n\n// EXPORTS //\n\nexport default state2enum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\n// Possible transition states...\nvar CLOSED = state2enum[ 'closed' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for closing a parser.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next() {\n\t\tparser._changeState( CLOSED );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:comment' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a commented line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar newlineLastIndex;\n\tvar newline;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t// Check for the end of the commented line...\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for a parser error state.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next() {\n\t\tparser._changeState( ERROR );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @private\n* @param {NonNegativeInteger} x - first value\n* @param {NonNegativeInteger} y - second value\n* @returns {NonNegativeInteger} maximum value\n*\n* @example\n* var v = max( 2, 3 );\n* // returns 3\n*\n* @example\n* var v = max( 3, 2 );\n* // returns 3\n*\n* @example\n* var v = max( 2, 2 );\n* // returns 2\n*/\nfunction max( x, y ) {\n\treturn ( x < y ) ? y : x;\n}\n\n\n// EXPORTS //\n\nexport default max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:escape' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar FIELD = state2enum[ 'field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence.\n*\n* ## Notes\n*\n* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar skipLastIndex;\n\tvar escapeLength;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar escape;\n\tvar strict;\n\tvar skip;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescapeLength = parser._escapeLength;\n\tescape = parser._escape;\n\n\tstrict = parser._strict;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), escapeLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\td === delimiterLastIndex &&\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, delimiterLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\td === newlineLastIndex &&\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, newlineLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape sequence.\n\t\t*/\n\t\tif (\n\t\t\td === escapeLastIndex &&\n\t\t\tch === escape[ escapeLastIndex ] &&\n\t\t\tparser._scan( escape, escapeLastIndex )\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, escapeLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a comment sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Comment sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                 // user specified a comment character sequence, so should check for comments\n\t\t\tcursor-commentLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === comment[ commentLastIndex ] &&      // we have a potential match\n\t\t\tparser._scan( comment, commentLastIndex )  // we found a match\n\t\t) {\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._copyWithin( idx-commentLastIndex, idx+1, commentLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a skip sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Skip sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                 // user specified a skip character sequence, so should check for a skipped line\n\t\t\tcursor-skipLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === skip[ skipLastIndex ] &&         // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )     // we found a match\n\t\t) {\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._copyWithin( idx-skipLastIndex, idx+1, skipLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In strict mode, field separators, row separators, and escaped sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the escape sequence which led to the current state. Once this happens, we're in an invalid state and must raise an exception, as not clear how the parser should interpret the preceding values (e.g., was the preceding escape sequence supposed to be escaped? was the preceding escape sequence a mistake and should be ignored? are we missing a delimiter or newline sequence? etc.).\n\t\t* -   In non-strict mode, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= max ) {\n\t\t\tif ( strict ) {\n\t\t\t\tdebug( 'Error.' );\n\t\t\t\tparser._setErrorState( 'INVALID_ESCAPE' )._changeState( ERROR );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Return to normal field processing:\n\t\t\tdebug( 'Escape sequence is not followed by a special character sequence.' );\n\t\t\tparser._raiseWarning( 'INVALID_ESCAPE' )._push( ch )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:field' );\n\n// Possible transition states...\nvar ESCAPE = state2enum[ 'escape' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a field.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor - parser._cidx + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n\t\t* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting ) {\n\t\t\t\t// Rewind the cursor to point to the last character before the quote character sequence:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._rewind( quoteLastIndex )._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting && parser._isWhitespace( parser._cidx, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\t// Rewind the cursor to point to the last character of the preceding field:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._raiseWarning( 'INVALID_OPENING_QUOTE' )\n\t\t\t\t\t._rewind( idx )\n\t\t\t\t\t._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:init' );\n\n// Possible transition states...\nvar COMMENT = state2enum[ 'comment' ];\nvar FIELD = state2enum[ 'field' ];\nvar ESCAPE = state2enum[ 'escape' ];\nvar INIT = state2enum[ 'init' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\nvar SKIP = state2enum[ 'skip' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing the initial characters of a row.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar skipLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\tvar skip;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for the start of a commented line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a commented line, the comment sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                // user specified a comment character sequence, so should check for comments\n\t\t\tidx-commentLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === comment[ commentLastIndex ] &&     // we have a potential comment match\n\t\t\tparser._scan( comment, commentLastIndex ) // we found a match\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the comment character sequence:\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._rewind( commentLastIndex )._changeState( COMMENT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for the start of a skipped line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a skipped line, the skip sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                // user specified a skip character sequence, so should check for skipped lines\n\t\t\tidx-skipLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === skip[ skipLastIndex ] &&        // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )    // we found a match\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the skip character sequence:\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._rewind( skipLastIndex )._changeState( SKIP );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n\t\t* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting ) {\n\t\t\t\t// Rewind the cursor to point to the last character before the quote character sequence:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._rewind( quoteLastIndex )._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting && parser._isWhitespace( 0, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\t// Rewind the cursor to the beginning of the buffer:\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._raiseWarning( 'INVALID_OPENING_QUOTE' )\n\t\t\t\t\t._rewind( idx )\n\t\t\t\t\t._changeState( QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:invalid_quote_end' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\n\n\n// FUNCTIONS //\n\n/**\n* Removes whitespace following a closing quote sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @param {NonNegativeInteger} state - next state\n* @returns {void}\n*/\nfunction removeWhitespace( parser, state ) {\n\t// Check whether the character sequence consists only of whitespace:\n\tif ( parser._isWhitespace( parser._qidx+1, parser._cursor ) ) {\n\t\t// Rewind the cursor and resume normal processing:\n\t\tparser._raiseWarning( 'INVALID_CLOSING_QUOTE' )\n\t\t\t._rewind( parser._cursor-parser._qidx )\n\t\t\t._changeState( state );\n\t\treturn;\n\t}\n\t// Non-whitespace characters came after a closing quote, leaving us in an ambiguous state: was the closing quote intended and we're missing a delimiter/newline, or was the closing quote a mistake and should have been escaped? We don't know, and so we must raise an exception:\n\tdebug( 'Error.' );\n\tparser._setErrorState( 'INVALID_CLOSING_QUOTE' )._changeState( ERROR );\n}\n\n\n// MAIN //\n\n/**\n* Returns a function for processing field characters after an ending quote sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar delimiter;\n\tvar newline;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex );\n\n\t\t\t// Remove whitespace and resume processing:\n\t\t\tremoveWhitespace( parser, FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex );\n\n\t\t\t// Remove whitespace and resume processing:\n\t\t\tremoveWhitespace( parser, INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:quote_end' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\nvar INVALID_QUOTE_END = state2enum[ 'invalid_quote_end' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an ending quote sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar delimiter;\n\tvar newline;\n\tvar strict;\n\tvar quote;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\tstrict = parser._strict;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), quoteLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `doublequote` is `true`, quote character sequences are escaped by a preceding quote character sequence.\n\t\t* -   When `doublequote` is `false`, quote character sequences must be explicitly escaped using an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\t// Keep the escaped quote character sequence and transition back to a quoted field state:\n\t\t\tdebug( 'Double quote.' );\n\t\t\tparser._push( ch )._changeState( QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the delimiter character sequence:\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._rewind( delimiterLastIndex )._changeState( FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Field separators, row separators, and escaped quote sequences must immediately follow a potential closing quote sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the quote sequence which led to the current state. Once this happens, we're in an invalid state and must raise an exception, as not clear how the parser should interpret the preceding values (e.g., was the preceding quote supposed to be escaped? was the preceding quote a mistake and should be ignored? are we missing a delimiter or newline sequence? etc.). In strict mode, we raise an exception. In non-strict mode, we only raise an exception if non-whitespace characters follow the potential closing quote sequence.\n\t\t*/\n\t\tif ( parser._cursor-parser._qidx >= max ) {\n\t\t\tif ( strict ) {\n\t\t\t\tdebug( 'Error.' );\n\t\t\t\tparser._setErrorState( 'INVALID_CLOSING_QUOTE' )._changeState( ERROR );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdebug( 'Invalid closing quote.' );\n\t\t\tparser._push( ch )._changeState( INVALID_QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:quoted_escape' );\n\n// Possible transition states...\nvar ERROR = state2enum[ 'error' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence within a quoted field.\n*\n* ## Notes\n*\n* -   Within a quoted field, an escape sequence (only) escapes the quote sequence.\n* -   In strict mode, if not immediately followed by a special character sequence, then the parser raises an exception.\n* -   In non-strict mode, if not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar escapeLength;\n\tvar strict;\n\tvar quote;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescapeLength = parser._escapeLength;\n\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote sequence.\n\t\t*/\n\t\tif (\n\t\t\td === quoteLastIndex &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._copyWithin( idx-escapeLastIndex, idx+1, quoteLastIndex )\n\t\t\t\t._rewind( escapeLength )\n\t\t\t\t._push( ch )\n\t\t\t\t._changeState( QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In strict mode, quote sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in a quote sequence, meaning that a quote sequence does not immediately follow the escape sequence which led to the current state. Once this happens, we're in an invalid state and must raise an exception, as not clear how the parser should interpret the preceding values (e.g., was the preceding escape sequence a mistake and should be ignored? are we missing a quote sequence? etc.).\n\t\t* -   In non-strict mode, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= quoteLastIndex ) {\n\t\t\tif ( strict ) {\n\t\t\t\tdebug( 'Error.' );\n\t\t\t\tparser._setErrorState( 'INVALID_QUOTED_ESCAPE' )._changeState( ERROR );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Return to normal field processing:\n\t\t\tdebug( 'Escape sequence is not followed by a quote sequence.' );\n\t\t\tparser._raiseWarning( 'INVALID_QUOTED_ESCAPE' )._push( ch )._changeState( QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:quoted_field' );\n\n// Possible transition states...\nvar QUOTE_END = state2enum[ 'quote_end' ];\nvar QUOTED_ESCAPE = state2enum[ 'quoted_escape' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a quoted field.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar escape;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote === false &&                // double quoting is disabled\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( QUOTED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an ending quote character sequence.\n\t\t*/\n\t\tif (\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the quote character sequence:\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._rewind( quoteLastIndex )._changeState( QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skip' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\nvar SKIP = state2enum[ 'skip' ];\nvar SKIPPED_COMMENT = state2enum[ 'skipped_comment' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_ESCAPE = state2enum[ 'skipped_escape' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar skipLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\tvar skip;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for the start of a commented line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a commented line, the comment sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                // user specified a comment character sequence, so should check for comments\n\t\t\tidx-commentLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === comment[ commentLastIndex ] &&     // we have a potential comment match\n\t\t\tparser._scan( comment, commentLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_COMMENT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for the start of a skipped line.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In order for a row to be considered a skipped line, the skip sequence must be the first character(s) of the field.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                // user specified a skip character sequence, so should check for skipped lines\n\t\t\tidx-skipLastIndex === 0 &&             // only search the first character(s) of the first field\n\t\t\tch === skip[ skipLastIndex ] &&        // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )    // we found a match\n\t\t) {\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._push( ch )._changeState( SKIP );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tif ( quoting && parser._isWhitespace( 0, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\tparser._push( ch );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_comment' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a skipped commented line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar newlineLastIndex;\n\tvar newline;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t// Check for the end of the commented line...\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_escape' );\n\n// Possible transition states...\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence within a skipped line.\n*\n* ## Notes\n*\n* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n* -   An escape sequence escapes comment and skip sequences in **non-quoted** fields when an escape sequence occurs at the beginning of a record.\n* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar commentLastIndex;\n\tvar escapeLastIndex;\n\tvar skipLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar comment;\n\tvar escape;\n\tvar skip;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tcommentLastIndex = parser._commentLastIndex;\n\tcomment = parser._comment;\n\n\tskipLastIndex = parser._skipLastIndex;\n\tskip = parser._skip;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), escapeLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\td === delimiterLastIndex &&\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\td === newlineLastIndex &&\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an escape sequence.\n\t\t*/\n\t\tif (\n\t\t\td === escapeLastIndex &&\n\t\t\tch === escape[ escapeLastIndex ] &&\n\t\t\tparser._scan( escape, escapeLastIndex )\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a comment sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Comment sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tcomment &&                                 // user specified a comment character sequence, so should check for comments\n\t\t\tcursor-commentLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === comment[ commentLastIndex ] &&      // we have a potential match\n\t\t\tparser._scan( comment, commentLastIndex )  // we found a match\n\t\t) {\n\t\t\tdebug( 'Comment.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a skip sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Skip sequences only have special meaning when appearing at the beginning of a row.\n\t\t*/\n\t\tif (\n\t\t\tskip &&                                 // user specified a skip character sequence, so should check for a skipped line\n\t\t\tcursor-skipLastIndex === 0 &&           // only search the first character(s) of the row\n\t\t\tch === skip[ skipLastIndex ] &&         // we have a potential match\n\t\t\tparser._scan( skip, skipLastIndex )     // we found a match\n\t\t) {\n\t\t\tdebug( 'Skip.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Field separators, row separators, and escaped sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the escape sequence which led to the current state. Once this happens, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= max ) {\n\t\t\tdebug( 'Normal character sequence.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_field' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\nvar SKIPPED_ESCAPE = state2enum[ 'skipped_escape' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a field within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar delimiter;\n\tvar newline;\n\tvar quoting;\n\tvar escape;\n\tvar strict;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoting = parser._quoting;\n\tstrict = parser._strict;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar idx = parser._cursor - parser._cidx + 1;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   An escape sequence escapes the delimiter, newline, and escape sequences in **non-quoted** fields.\n\t\t* -   When `doublequote` is `false`, the escape sequence escapes quote sequences within **quoted** fields.\n\t\t* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning.\n\t\t*/\n\t\tif (\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tidx-quoteLastIndex === 0 &&           // only search the first character(s) of the field\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tparser._push( ch );\n\t\t\tif ( quoting ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t* Check for a quote character sequence (non-strict mode).\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   In non-strict mode, a quote character sequence is allowed to start after whitespace (e.g., `a,  \"b\",  c`).\n\t\t* -   When `quoting` is `true`, in order for a field to be quoted, the quote sequence must be the first character(s) of the field.\n\t\t* -   When `quoting` is `false`, quote sequences do **not** have any special meaning, and we process quote sequences as normal field text.\n\t\t*/\n\t\tif (\n\t\t\tstrict === false &&                   // non-strict mode\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tparser._push( ch );\n\t\t\tif ( quoting && parser._isWhitespace( parser._cidx, parser._cursor-quoteLastIndex ) ) {\n\t\t\t\tdebug( 'Quote.' );\n\t\t\t\tparser._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Continue processing until we can transition to a new state:\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_invalid_quote_end' );\n\n// Possible transition states...\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar INIT = state2enum[ 'init' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing field characters after an ending quote sequence within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar delimiter;\n\tvar newline;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport maximum from './max.js';\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_quote_end' );\n\n// Possible transition states...\nvar INIT = state2enum[ 'init' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_INVALID_QUOTE_END = state2enum[ 'skipped_invalid_quote_end' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an ending quote sequence within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar delimiterLastIndex;\n\tvar newlineLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar delimiter;\n\tvar newline;\n\tvar quote;\n\tvar max;\n\n\tdelimiterLastIndex = parser._delimiterLastIndex;\n\tdelimiter = parser._delimiter;\n\n\tnewlineLastIndex = parser._newlineLastIndex;\n\tnewline = parser._newline;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\n\tmax = maximum( maximum( delimiterLastIndex, newlineLastIndex ), quoteLastIndex ); // eslint-disable-line max-len\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   When `doublequote` is `true`, quote character sequences are escaped by a preceding quote character sequence.\n\t\t* -   When `doublequote` is `false`, quote character sequences must be explicitly escaped using an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\tdebug( 'Double quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a field delimiter.\n\t\t*/\n\t\tif (\n\t\t\tch === delimiter[ delimiterLastIndex ] &&\n\t\t\tparser._scan( delimiter, delimiterLastIndex )\n\t\t) {\n\t\t\tdebug( 'Delimiter.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a row separator.\n\t\t*/\n\t\tif (\n\t\t\tch === newline[ newlineLastIndex ] &&\n\t\t\tparser._scan( newline, newlineLastIndex )\n\t\t) {\n\t\t\t// Rewind the cursor to point to the last character before the newline character sequence:\n\t\t\tdebug( 'Newline.' );\n\t\t\tparser._rewind( newlineLastIndex )._changeState( INIT );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Field separators, row separators, and escaped quote sequences must immediately follow a potential closing quote sequence. At some point, we'll have processed a greater number of characters than exists in any of the special character sequences, meaning that none of those sequences immediately follow the quote sequence which led to the current state. Once this happens, we in an invalid state.\n\t\t*/\n\t\tif ( parser._cursor-parser._qidx >= max ) {\n\t\t\tdebug( 'Invalid closing quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_INVALID_QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_quoted_escape' );\n\n// Possible transition states...\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing an escape sequence within a quoted field within a skipped line.\n*\n* ## Notes\n*\n* -   Within a quoted field, an escape sequence (only) escapes the quote sequence.\n* -   If not immediately followed by a special character sequence, then the escape sequence has no special meaning and is considered a normal character sequence.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar quoteLastIndex;\n\tvar quote;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tvar cursor = parser._cursor;\n\t\tvar idx = parser._eidx; // position of last escape character\n\t\tvar d = cursor - idx;\n\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for a quote sequence.\n\t\t*/\n\t\tif (\n\t\t\td === quoteLastIndex &&\n\t\t\tch === quote[ quoteLastIndex ] &&\n\t\t\tparser._scan( quote, quoteLastIndex )\n\t\t) {\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for a non-special character sequence.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   Quote sequences must immediately follow an escape sequence. At some point, we'll have processed a greater number of characters than exists in a quote sequence, meaning that a quote sequence does not immediately follow the escape sequence which led to the current state. Once this happens, we assume that the escape sequence is a normal character sequence.\n\t\t*/\n\t\tif ( d >= quoteLastIndex ) {\n\t\t\t// Return to normal field processing:\n\t\t\tdebug( 'Escape sequence is not followed by a quote sequence.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_FIELD );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport state2enum from './state2enum.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'state:skipped_quoted_field' );\n\n// Possible transition states...\nvar SKIPPED_QUOTE_END = state2enum[ 'skipped_quote_end' ];\nvar SKIPPED_QUOTED_ESCAPE = state2enum[ 'skipped_quoted_escape' ];\n\n\n// MAIN //\n\n/**\n* Returns a function for processing a quoted field within a skipped line.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Function} processing function\n*/\nfunction processor( parser ) {\n\tvar escapeLastIndex;\n\tvar quoteLastIndex;\n\tvar doublequote;\n\tvar escape;\n\tvar quote;\n\n\tescapeLastIndex = parser._escapeLastIndex;\n\tescape = parser._escape;\n\n\tquoteLastIndex = parser._quoteLastIndex;\n\tquote = parser._quote;\n\n\tdoublequote = parser._doublequote;\n\n\treturn next;\n\n\t/**\n\t* Processes a character.\n\t*\n\t* @private\n\t* @param {string} ch - character\n\t* @returns {void}\n\t*/\n\tfunction next( ch ) {\n\t\tdebug( 'Char: %s', ch );\n\n\t\t/*\n\t\t* Check for an escape character sequence.\n\t\t*/\n\t\tif (\n\t\t\tdoublequote === false &&                // double quoting is disabled\n\t\t\tch === escape[ escapeLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( escape, escapeLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Escape.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTED_ESCAPE );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t* Check for an ending quote character sequence.\n\t\t*/\n\t\tif (\n\t\t\tch === quote[ quoteLastIndex ] &&     // we have a potential match\n\t\t\tparser._scan( quote, quoteLastIndex ) // we found a match\n\t\t) {\n\t\t\tdebug( 'Quote.' );\n\t\t\tparser._push( ch )._changeState( SKIPPED_QUOTE_END );\n\t\t\treturn;\n\t\t}\n\t\t// Continue processing until we can transition to a new state:\n\t\tparser._push( ch );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default processor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enum2state from './enum2state.json';\nimport closed from './closed.js'; // eslint-disable-line stdlib/no-redeclare\nimport comment from './comment.js';\nimport error from './error.js';\nimport escape from './escape.js'; // eslint-disable-line stdlib/no-redeclare\nimport field from './field.js';\nimport init from './init.js';\nimport invalidQuoteEnd from './invalid_quote_end.js';\nimport quoteEnd from './quote_end.js';\nimport quotedEscape from './quoted_escape.js';\nimport quotedField from './quoted_field.js';\nimport skip from './skip.js';\nimport skippedComment from './skipped_comment.js';\nimport skippedEscape from './skipped_escape.js';\nimport skippedField from './skipped_field.js';\nimport skippedInvalidQuoteEnd from './skipped_invalid_quote_end.js';\nimport skippedQuoteEnd from './skipped_quote_end.js';\nimport skippedQuotedEscape from './skipped_quoted_escape.js';\nimport skippedQuotedField from './skipped_quoted_field.js';\n\n\n// VARIABLES //\n\nvar table = {\n\t'closed': closed,\n\t'comment': comment,\n\t'escape': escape,\n\t'error': error,\n\t'field': field,\n\t'init': init,\n\t'invalid_quote_end': invalidQuoteEnd,\n\t'quote_end': quoteEnd,\n\t'quoted_escape': quotedEscape,\n\t'quoted_field': quotedField,\n\t'skip': skip,\n\t'skipped_comment': skippedComment,\n\t'skipped_escape': skippedEscape,\n\t'skipped_field': skippedField,\n\t'skipped_invalid_quote_end': skippedInvalidQuoteEnd,\n\t'skipped_quote_end': skippedQuoteEnd,\n\t'skipped_quoted_escape': skippedQuotedEscape,\n\t'skipped_quoted_field': skippedQuotedField\n};\n\n\n// MAIN //\n\n/**\n* Returns an object mapping state enumeration constants to state functions.\n*\n* @private\n* @param {Parser} parser - parser instance\n* @returns {Array<Function>} table\n*/\nfunction states( parser ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < enum2state.length; i++ ) {\n\t\tout.push( table[ enum2state[ i ] ]( parser ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default states;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this, max-len, no-underscore-dangle, max-lines */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nimport setReadOnly from './../../../../define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from './../../../../define-nonenumerable-read-only-accessor';\nimport Boolean from '@stdlib/boolean/ctor';\nimport format from '@stdlib/string/format';\nimport rescape from './../../../../escape-regexp-string';\nimport replace from '@stdlib/string/base/replace';\nimport defaults from './defaults.js';\nimport state2enum from './states/state2enum.js';\nimport enum2state from './states/enum2state.json';\nimport states from './states';\n\n\n// VARIABLES //\n\nvar debug = logger( 'parser' );\n\n// Parser states:\nvar CLOSED = state2enum[ 'closed' ];\nvar COMMENT = state2enum[ 'comment' ];\nvar ERROR = state2enum[ 'error' ];\nvar ESCAPE = state2enum[ 'escape' ];\nvar FIELD = state2enum[ 'field' ];\nvar INIT = state2enum[ 'init' ];\nvar INVALID_QUOTE_END = state2enum[ 'invalid_quote_end' ];\nvar QUOTE_END = state2enum[ 'quote_end' ];\nvar QUOTED_ESCAPE = state2enum[ 'quoted_escape' ];\nvar QUOTED_FIELD = state2enum[ 'quoted_field' ];\nvar SKIP = state2enum[ 'skip' ];\nvar SKIPPED_COMMENT = state2enum[ 'skipped_comment' ];\nvar SKIPPED_ESCAPE = state2enum[ 'skipped_escape' ];\nvar SKIPPED_FIELD = state2enum[ 'skipped_field' ];\nvar SKIPPED_INVALID_QUOTE_END = state2enum[ 'skipped_invalid_quote_end' ];\nvar SKIPPED_QUOTE_END = state2enum[ 'skipped_quote_end' ];\nvar SKIPPED_QUOTED_ESCAPE = state2enum[ 'skipped_quoted_escape' ];\nvar SKIPPED_QUOTED_FIELD = state2enum[ 'skipped_quoted_field' ];\n\n\n// FUNCTIONS //\n\n/**\n* Returns a regular expression pattern which matches a list of strings.\n*\n* @private\n* @param {StringArray} list - list of strings to match\n* @returns {string} regular expression pattern\n*/\nfunction array2pattern( list ) {\n\tvar pattern;\n\tvar i;\n\n\tpattern = '(?:';\n\tfor ( i = 0; i < list.length-1; i++ ) {\n\t\tpattern += rescape( list[ i ] ) + '|';\n\t}\n\treturn pattern + rescape( list[ i ] ) + ')';\n}\n\n\n// MAIN //\n\n/**\n* Returns an incremental parser for delimiter-separated values.\n*\n* @constructor\n* @param {Options} options - options object\n* @returns {Parser} parser instance\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*\n* // ...\n*\n* parser.close();\n*\n* // ...\n*\n* var bool = parser.done;\n* // returns true\n*/\nfunction Parser( options ) {\n\tvar opts;\n\n\tif ( !( this instanceof Parser ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new Parser( options );\n\t\t}\n\t\treturn new Parser();\n\t}\n\t// TODO: option validation; enforce quote, comment, skip, delimiter, escape, and newline all being different and none can be a substring of the other (i.e., no escape equal to `,,` and delimiter equal to `,`, and no delimiter equal to `,` and newline being `,,` and vice versa; is `,,` an escape or simply an empty field?); should probably require that \"whitespace\" does not conflict with any of the special character sequences; require at least one whitespace character\n\toptions = options || {};\n\topts = defaults();\n\n\t// Buffer for tracking internal state:\n\tthis._buffer = [];\n\n\t// Index of the most recently processed character:\n\tthis._cursor = -1;\n\n\t// Index marking the beginning of the current field:\n\tthis._cidx = 0;\n\n\t// Indices marking the most recent unescaped quote sequence:\n\tthis._qidx = -1;\n\n\t// Indices marking the most recent escape sequence:\n\tthis._eidx = -1;\n\n\t// Buffer for storing the field values for the current row:\n\tthis._rowBufferFLG = Boolean( options.rowBuffer );\n\tthis._rowBuffer = options.rowBuffer || opts.rowBuffer;\n\n\t// Column, row, and line counters:\n\tthis._col = 0;\n\tthis._row = 0;\n\tthis._line = 0;\n\n\t// Initialize flags indicating whether we're processing a commented/skipped line:\n\tthis._commented = false;\n\tthis._skipped = false;\n\n\t// Initialize the error state:\n\tthis._errname = '';\n\n\t// Extract various options:\n\tthis._comment = options.comment || opts.comment;\n\tthis._delimiter = options.delimiter || opts.delimiter;\n\tthis._doublequote = ( options.doublequote === void 0 ) ? opts.doublequote : options.doublequote;\n\tthis._escape = options.escape || opts.escape;\n\tthis._ltrim = ( options.ltrim === void 0 ) ? opts.ltrim : options.ltrim;\n\tthis._maxRows = ( options.maxRows === void 0 ) ? opts.maxRows : options.maxRows;\n\tthis._newline = options.newline || opts.newline;\n\tthis._quote = options.quote || opts.quote;\n\tthis._quoting = ( options.quoting === void 0 ) ? opts.quoting : options.quoting;\n\tthis._rtrim = ( options.rtrim === void 0 ) ? opts.rtrim : options.rtrim;\n\tthis._skip = options.skip || opts.skip;\n\tthis._skipBlankRows = ( options.skipBlankRows === void 0 ) ? opts.skipBlankRows : options.skipBlankRows;\n\tthis._skipRow = options.skipRow || opts.skipRow;\n\tthis._strict = ( options.strict === void 0 ) ? opts.strict : options.strict;\n\tthis._trimComment = ( options.trimComment === void 0 ) ? opts.trimComment : options.trimComment;\n\tthis._whitespace = array2pattern( options.whitespace || opts.whitespace );\n\n\tthis._reWhitespace = new RegExp( '^'+this._whitespace+'*([\\\\S\\\\s]*?)'+this._whitespace+'*$' );\n\tthis._reWhitespaceLeft = new RegExp( '^'+this._whitespace+'*' );\n\tthis._reWhitespaceRight = new RegExp( this._whitespace+'*$' );\n\n\tthis._onClose = options.onClose || opts.onClose;\n\tthis._onColumn = options.onColumn || opts.onColumn;\n\tthis._onComment = options.onComment || opts.onComment;\n\tthis._onRow = options.onRow || opts.onRow;\n\tthis._onSkip = options.onSkip || opts.onSkip;\n\n\tthis._onError = options.onError || opts.onError;\n\tthis._onWarn = options.onWarn || opts.onWarn;\n\n\tthis._commentLength = this._comment.length;\n\tthis._commentLastIndex = this._commentLength - 1;\n\n\tthis._delimiterLength = this._delimiter.length;\n\tthis._delimiterLastIndex = this._delimiterLength - 1;\n\n\tthis._escapeLength = this._escape.length;\n\tthis._escapeLastIndex = this._escapeLength - 1;\n\n\tthis._newlineLength = this._newline.length;\n\tthis._newlineLastIndex = this._newlineLength - 1;\n\n\tthis._quoteLength = this._quote.length;\n\tthis._quoteLastIndex = this._quoteLength - 1;\n\n\tthis._skipLength = this._skip.length;\n\tthis._skipLastIndex = this._skipLength - 1;\n\n\t// Initialize the state flag:\n\tif ( this._skipRow && this._skipRow( 0, 0 ) ) {\n\t\tthis._state = SKIP;\n\t\tthis._skipped = true;\n\t} else {\n\t\tthis._state = INIT;\n\t}\n\t// Initialize state processors...\n\tthis._states = states( this ); // NOTE: this should come after all other initialization!\n\n\treturn this;\n}\n\n/**\n* Updates state by adding a processed character to an internal buffer.\n*\n* @private\n* @name _push\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} ch - character\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_push', function push( ch ) {\n\tvar buf = this._buffer;\n\n\t// Increment the internal buffer pointer:\n\tthis._cursor += 1;\n\n\t// Only expand the internal buffer if we've run out of previously allocated memory...\n\tif ( this._cursor >= buf.length ) {\n\t\tbuf.push( ch );\n\t\tdebug( 'Internal buffer size increased. Length: %d.', buf.length );\n\t} else {\n\t\t// Reuse existing memory:\n\t\tbuf[ this._cursor ] = ch;\n\t}\n\tdebug( 'Cursor: %d. Push: %s', this._cursor, ch );\n\treturn this;\n});\n\n/**\n* Rewinds the internal buffer cursor by a specified amount.\n*\n* @private\n* @name _rewind\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} N - number of elements to rewind\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_rewind', function rewind( N ) {\n\tthis._cursor -= N;\n\n\tdebug( 'Rewind: %d. Cursor: %d.', N, this._cursor );\n\treturn this;\n});\n\n/**\n* Copies a sequence of internal buffer elements to an earlier position in the buffer.\n*\n* @private\n* @name _copyWithin\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} target - starting position to which to copy elements\n* @param {NonNegativeInteger} start - staring index of the elements to copy (inclusive)\n* @param {NonNegativeInteger} N - number of elements to copy\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_copyWithin', function copyWithin( target, start, N ) {\n\tvar buf;\n\tvar i;\n\n\tbuf = this._buffer;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tbuf[ target+i ] = buf[ start+i ];\n\t}\n\treturn this;\n});\n\n/**\n* Returns the contents of a buffer slice.\n*\n* @private\n* @name _slice\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} start - starting character index (inclusive)\n* @param {NonNegativeInteger} end - ending character index (inclusive)\n* @returns {string} buffer contents\n*/\nsetReadOnly( Parser.prototype, '_slice', function slice( start, end ) {\n\treturn this._buffer.slice( start, end+1 ).join( '' );\n});\n\n/**\n* Checks whether the contents of a buffer slice consists of only whitespace.\n*\n* @private\n* @name _isWhitespace\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} start - starting character index (inclusive)\n* @param {NonNegativeInteger} end - ending character index (inclusive)\n* @returns {boolean} boolean indicating whether a buffer slice consists of only whitespace\n*/\nsetReadOnly( Parser.prototype, '_isWhitespace', function isWhitespace( start, end ) {\n\treturn ( replace( this._slice( start, end ), this._reWhitespaceLeft, '' ) === '' );\n});\n\n/**\n* Resets the parser.\n*\n* @private\n* @name _reset\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_reset', function reset() {\n\t// Reset counters and indices:\n\tthis._col = 0;\n\tthis._cidx = 0;\n\tthis._qidx = -1;\n\tthis._eidx = -1;\n\n\t// Reset the parser state...\n\tif ( this._skipRow && this._skipRow( this._row, this._line ) ) {\n\t\tthis._state = SKIP;\n\t\tthis._skipped = true;\n\t} else {\n\t\tthis._state = INIT;\n\t\tthis._skipped = false;\n\t}\n\tthis._commented = false;\n\n\t// Reset the buffer:\n\tthis._cursor = -1;\n\n\tdebug( 'Parser reset.' );\n\treturn this;\n});\n\n/**\n* Sets a field value in an internal row buffer.\n*\n* @private\n* @name _set\n* @memberof Parser.prototype\n* @type {Function}\n* @param {*} value - field value\n* @param {NonNegativeInteger} idx - field index\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_setField', function set( value, idx ) {\n\tvar buf = this._rowBuffer;\n\n\t// FIXME: as buffer may be provided from userland, use `set` accessor and consider using `@stdlib/utils/push` to allow support of dynamically resizing fixed length buffers\n\n\t// Only expand the row buffer if we've run out of previously allocated memory...\n\tif ( idx >= buf.length ) {\n\t\tbuf.push( value );\n\t\tdebug( 'Row buffer size increased. Length: %d.', buf.length );\n\t} else {\n\t\t// Reuse existing memory:\n\t\tbuf[ idx ] = value;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a field value.\n*\n* @private\n* @name _getField\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} start - starting character index (inclusive)\n* @param {NonNegativeInteger} end - ending character index (inclusive)\n* @returns {string} field value\n*/\nsetReadOnly( Parser.prototype, '_getField', function get( start, end ) {\n\tvar v = this._slice( start, end );\n\tif ( this._ltrim ) {\n\t\tif ( this._rtrim ) {\n\t\t\treturn replace( v, this._reWhitespace, '$1' );\n\t\t}\n\t\treturn replace( v, this._reWhitespaceLeft, '' );\n\t}\n\tif ( this._rtrim ) {\n\t\treturn replace( v, this._reWhitespaceRight, '' );\n\t}\n\treturn v;\n});\n\n/**\n* Returns the current row of values.\n*\n* @private\n* @name _getRow\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {ArrayLikeObject} row of values\n*/\nsetReadOnly( Parser.prototype, '_getRow', function get() {\n\tif ( this._rowBufferFLG ) {\n\t\treturn this._rowBuffer;\n\t}\n\t// Return a shallow copy to avoid mutating internal state:\n\treturn this._rowBuffer.slice( 0, this._col );\n});\n\n/**\n* Scans the internal buffer for a specified character sequence.\n*\n* ## Notes\n*\n* -   Given an internal buffer\n*\n*     ```text\n*     | ... | a | b |\n*     ```\n*\n*     search character sequence\n*\n*     ```text\n*     | a | b | c |\n*     ```\n*\n*     and `N` equal to `2`, the method will begin scanning from the position of `a` in the internal buffer above and compare to each element of the first `N` characters of the search character sequence.\n*\n*     This method is intended to be used in scenarios where we already know that an incoming character matches the last character of the search sequence, and we want to know whether the rest of the search sequence matches the most recently added elements in the internal buffer.\n*\n* @private\n* @name _scan\n* @memberof Parser.prototype\n* @type {Function}\n* @param {StringArray} search - character sequence\n* @param {NonNegativeInteger} N - number of characters to search\n* @returns {boolean} boolean indicating whether a match was found\n*/\nsetReadOnly( Parser.prototype, '_scan', function scan( search, N ) {\n\tvar buf;\n\tvar idx;\n\tvar i;\n\n\tbuf = this._buffer;\n\tidx = this._cursor - N + 1;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( buf[ idx+i ] !== search[ i ] ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ( i === N );\n});\n\n/**\n* Processes a field.\n*\n* @private\n* @name _onField\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onField', function onField() {\n\t// Extract the field value:\n\tvar v = this._getField( this._cidx, this._cursor );\n\n\t// Insert the field value into the row buffer:\n\tthis._setField( v, this._col );\n\n\t// Invoke a callback for receiving field values:\n\tthis._onColumn( v, this._row, this._col, this._line );\n\tdebug( 'Field. Line: %d. Row: %d. Column: %d. Value: %s', this._line, this._row, this._col, v );\n\n\t// Increment the field counter to record that we've moved on to the next field:\n\tthis._col += 1;\n\n\t// Increment the index marking the beginning of the next field:\n\tthis._cidx = this._cursor + 1; // +1 as the cursor currently points to the last character in the current field, and, thus, the next field should start at the next index\n\n\t// Reset indices:\n\tthis._qidx = -1;\n\tthis._eidx = -1;\n\n\treturn this;\n});\n\n/**\n* Processes a record.\n*\n* @private\n* @name _onRecord\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onRecord', function onRecord() {\n\tvar v;\n\n\t// Extract the field value:\n\tv = this._getField( this._cidx, this._cursor );\n\n\t// Check for a blank row (i.e., a row consisting only of whitespace):\n\tif ( this._skipBlankRows && this._col === 0 ) {\n\t\tif ( v === '' || replace( v, this._reWhitespaceLeft, '' ) === '' ) {\n\t\t\treturn this._onSkippedRow();\n\t\t}\n\t}\n\t// Insert the field value into the row buffer:\n\tthis._setField( v, this._col );\n\n\t// Invoke a callback for receiving field values:\n\tthis._onColumn( v, this._row, this._col, this._line );\n\tthis._col += 1;\n\n\t// Invoke a callback for receiving rows:\n\tthis._onRow( this._getRow(), this._row, this._col, this._line );\n\tdebug( 'Record. Line: %d. Fields: %d.', this._line, this._col );\n\n\t// Increment row and line counters to indicate that we've moved on to the next row/line:\n\tthis._row += 1;\n\tthis._line += 1;\n\n\t// Reset the parser:\n\tthis._reset();\n\n\t// Check whether we have processed a desired number of rows...\n\tif ( this._row >= this._maxRows ) {\n\t\tthis._changeState( CLOSED );\n\t}\n\treturn this;\n});\n\n/**\n* Processes a commented row.\n*\n* @private\n* @name _onCommentedRow\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onCommentedRow', function onCommentedRow() {\n\tvar v;\n\n\t// Invoke a callback for receiving commented lines:\n\tif ( this._onComment ) {\n\t\tv = this._slice( 0, this._cursor );\n\t\tif ( this._trimComment ) {\n\t\t\tv = replace( v, this._reWhitespaceLeft, '' );\n\t\t}\n\t\tthis._onComment( v, this._line );\n\t\tdebug( 'Comment. Line: %d. Value: %s', this._line, v );\n\t} else {\n\t\tdebug( 'Comment. Line: %d.', this._line );\n\t}\n\t// Increment the counter for how many lines have been processed:\n\tthis._line += 1;\n\n\t// Reset the parser:\n\tthis._reset();\n\n\treturn this;\n});\n\n/**\n* Processes a skipped row.\n*\n* @private\n* @name _onSkippedRow\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onSkippedRow', function onSkippedRow() {\n\tvar v;\n\n\t// Invoke a callback for receiving skipped lines:\n\tif ( this._onSkip ) {\n\t\tv = this._slice( 0, this._cursor );\n\t\tthis._onSkip( v, this._line );\n\t\tdebug( 'Skipped row. Line: %d. Value: %s', this._line, v );\n\t} else {\n\t\tdebug( 'Skipped row. Line: %d.', this._line );\n\t}\n\t// Increment the counter for how many lines have been processed:\n\tthis._line += 1;\n\n\t// Reset the parser:\n\tthis._reset();\n\n\treturn this;\n});\n\n/**\n* Processes a closing quote sequence.\n*\n* @private\n* @name _onClosingQuote\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onClosingQuote', function onClosingQuote() {\n\t// Cache the cursor position marking the end of the closing quote sequence:\n\tthis._qidx = this._cursor;\n\treturn this;\n});\n\n/**\n* Processes an escape sequence.\n*\n* @private\n* @name _onEscape\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_onEscape', function onEscape() {\n\t// Cache the cursor position marking the end of the escape sequence:\n\tthis._eidx = this._cursor;\n\treturn this;\n});\n\n/**\n* Creates a parser exception.\n*\n* @private\n* @name _createException\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} name - exception name\n* @returns {Error} parser exception\n*/\nsetReadOnly( Parser.prototype, '_createException', function createException( name ) {\n\tvar err;\n\n\tswitch ( name ) {\n\tcase 'INVALID_CLOSING_QUOTE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains a closing quote which is not immediately followed by a delimiter or newline.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'INVALID_OPENING_QUOTE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains an opening quote which does not immediately follow a delimiter or newline.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'INVALID_ESCAPE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains an escape sequence which is not immediately followed by a special character sequence.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'INVALID_QUOTED_ESCAPE':\n\t\terr = new Error( format( 'unexpected error. Encountered an invalid record. Field %d on line %d contains an escape sequence within a quoted field which is not immediately followed by a quote sequence.', this._col, this._line ) );\n\t\tbreak;\n\tcase 'CLOSED':\n\t\terr = new Error( 'invalid operation. Parser is unable to parse new chunks, as the parser has been closed. To parse new chunks, create a new parser instance.' );\n\t\tbreak;\n\tdefault:\n\t\terr = new Error( 'invalid operation. Parser is in an unrecoverable error state. To parse new chunks, create a new parser instance.' );\n\t\tbreak;\n\t}\n\treturn err;\n});\n\n/**\n* Raises a parser warning.\n*\n* @private\n* @name _raiseWarning\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} name - exception name\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_raiseWarning', function raiseWarning( name ) {\n\tvar err;\n\n\tif ( this._onWarn ) {\n\t\terr = this._createException( name );\n\n\t\tdebug( 'Warning: %s', err.message );\n\t\tthis._onWarn( err );\n\t}\n\treturn this;\n});\n\n/**\n* Raises a parser exception.\n*\n* @private\n* @name _raiseException\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_raiseException', function raiseException() {\n\tvar err = this._createException( this._errname );\n\n\tdebug( 'Error: %s', err.message );\n\tthis._onError( err );\n\n\treturn this;\n});\n\n/**\n* Updates the parser state.\n*\n* @private\n* @name _changeState\n* @memberof Parser.prototype\n* @type {Function}\n* @param {NonNegativeInteger} state - state enumeration constant\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_changeState', function changeState( state ) {\n\tdebug( 'State transition: %s -> %s.', enum2state[ this._state ], enum2state[ state ] );\n\n\tswitch ( state ) { // eslint-disable-line default-case\n\tcase CLOSED:\n\t\tthis._close();\n\t\tbreak;\n\tcase COMMENT:\n\t\tthis._commented = true;\n\t\tbreak;\n\tcase ERROR:\n\t\tthis._raiseException();\n\t\tbreak;\n\tcase ESCAPE:\n\t\tthis._onEscape();\n\t\tbreak;\n\tcase FIELD:\n\t\tif ( this._state !== ESCAPE ) {\n\t\t\tthis._onField();\n\t\t}\n\t\tbreak;\n\tcase INIT:\n\t\tif ( this._commented ) {\n\t\t\tthis._onCommentedRow();\n\t\t} else if ( this._skipped ) {\n\t\t\tthis._onSkippedRow();\n\t\t} else {\n\t\t\tthis._onRecord();\n\t\t}\n\t\tbreak;\n\tcase INVALID_QUOTE_END:\n\t\tbreak;\n\tcase QUOTE_END:\n\t\tthis._onClosingQuote();\n\t\tbreak;\n\tcase QUOTED_ESCAPE:\n\t\tthis._onEscape();\n\t\tbreak;\n\tcase QUOTED_FIELD:\n\t\tbreak;\n\tcase SKIP:\n\t\tthis._skipped = true;\n\t\tbreak;\n\tcase SKIPPED_COMMENT:\n\tcase SKIPPED_ESCAPE:\n\tcase SKIPPED_FIELD:\n\tcase SKIPPED_INVALID_QUOTE_END:\n\tcase SKIPPED_QUOTE_END:\n\tcase SKIPPED_QUOTED_ESCAPE:\n\tcase SKIPPED_QUOTED_FIELD:\n\t\tbreak;\n\t}\n\tthis._state = state;\n\treturn this;\n});\n\n/**\n* Sets the parser's error state.\n*\n* @private\n* @name _setErrorState\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} name - error name\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_setErrorState', function setErrorState( name ) {\n\tif ( name ) {\n\t\tdebug( 'Error: %s.', name );\n\t} else {\n\t\tdebug( 'Reset error state.' );\n\t}\n\tthis._errname = name;\n\treturn this;\n});\n\n/**\n* Closes the parser.\n*\n* @private\n* @name _close\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*/\nsetReadOnly( Parser.prototype, '_close', function close() {\n\tvar state;\n\tvar v;\n\n\tif ( this.done ) {\n\t\tthis._setErrorState( CLOSED )._changeState( ERROR );\n\t\treturn this;\n\t}\n\tif ( this._cursor >= 0 ) {\n\t\tstate = this._state;\n\t\tif ( state === INIT || state === FIELD || state === QUOTE_END ) {\n\t\t\t// If the current state is \"field\" or \"quote end\", we're in a valid state and can simply transition to our initial state to indicate that we've processed a record:\n\t\t\tthis._changeState( INIT )._onClose();\n\t\t} else {\n\t\t\t// Check if we were able to process part of a row...\n\t\t\tif ( this._col ) {\n\t\t\t\t// This may be an incomplete row!!!\n\t\t\t\tthis._onRow( this._getRow(), this._row, this._col );\n\t\t\t}\n\t\t\t// Extract however much of the current field we were able to process:\n\t\t\tv = this._slice( this._cidx, this._cursor );\n\n\t\t\t// Return the unfinished field to the client (although this may not be equal to the original character sequence, as escape sequences may have already been stripped!):\n\t\t\tdebug( 'Flush: %s', v );\n\t\t\tthis._onClose( v );\n\t\t}\n\t} else {\n\t\tthis._onClose();\n\t}\n\tdebug( 'Closed.' );\n\treturn this;\n});\n\n/**\n* Parses the next chunk.\n*\n* @name next\n* @memberof Parser.prototype\n* @type {Function}\n* @param {string} chunk - chunk\n* @throws {Error} unable to parse new chunks\n* @throws {Error} invalid field\n* @throws {Error} invalid record\n* @returns {Parser} parser instance\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*/\nsetReadOnly( Parser.prototype, 'next', function next( chunk ) {\n\tvar states;\n\tvar i;\n\n\tdebug( 'Chunk: %s', chunk );\n\n\tif ( this.done ) {\n\t\tthis._setErrorState( CLOSED )._changeState( ERROR );\n\t\treturn this;\n\t}\n\tstates = this._states;\n\tfor ( i = 0; i < chunk.length; i++ ) {\n\t\tstates[ this._state ]( chunk[ i ] );\n\t\tif ( this._state === CLOSED || this._state === ERROR ) {\n\t\t\treturn this;\n\t\t}\n\t}\n\treturn this;\n});\n\n/**\n* Closes the parser.\n*\n* @name close\n* @memberof Parser.prototype\n* @type {Function}\n* @returns {Parser} parser instance\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*\n* // ...\n*\n* parser.close();\n*/\nsetReadOnly( Parser.prototype, 'close', function close() {\n\tif ( this.done ) {\n\t\treturn this;\n\t}\n\tthis._changeState( CLOSED );\n\treturn this;\n});\n\n/**\n* Boolean indicating whether a parser is able to process new chunks.\n*\n* @name done\n* @memberof Parser.prototype\n* @readonly\n* @type {boolean}\n*\n* @example\n* var parser = new Parser();\n*\n* // ...\n*\n* parser.next( '1,2,3,4\\n' );\n*\n* // ...\n*\n* parser.next( '5,6,7,8\\n' );\n*\n* // ...\n*\n* parser.next( '9,10,11,12\\n' );\n*\n* // ...\n*\n* parser.close();\n*\n* // ...\n*\n* var bool = parser.done;\n* // returns true\n*/\nsetReadOnlyAccessor( Parser.prototype, 'done', function get() {\n\treturn ( this._state === CLOSED ) || ( this._state === ERROR );\n});\n\n\n// EXPORTS //\n\nexport default Parser;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name parse\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/utils/dsv/base/parse}\n*/\nimport parse from './../../../dsv/base/parse';\nsetReadOnly( ns, 'parse', parse );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name base\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/utils/dsv/base}\n*/\nimport base from './../../dsv/base';\nsetReadOnly( ns, 'base', base );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property `[key, value]` pairs.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} array containing key-value pairs\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 'bar'\n* };\n*\n* var entries = objectEntries( obj );\n* // e.g., returns [ ['beep', 'boop'], ['foo', 'bar'] ]\n*/\nfunction objectEntries( obj ) {\n\tvar keys;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( [ keys[i], obj[ keys[i] ] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property `[key, value]` pairs.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} array containing key-value pairs\n*\n* @example\n* function Foo() {\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var entries = objectEntriesIn( obj );\n* // e.g., returns [ ['beep', 'boop'], ['foo', 'bar'] ]\n*/\nfunction objectEntriesIn( obj ) {\n\tvar key;\n\tvar out;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tout = [];\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tout.push( [ key, obj[ key ] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectEntriesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertySymbols !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\n\n\n// VARIABLES //\n\nvar propertySymbols = Object.getOwnPropertySymbols;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own symbol properties\n*\n* @example\n* var symbols = getOwnPropertySymbols( {} );\n*/\nfunction getOwnPropertySymbols( value ) {\n\treturn propertySymbols( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own symbol properties.\n*\n* @module @stdlib/utils/property-symbols\n*\n* @example\n* import getOwnPropertySymbols from '@stdlib/utils/property-symbols';\n*\n* var symbols = getOwnPropertySymbols( {} );\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {EmptyArray} a list of own symbol properties\n*\n* @example\n* var symbols = getOwnPropertySymbols( {} );\n* // returns []\n*/\nfunction getOwnPropertySymbols() {\n\treturn [];\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './../../keys';\nimport propertySymbols from './../../property-symbols';\nimport isEnumerable from '@stdlib/assert/is-enumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property enumerable names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = enumerableProperties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction enumerableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tout = keys( value );\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isEnumerable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default enumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isEnumerable from '@stdlib/assert/is-enumerable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited enumerable property names and symbols\n*\n* @example\n* var props = enumerablePropertiesIn( [] );\n* // returns []\n*/\nfunction enumerablePropertiesIn( value ) {\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting enumerable properties...\n\tcache = {};\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a name more than once\n\t\t\t\tisEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default enumerablePropertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable symbol properties\n*\n* @example\n* var symbols = enumerablePropertySymbols( {} );\n*/\nfunction enumerablePropertySymbols( value ) {\n\tvar symbols;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tsymbols = getOwnPropertySymbols( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tif ( isEnumerableProperty( value, symbols[ i ] ) ) {\n\t\t\tsymbols[ n ] = symbols[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tsymbols.length = n;\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default enumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited enumerable symbol properties\n*\n* @example\n* var symbols = enumerablePropertySymbolsIn( {} );\n*/\nfunction enumerablePropertySymbolsIn( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting enumerable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default enumerablePropertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Alias for `eval` global.\n*\n* @module @stdlib/utils/eval\n*\n* @example\n* import evil from '@stdlib/utils/eval';\n*\n* var v = evil( '5*4*3*2*1' );\n* // returns 120\n*/\n\n// MODULES //\n\nvar evil = eval; // eslint-disable-line no-eval\n\n\n// EXPORTS //\n\nexport default evil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 1; // 1 bytes per uint8\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a value is a `BooleanArray`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `BooleanArray`\n*\n* @example\n* import BooleanArray from '@stdlib/array/bool';\n*\n* var bool = isBooleanArray( new BooleanArray( 10 ) );\n* // returns true\n*\n* bool = isBooleanArray( [] );\n* // returns false\n*/\nfunction isBooleanArray( value ) {\n\t// Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `BooleanArray` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-booleanarray`.\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'BooleanArray' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBooleanArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'float64': setFloat64,\n\t'float32': setFloat32,\n\t'int32': setInt32,\n\t'int16': setInt16,\n\t'int8': setInt8,\n\t'uint32': setUint32,\n\t'uint16': setUint16,\n\t'uint8': setUint8,\n\t'uint8c': setUint8c,\n\t'generic': setGeneric,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( 4 );\n*\n* setFloat64( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat64( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* var arr = new Float32Array( 4 );\n*\n* setFloat32( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var arr = new Int32Array( 4 );\n*\n* setInt32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int16Array from '@stdlib/array/int16';\n*\n* var arr = new Int16Array( 4 );\n*\n* setInt16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var arr = new Int8Array( 4 );\n*\n* setInt8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var arr = new Uint32Array( 4 );\n*\n* setUint32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint16Array from '@stdlib/array/uint16';\n*\n* var arr = new Uint16Array( 4 );\n*\n* setUint16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* var arr = new Uint8Array( 4 );\n*\n* setUint8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint8ClampedArray from '@stdlib/array/uint8c';\n*\n* var arr = new Uint8ClampedArray( 4 );\n*\n* setUint8c( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8c( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setGeneric( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setGeneric( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setArrayLike( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'complex128': setComplex128,\n\t'complex64': setComplex64,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import Complex128 from '@stdlib/complex/float64/ctor';\n* import real from '@stdlib/complex/float64/real';\n* import imag from '@stdlib/complex/float64/imag';\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex128( arr, 1, new Complex128( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 11.0\n*/\nfunction setComplex128( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex64( arr, 1, new Complex64( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setComplex64( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* setArrayLike( arr, 2, 10 );\n*\n* var v = arr[ 2 ];\n* // returns 10\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 1, new Complex64( 10.0, 11.0 ) );\n*\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from './../../../base/assert/is-accessor-array';\nimport getter from './../../../base/getter';\nimport setter from './../../../base/setter';\nimport accessorGetter from './../../../base/accessor-getter';\nimport accessorSetter from './../../../base/accessor-setter';\nimport dtype from './../../../dtype';\n\n\n// MAIN //\n\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: reference to the input array.\n*     -   **dtype**: array data type.\n*     -   **accessorProtocol**: `boolean` indicating whether the input array uses accessors for getting and setting elements.\n*     -   **accessors**: a two-element array whose first element is an accessor for retrieving an array element and whose second element is an accessor for setting an array element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\nfunction arraylike2object( x ) {\n\tvar dt = dtype( x );\n\tif ( isAccessorArray( x ) ) {\n\t\treturn {\n\t\t\t'data': x,\n\t\t\t'dtype': dt,\n\t\t\t'accessorProtocol': true,\n\t\t\t'accessors': [\n\t\t\t\taccessorGetter( dt ),\n\t\t\t\taccessorSetter( dt )\n\t\t\t]\n\t\t};\n\t}\n\treturn {\n\t\t'data': x,\n\t\t'dtype': dt,\n\t\t'accessorProtocol': false,\n\t\t'accessors': [\n\t\t\tgetter( dt ),\n\t\t\tsetter( dt )\n\t\t]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default arraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint8Array from '@stdlib/array/uint8';\n\n\n// MAIN //\n\n/**\n* Reinterprets a `BooleanArray` as a `Uint8Array`.\n*\n* @param {BooleanArray} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Uint8Array} `Uint8Array` view\n*\n* @example\n* import BooleanArray from '@stdlib/array/bool';\n*\n* var x = new BooleanArray( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Uint8Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Uint8Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), x.length-offset ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nimport isBooleanArray from './../../../base/assert/is-booleanarray';\nimport arraylike2object from './../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpretBoolean from '@stdlib/strided/base/reinterpret-boolean';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether all elements in an array are truthy.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internal( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = internal( x );\n* // returns false\n*/\nfunction internal( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( !x[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in a complex number array are truthy.\n*\n* @private\n* @param {Collection} x - underlying data buffer\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internalComplex( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = internalComplex( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 0 ];\n*\n* var out = internalComplex( x );\n* // returns false\n*/\nfunction internalComplex( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i += 2 ) {\n\t\tif ( !( x[ i ] || x[ i+1 ] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array are truthy.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var out = accessors( x );\n* // returns true\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 0, 4 ] ) );\n*\n* var out = accessors( x );\n* // returns false\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( !get( data, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array are truthy.\n*\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = every( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = every( x );\n* // returns false\n*/\nfunction every( x ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and test interleaved real and imaginary components, where we consider a complex number to be truthy if at least one component is non-zero...\n\t\tif ( isComplex128Array( x ) ) {\n\t\t\treturn internalComplex( reinterpret128( x, 0 ) );\n\t\t}\n\t\tif ( isComplex64Array( x ) ) {\n\t\t\treturn internalComplex( reinterpret64( x, 0 ) );\n\t\t}\n\t\t// If provided a boolean array, reinterpret as a typed array and test each element...\n\t\tif ( isBooleanArray( x ) ) {\n\t\t\treturn internal( reinterpretBoolean( x, 0 ) );\n\t\t}\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nexport default every;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport base from '@stdlib/array/base/every';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection are truthy.\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} must provide a collection\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var arr = [ 1, 1, 1, 1, 1 ];\n*\n* var bool = every( arr );\n* // returns true\n*/\nfunction every( collection ) {\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a collection. Value: `%s`.', collection ) );\n\t}\n\treturn base( collection );\n}\n\n\n// EXPORTS //\n\nexport default every;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var bool = everyBy( arr, isPositive );\n* // returns true\n*/\nfunction everyBy( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( !out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default everyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `every` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `every()`, `[].push()` behavior is consistent with `everyByRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var bool = everyByRight( arr, isPositive );\n* // returns true\n*/\nfunction everyByRight( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( !out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default everyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a POSIX filename extension.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EXTNAME_POSIX = reExtnamePosix();\n* var ext = RE_EXTNAME_POSIX.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtnamePosix() {\n\treturn /^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nexport default reExtnamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reExtnamePosix from './main.js';\n\n\n// MAIN //\n\n/**\n* Captures a POSIX filename extension.  Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_EXTNAME_POSIX = reExtnamePosix();\n\n\n// EXPORTS //\n\nexport default RE_EXTNAME_POSIX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a Windows filename extension.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EXTNAME_WINDOWS = reExtnameWindows();\n* var ext = RE_EXTNAME_WINDOWS.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtnameWindows() {\n\treturn /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nexport default reExtnameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture a POSIX filename extension.\n*\n* @module @stdlib/regexp/extname-posix\n*\n* @example\n* import reExtnamePosix from '@stdlib/regexp/extname-posix';\n*\n* var RE_EXTNAME_POSIX = reExtnamePosix();\n* var ext = RE_EXTNAME_POSIX.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reExtnameWindows from './main.js';\n\n\n// MAIN //\n\n/**\n* Captures a Windows filename extension. Modified from Node.js [source][1].\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_EXTNAME_WINDOWS = reExtnameWindows();\n\n\n// EXPORTS //\n\nexport default RE_EXTNAME_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture a Windows filename extension.\n*\n* @module @stdlib/regexp/extname-windows\n*\n* @example\n* import reExtnameWindows from '@stdlib/regexp/extname-windows';\n*\n* var RE_EXTNAME_WINDOWS = reExtnameWindows();\n* var ext = RE_EXTNAME_WINDOWS.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as contains } from '@stdlib/array/base/assert/contains';\nimport format from '@stdlib/string/format';\nimport posix from './../../extname-posix';\nimport win32 from './../../extname-windows';\nimport IS_WINDOWS from '@stdlib/assert/is-windows';\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\nvar isPlatform = contains( PLATFORMS );\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a filename extension.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reExtname();\n* var base = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtname( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isPlatform( platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nexport default reExtname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a filename extension.\n*\n* @module @stdlib/regexp/extname\n*\n* @example\n* import reExtname from '@stdlib/regexp/extname';\n* var RE_EXTNAME = reExtname();\n*\n* // On a POSIX platform...\n* var ext = RE_EXTNAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '.js'\n*\n* @example\n* import reExtname from '@stdlib/regexp/extname';\n* var RE_EXTNAME = reExtname();\n*\n* // On a Windows platform...\n* var ext = RE_EXTNAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport { REGEXP as posix } from './../../extname-posix';\nimport { REGEXP as win32 } from './../../extname-windows';\nimport IS_WINDOWS from '@stdlib/assert/is-windows';\nimport main from './main.js';\n\n\n// VARIABLES //\n\nvar REGEXP = ( IS_WINDOWS ) ? win32 : posix;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_POSIX', posix );\nsetReadOnly( main, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { REGEXP as RE_EXTNAME } from '@stdlib/regexp/extname';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a filename extension.\n*\n* @param {string} filename - filename\n* @throws {TypeError} must provide a string primitive\n* @returns {string} filename extension\n*\n* @example\n* var ext = extname( 'index.js' );\n* // returns '.js'\n*/\nfunction extname( filename ) {\n\tif ( !isString( filename ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Filename must be a string. Value: `%s`.', filename ) );\n\t}\n\treturn RE_EXTNAME.exec( filename )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default extname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function according to a predicate function.\n*\n* ## Notes\n*\n-   The predicate function is provided the following arguments:\n*\n*     -   **value**: argument value.\n*     -   **index**: argument index.\n*\n* -   Only those arguments in which the predicate function returns a truthy value are applied to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} wrapped function\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* function predicate( v ) {\n*     return ( v !== 2 );\n* }\n*\n* var bar = filterArguments( foo, predicate );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction filterArguments( fcn, predicate, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\treturn wrap;\n\n\t/**\n\t* Invokes a function according to a predicate function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction wrap() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( predicate( v, i ) ) {\n\t\t\t\targs.push( v );\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default filterArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isCollection from '@stdlib/assert/is-collection';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar RETURNS = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Finds elements in an array-like object that satisfy a test condition.\n*\n* @param {(Collection|string)} arr - object from which elements will be tested\n* @param {Options} [options] - function options\n* @param {integer} [options.k=arr.length] - limits the number of returned elements\n* @param {string} [options.returns='indices'] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} clbk - function invoked for each array element. If the return value is truthy, the value is considered to have satisfied the test condition.\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} `options.k` must be an integer\n* @throws {TypeError} `options.returns` must be a string equal to `values`, `indices` or `*`\n* @returns {Array} array of indices, element values, or arrays of index-value pairs\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var vals = find( data, condition );\n* // returns [ 0, 2, 3 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': 2,\n*     'returns': 'values'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ 30, 50 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var vals = find( data, condition );\n* // returns []\n*\n* function condition( val ) {\n*     return val > 1000;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': -2,\n*     'returns': 'values'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ 60, 50 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': -2,\n*     'returns': '*'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ [3, 60], [2, 50] ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*/\nfunction find( arr, options, clbk ) { // eslint-disable-line stdlib/no-redeclare\n\tvar count;\n\tvar mode;\n\tvar opts;\n\tvar len;\n\tvar out;\n\tvar ret;\n\tvar cb;\n\tvar i;\n\tvar k;\n\tvar v;\n\n\tmode = 0;\n\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( arguments.length < 3 ) {\n\t\topts = {};\n\t\tcb = options;\n\t} else {\n\t\topts = options;\n\t\tcb = clbk;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( !isObject( opts ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t}\n\tif ( hasOwnProp( opts, 'k' ) ) {\n\t\tk = opts.k;\n\t\tif ( !isInteger( k ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'k', k ) );\n\t\t}\n\t} else {\n\t\tk = len;\n\t}\n\tif ( hasOwnProp( opts, 'returns' ) ) {\n\t\tret = opts.returns;\n\t\tif ( !isString( ret ) || indexOf( RETURNS, ret ) === -1 ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', RETURNS.join( '\", \"' ), ret ) );\n\t\t}\n\t\tif ( ret === 'values' ) {\n\t\t\tmode = 1;\n\t\t} else if ( ret === '*' ) {\n\t\t\tmode = 2;\n\t\t}\n\t}\n\tout = [];\n\tcount = 0;\n\n\tif ( k === 0 ) {\n\t\treturn out;\n\t}\n\tif ( k > 0 ) {\n\t\t// Search moving from begin-to-end [0,1,...]:\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = arr[ i ];\n\t\t\tif ( cb( v, i, arr ) ) { // eslint-disable-line node/callback-return\n\t\t\t\tif ( mode === 2 ) {\n\t\t\t\t\tout.push( [ i, v ] );\n\t\t\t\t} else if ( mode === 1 ) {\n\t\t\t\t\tout.push( v );\n\t\t\t\t} else {\n\t\t\t\t\tout.push( i );\n\t\t\t\t}\n\t\t\t\tcount += 1;\n\t\t\t\tif ( count === k ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// Search moving from end-to-begin [...,2,1,0]:\n\tk = -k;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tv = arr[ i ];\n\t\tif ( cb( v, i, arr ) ) { // eslint-disable-line node/callback-return\n\t\t\tif ( mode === 2 ) {\n\t\t\t\tout.push( [ i, v ] );\n\t\t\t} else if ( mode === 1 ) {\n\t\t\t\tout.push( v );\n\t\t\t} else {\n\t\t\t\tout.push( i );\n\t\t\t}\n\t\t\tcount += 1;\n\t\t\tif ( count === k ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default find;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum double-precision floating-point number.\n*\n* @module @stdlib/constants/float64/max\n* @type {number}\n*\n* @example\n* import FLOAT64_MAX from '@stdlib/constants/float64/max';\n* // returns 1.7976931348623157e+308\n*/\n\n\n// MAIN //\n\n/**\n* Maximum double-precision floating-point number.\n*\n* ## Notes\n*\n* The maximum is given by\n*\n* ```tex\n* 2^{1023} (2 - 2^{-52})\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.7976931348623157e+308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX = 1.7976931348623157e+308;\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_MAX from '@stdlib/constants/float64/max';\n\n\n// MAIN //\n\nvar defaults = {\n\t'copy': false,\n\t'depth': FLOAT64_MAX\n};\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\n\n\n// MAIN //\n\n/**\n* Recursively flattens an array.\n*\n* @private\n* @param {Array} out - output array\n* @param {ArrayLikeObject} arr - input array\n* @param {NonNegativeInteger} depth - recursion depth\n* @returns {Array} output array\n*/\nfunction recurse( out, arr, depth ) {\n\tvar v;\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( depth && isArrayLikeObject( v ) ) {\n\t\t\trecurse( out, v, depth-1 );\n\t\t} else {\n\t\t\tout.push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default recurse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from './../../copy';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport recurse from './recurse.js';\n\n\n// MAIN //\n\n/**\n* Flattens an array.\n*\n* @param {ArrayLikeObject} arr - input array\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy array elements\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} flattened array\n*\n* @example\n* var arr = [ 1, [2, [3, [4, [ 5 ], 6], 7], 8], 9 ];\n*\n* var out = flattenArray( arr );\n* // returns [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n*/\nfunction flattenArray( arr, options ) {\n\tvar opts;\n\tvar err;\n\tvar out;\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\topts = {\n\t\t'copy': defaults.copy,\n\t\t'depth': defaults.depth\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.depth === 0 ) {\n\t\tout = arr;\n\t} else {\n\t\tout = recurse( [], arr, opts.depth );\n\t}\n\tif ( opts.copy ) {\n\t\treturn copy( out );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flattenArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - depth to flatten\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy array elements\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'depth': 10,\n*     'copy': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'depth' ) ) {\n\t\topts.depth = options.depth;\n\t\tif ( !isNonNegativeInteger( opts.depth ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'depth', opts.depth ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only positive integers.\n*\n* @module @stdlib/assert/is-positive-integer-array\n*\n* @example\n* import isPositiveIntegerArray from '@stdlib/assert/is-positive-integer-array';\n*\n* var bool = isPositiveIntegerArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* import { primitives as isPositiveIntegerArray } from '@stdlib/assert/is-positive-integer-array';\n*\n* var bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* import { objects as isPositiveIntegerArray } from '@stdlib/assert/is-positive-integer-array';\n*\n* var bool = isPositiveIntegerArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport isPositiveInteger from './../../is-positive-integer';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport arrayfun from './../../tools/array-like-function';\n\n\n// VARIABLES //\n\nvar isPrimitiveArray = arrayfun( isPositiveInteger.isPrimitive );\nvar isObjectArray = arrayfun( isPositiveInteger.isObject );\n\n\n// MAIN //\n\nvar isPositiveIntegerArray = arrayfun( isPositiveInteger );\nsetReadOnly( isPositiveIntegerArray, 'primitives', isPrimitiveArray );\nsetReadOnly( isPositiveIntegerArray, 'objects', isObjectArray );\n\n\n// EXPORTS //\n\nexport default isPositiveIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_MAX from '@stdlib/constants/float64/max';\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'delimiter': '.',\n\t\t'depth': FLOAT64_MAX,\n\t\t'copy': false\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - depth to flatten\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter] - key path delimiter\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'depth': 10,\n*     'copy': false,\n*     'delimiter': '|',\n*     'flattenArrays': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'depth' ) ) {\n\t\topts.depth = options.depth;\n\t\tif ( !isNonNegativeInteger( opts.depth ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'depth', opts.depth ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'flattenArrays' ) ) {\n\t\topts.flattenArrays = options.flattenArrays;\n\t\tif ( !isBoolean( opts.flattenArrays ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'flattenArrays', opts.flattenArrays ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'delimiter' ) ) {\n\t\topts.delimiter = options.delimiter;\n\t\tif ( !isString( opts.delimiter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'delimiter', opts.delimiter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isPlainObject from '@stdlib/assert/is-plain-object';\nimport isArray from '@stdlib/assert/is-array';\n\n\n// MAIN //\n\n/**\n* Recursively flattens an object.\n*\n* @private\n* @param {Object} out - output object\n* @param {ObjectLike} obj - input object\n* @param {string} prefix - key prefix\n* @param {NonNegativeInteger} depth - recursion depth\n* @param {Options} opts - options\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} output object\n*/\nfunction recurse( out, obj, prefix, depth, opts ) {\n\tvar keys;\n\tvar val;\n\tvar key;\n\tvar i;\n\tif ( prefix ) {\n\t\tprefix += opts.delimiter;\n\t}\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tval = obj[ keys[i] ];\n\t\tkey = prefix + keys[ i ];\n\t\tif ( depth ) {\n\t\t\tif (\n\t\t\t\t(isPlainObject( val ) && objectKeys( val ).length) ||\n\t\t\t\t(opts.flattenArrays && isArray( val ))\n\t\t\t) {\n\t\t\t\trecurse( out, val, key, depth-1, opts );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tout[ key ] = val;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default recurse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from './../../copy';\nimport recurse from './recurse.js';\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @private\n* @param {ObjectLike} obj - object to flatten\n* @param {Object} opts - options\n* @param {NonNegativeInteger} opts.depth - maximum depth to flatten\n* @param {boolean} opts.copy - boolean indicating whether to deep copy\n* @param {boolean} opts.flattenArrays - boolean indicating whether to flatten arrays\n* @param {string} opts.delimiter - key path delimiter\n* @returns {Object} flattened object\n*/\nfunction flatten( obj, opts ) {\n\tvar out;\n\tif ( opts.depth === 0 ) {\n\t\tout = obj;\n\t} else {\n\t\tout = recurse( {}, obj, '', opts.depth, opts );\n\t}\n\tif ( opts.copy ) {\n\t\treturn copy( out );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport flatten from './flatten.js';\n\n\n// MAIN //\n\n/**\n* Flattens an object.\n*\n* @param {ObjectLike} obj - object to flatten\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {ObjectLike} flattened object\n*\n* @example\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*/\nfunction flattenObject( obj, options ) {\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\treturn flatten( obj, opts );\n}\n\n\n// EXPORTS //\n\nexport default flattenObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* forEach( arr, log );\n*/\nfunction forEach( collection, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default forEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `forEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `forEach()`, `[].push()` behavior is consistent with `forEachRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* forEachRight( arr, log );\n*/\nfunction forEachRight( collection, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default forEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own and inherited enumerable property of an object.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n*\n* @param {Object} obj - input object\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} obj - input object\n*\n* @example\n* function log( v, key ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* function Foo() {\n*     this.a = 1;\n*     this.b = 2;\n*     return this;\n* }\n*\n* Foo.prototype.c = 3;\n* Foo.prototype.d = 4;\n*\n* var obj = new Foo();\n*\n* forIn( obj, log );\n*/\nfunction forIn( obj, fcn, thisArg ) {\n\tvar bool;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tbool = fcn.call( thisArg, obj[ key ], key, obj );\n\t\tif ( bool === false ) {\n\t\t\treturn obj;\n\t\t}\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default forIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own enumerable property of an object.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n*\n* @param {Object} obj - input object\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} obj - input object\n*\n* @example\n* function log( v, key ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3,\n*     'd': 4\n* };\n*\n* forOwn( obj, log );\n*/\nfunction forOwn( obj, fcn, thisArg ) {\n\tvar keys;\n\tvar bool;\n\tvar len;\n\tvar k;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tk = keys[ i ];\n\t\tbool = fcn.call( thisArg, obj[ k ], k, obj );\n\t\tif ( bool === false ) {\n\t\t\treturn obj;\n\t\t}\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default forOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an array.\n*\n* @module @stdlib/utils/flatten-array\n*\n* @example\n* import flattenArray from '@stdlib/utils/flatten-array';\n*\n* var arr = [ 1, [2, [3, [4, [ 5 ], 6], 7], 8], 9 ];\n*\n* var out = flattenArray( arr );\n* // returns [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n*\n* @example\n* import flattenArray from '@stdlib/utils/flatten-array';\n*\n* var flatten = flattenArray.factory( [2,2], {\n*     'copy': false\n* });\n*\n* var out = flatten( [[1,2],[3,4]] );\n* // returns [ 1, 2, 3, 4 ]\n*\n* out = flatten( [[5,6],[7,8]] );\n* // returns [ 5, 6, 7, 8 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { primitives as isPositiveIntegerArray } from '@stdlib/assert/is-positive-integer-array';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport genFcn from './gen_fcn.js';\nimport wrapFlatten from './wrap_flatten.js';\nimport wrapFlattenCopy from './wrap_flatten_copy.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for flattening arrays having specified dimensions.\n*\n* @param {PositiveIntegerArray} dims - dimensions\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy array elements\n* @throws {TypeError} first argument must be an array of positive integers\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} flatten function\n*\n* @example\n* var flatten = factory( [2,2], {\n*     'copy': false\n* });\n*\n* var out = flatten( [[1,2],[3,4]] );\n* // returns [ 1, 2, 3, 4 ]\n*\n* out = flatten( [[5,6],[7,8]] );\n* // returns [ 5, 6, 7, 8 ]\n*/\nfunction factory( dims, options ) {\n\tvar copyFLG;\n\tvar flatten;\n\tif ( !isPositiveIntegerArray( dims ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of positive integers. Value: `%s`.', dims ) );\n\t}\n\tcopyFLG = defaults.copy;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\tcopyFLG = options.copy;\n\t\t\tif ( !isBoolean( copyFLG ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', copyFLG ) );\n\t\t\t}\n\t\t}\n\t}\n\tflatten = genFcn( dims );\n\tif ( copyFLG ) {\n\t\treturn wrapFlattenCopy( flatten );\n\t}\n\treturn wrapFlatten( flatten );\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Fcn from '@stdlib/function/ctor';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array containing elements all having the same dimensions.\n*\n* @private\n* @param {PositiveIntegerArray} dims - dimensions\n* @returns {Function} flatten function\n*/\nfunction genFcn( dims ) {\n\tvar len;\n\tvar n;\n\tvar f;\n\tvar i;\n\n\t// Code generation. Start with the function definition:\n\tf = 'return function flattenArray(x){';\n\n\t// Create the function body...\n\tlen = dims.length;\n\tn = len - 1;\n\n\t// Create the variables...\n\tf += 'var o=[];var ';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += 'i' + i;\n\t\tif ( i < n ) {\n\t\t\tf += ',';\n\t\t} else {\n\t\t\tf += ';';\n\t\t}\n\t}\n\t// Create the nested for loops...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += 'for(i' + i + '=0;i' + i + '<' + dims[ i ] + ';i' + i + '++){';\n\t}\n\t// Create the code which accesses the nested array values and pushes them onto the flattened array.\n\tf += 'o.push(x';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += '[i' + i + ']';\n\t}\n\tf += ');';\n\n\t// Closing braces...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf += '}';\n\t}\n\tf += 'return o;';\n\n\t// Close the function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=flatten_array.gen_fcn.js';\n\n\t// Create the function in the global scope:\n\treturn ( new Fcn( f ) )();\n\n\t/*\n\t* e.g.,\n\t*\n\t*   function flattenArray( x ) {\n\t*       var o = [];\n\t*       var i0, i1;\n\t*       for ( i0 = 0; i0 < 2; i0++ ) {\n\t*           for ( i1 = 0; i1 < 2; i1++ ) {\n\t*               o.push( x[i0][i1] );\n\t*           }\n\t*       }\n\t*       return o;\n\t*   }\n\t*/\n}\n\n\n// EXPORTS //\n\nexport default genFcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport format from '@stdlib/string/format';\nimport copy from './../../copy';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array and deep copy.\n*\n* @private\n* @param {Function} flatten - flatten function\n* @returns {Function} wrapped flatten function\n*/\nfunction wrap( flatten ) {\n\treturn flattenArray;\n\n\t/**\n\t* Flattens an array and deep copies array elements.\n\t*\n\t* @private\n\t* @param {ArrayLikeObject} arr - array to flatten\n\t* @throws {TypeError} must provide an array-like object\n\t* @returns {Array} flattened array\n\t*/\n\tfunction flattenArray( arr ) {\n\t\tif ( !isArrayLikeObject( arr ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t\t}\n\t\treturn copy( flatten( arr ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an array.\n*\n* @private\n* @param {Function} flatten - flatten function\n* @returns {Function} wrapped flatten function\n*/\nfunction wrap( flatten ) {\n\treturn flattenArray;\n\n\t/**\n\t* Flattens an array.\n\t*\n\t* @private\n\t* @param {ArrayLikeObject} arr - array to flatten\n\t* @throws {TypeError} must provide an array-like object\n\t* @returns {Array} flattened array\n\t*/\n\tfunction flattenArray( arr ) {\n\t\tif ( !isArrayLikeObject( arr ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t\t}\n\t\treturn flatten( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an object.\n*\n* @module @stdlib/utils/flatten-object\n*\n* @example\n* import flattenObject from '@stdlib/utils/flatten-object';\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flattenObject( obj );\n* // returns {'a.b.c':'d'}\n*\n* @example\n* import flattenObject from '@stdlib/utils/flatten-object';\n*\n* var flatten = flattenObject.factory({\n*     'depth': 2,\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n*\n* var out = flatten( obj );\n* // returns {'a|b':{'c':'d'}}\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport flatten from './flatten.js';\n\n\n// MAIN //\n\n/**\n* Returns a function to flatten an object.\n*\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.depth] - maximum depth to flatten\n* @param {boolean} [options.copy=false] - boolean indicating whether to deep copy\n* @param {boolean} [options.flattenArrays=false] - boolean indicating whether to flatten arrays\n* @param {string} [options.delimiter='.'] - key path delimiter\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} flatten function\n*\n* @example\n* var flatten = factory({\n*     'copy': true,\n*     'delimiter': '|'\n* });\n*\n* var obj = {'a':{'b':{'c':'d'}}};\n* var out = flatten( obj );\n* // throws <RangeError>\n*/\nfunction factory( options ) {\n\tvar opts;\n\tvar err;\n\n\topts = defaults();\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn flattenObject;\n\n\t/**\n\t* Flattens an object.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - object to flatten\n\t* @throws {TypeError} first argument must be object-like\n\t* @returns {Object} flattened object\n\t*/\n\tfunction flattenObject( obj ) {\n\t\tif ( !isObjectLike( obj ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t\t}\n\t\treturn flatten( obj, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arrayfun from './../../tools/array-function';\nimport isArray from './../../is-array';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array of arrays.\n*\n* @name isArrayArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an array of arrays\n*\n* @example\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\nvar isArrayArray = arrayfun( isArray );\n\n\n// EXPORTS //\n\nexport default isArrayArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayArray from '@stdlib/assert/is-array-array';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Creates an object from an array of key-value pairs.\n*\n* @param {ArrayArray} entries - input object\n* @throws {TypeError} must provide an array of arrays\n* @returns {Object} object created from `[key, value]` pairs\n*\n* @example\n* var entries = [ ['beep', 'boop'], ['foo', 'bar'] ];\n*\n* var obj = objectFromEntries( entries );\n* // returns {'beep': 'boop', 'foo': 'bar'}\n*/\nfunction objectFromEntries( entries ) {\n\tvar out;\n\tvar i;\n\tif ( !isArrayArray( entries ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array of arrays. Value: `%s`.', entries ) );\n\t}\n\tout = {};\n\tfor ( i = 0; i < entries.length; i++ ) {\n\t\tout[ entries[i][0] ] = entries[ i ][ 1 ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectFromEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dummy function.\n*\n* @private\n*/\nfunction foo() {\n\t// No-op...\n}\n\n\n// EXPORTS //\n\nexport default foo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport foo from './foo.js';\n\n\n// MAIN //\n\n/**\n* Tests for native function `name` support.\n*\n* @returns {boolean} boolean indicating if an environment has function `name` support\n*\n* @example\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/\nfunction hasFunctionNameSupport() {\n\treturn ( foo.name === 'foo' );\n}\n\n\n// EXPORTS //\n\nexport default hasFunctionNameSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport hasFunctionNameSupport from '@stdlib/assert/has-function-name-support';\nimport format from '@stdlib/string/format';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\n\n\n// VARIABLES //\n\nvar isFunctionNameSupported = hasFunctionNameSupport();\n\n\n// MAIN //\n\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/\nfunction functionName( fcn ) {\n\t// TODO: add support for generator functions?\n\tif ( isFunction( fcn ) === false ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isFunctionNameSupported ) {\n\t\treturn fcn.name;\n\t}\n\treturn RE.exec( fcn.toString() )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default functionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Function sequence.\n*\n* @param {...Function} f - functions to evaluate in sequential order\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} pipeline function\n*\n* @example\n* function a( x ) {\n*     return 2 * x;\n* }\n*\n* function b( x ) {\n*     return x + 3;\n* }\n*\n* function c( x ) {\n*     return x / 5;\n* }\n*\n* var f = funseq( a, b, c );\n*\n* var z = f( 6 );\n* // returns 3\n*/\nfunction funseq() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to execute sequentially.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} result\n\t*/\n\tfunction pipeline() {\n\t\tvar args;\n\t\tvar i;\n\t\targs = new Array( arguments.length );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\targs = f[ 0 ].apply( null, args );\n\t\tfor ( i = 1; i < nFuncs; i++ ) {\n\t\t\targs = f[ i ]( args );\n\t\t}\n\t\treturn args;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default funseq;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport returnValues from '@stdlib/array/base/group-values';\nimport returnIndices from '@stdlib/array/base/group-indices';\nimport returnPairs from '@stdlib/array/base/group-entries';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Groups values as arrays associated with distinct keys.\n*\n* @param {Collection} collection - collection to group\n* @param {Options} [options] - function options\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Collection} groups - collection defining which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a collection\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} first and last arguments must be the same length\n* @returns {Object} group results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = group( arr, groups );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = group( arr, opts, groups );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction group( collection, options, groups ) {\n\tvar opts;\n\tvar err;\n\tvar g;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tg = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tg = groups;\n\t}\n\tif ( !isCollection( g ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a collection. Value: `%s`.', g ) );\n\t}\n\tif ( collection.length !== g.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and last arguments must be the same length.' );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, g );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, g );\n\t}\n\treturn returnPairs( collection, g );\n}\n\n\n// EXPORTS //\n\nexport default group;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups elements as arrays associated with distinct keys.\n*\n* @param {Collection} x - input array\n* @param {Collection} groups - array defining which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {Object} group results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = groupValues( x, groups );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupValues( x, groups ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( groups.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( groups );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( groups, i ).toString();\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( v );\n\t\t} else {\n\t\t\tout[ g ] = [ v ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups element indices as arrays associated with distinct keys.\n*\n* @param {Collection} x - input array\n* @param {Collection} groups - array defining which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {Object} group results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = groupIndices( x, groups );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*/\nfunction groupIndices( x, groups ) {\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( groups.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\t// Resolve accessors for retrieving array elements:\n\tgget = resolveGetter( groups );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = gget( groups, i ).toString();\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( i );\n\t\t} else {\n\t\t\tout[ g ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIndices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups element entries as arrays associated with distinct keys.\n*\n* @param {Collection} x - input array\n* @param {Collection} groups - array defining which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {Object} group results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = groupEntries( x, groups );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction groupEntries( x, groups ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( groups.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( groups );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( groups, i ).toString();\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ i, v ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnIndices from './return_indices.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function.\n*\n* @param {Collection} collection - collection to group\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, indicator );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n* var out = groupBy( arr, opts, indicator );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = groupBy( arr, opts, indicator );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction groupBy( collection, options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, opts, cb );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, opts, cb );\n\t}\n\treturn returnPairs( collection, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the indicator function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, {}, indicator );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupBy( collection, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tg = indicator.call( thisArg, v, i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( v );\n\t\t} else {\n\t\t\tout[ g ] = [ v ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results according to element indices.\n*\n* ## Notes\n*\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, {}, indicator );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*/\nfunction groupBy( collection, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = indicator.call( thisArg, collection[ i ], i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( i );\n\t\t} else {\n\t\t\tout[ g ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as index-element values.\n*\n* ## Notes\n*\n* -   We need to cache the collection value to prevent the edge case where, during the invocation of the indicator function, the element at index `i` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n* -   Checking for an \"own\" property is necessary to guard against the edge case where an indicator function returns a group identifier which matches a method or property on the `Object` prototype.\n*\n* @private\n* @param {Collection} collection - collection to group\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupBy( arr, {}, indicator );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction groupBy( collection, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar len;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\tthisArg = opts.thisArg;\n\tlen = collection.length;\n\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tg = indicator.call( thisArg, v, i );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ i, v ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Groups an object's own and inherited property values according to an indicator function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = groupIn( obj, opts, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var opts = {\n*     'returns': '*'\n* };\n* var out = groupIn( obj, opts, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupIn( obj, options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupIn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tv = obj[ key ];\n\t\tg = indicator.call( thisArg, v, key );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( v );\n\t\t} else {\n\t\t\tout[ g ] = [ v ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*/\nfunction groupIn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tg = indicator.call( thisArg, obj[ key ], key );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( key );\n\t\t} else {\n\t\t\tout[ g ] = [ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* function Foo() {\n*     this.a = 'beep';\n*     this.b = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype = Object.create( null );\n* Foo.prototype.c = 'foo';\n* Foo.prototype.d = 'bar';\n*\n* var obj = new Foo();\n*\n* var out = groupIn( obj, {}, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupIn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tv = obj[ key ];\n\t\tg = indicator.call( thisArg, v, key );\n\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\tout[ g ].push( [ key, v ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ key, v ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'keys', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*',\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport returnValues from './return_values.js';\nimport returnKeys from './return_keys.js';\nimport returnPairs from './return_pairs.js';\n\n\n// MAIN //\n\n/**\n* Groups an object's own property values according to an indicator function.\n*\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `keys`, keys are returned; if `*`, both keys and values are returned\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @throws {TypeError} first argument must be an object, array, or typed array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': 'keys'\n* };\n* var out = groupOwn( obj, opts, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var opts = {\n*     'returns': '*'\n* };\n* var out = groupOwn( obj, opts, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupOwn( obj, options, indicator ) {\n\tvar opts;\n\tvar err;\n\tvar cb;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( obj, opts, cb );\n\t}\n\tif ( opts.returns === 'keys' ) {\n\t\treturn returnKeys( obj, opts, cb );\n\t}\n\treturn returnPairs( obj, opts, cb );\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as object values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupOwn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tv = obj[ key ];\n\t\t\tg = indicator.call( thisArg, v, key );\n\t\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\t\tout[ g ].push( v );\n\t\t\t} else {\n\t\t\t\tout[ g ] = [ v ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as keys.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function specifying which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, {}, indicator );\n* // e.g., returns { 'b': [ 'a', 'b', 'd' ], 'f': [ 'c' ] }\n*/\nfunction groupOwn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tg = indicator.call( thisArg, obj[ key ], key );\n\t\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\t\tout[ g ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ g ] = [ key ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Groups values according to an indicator function and outputs results as key-value values.\n*\n* ## Notes\n*\n* -   We need to cache the object value to prevent the edge case where, during the invocation of the indicator function, the value at key `k` is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @private\n* @param {(Object|Array|TypedArray)} obj - input object\n* @param {Options} opts - function options\n* @param {*} [opts.thisArg] - execution context\n* @param {Function} indicator - indicator function indicating which group an element in the input object belongs to\n* @returns {Object} results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop',\n*     'c': 'foo',\n*     'd': 'bar'\n* };\n* var out = groupOwn( obj, {}, indicator );\n* // e.g., returns { 'b': [ [ 'a', 'beep' ], [ 'b', 'boop' ], [ 'd', 'bar' ] ], 'f': [ [ 'c', 'foo' ] ] }\n*/\nfunction groupOwn( obj, opts, indicator ) {\n\tvar thisArg;\n\tvar out;\n\tvar key;\n\tvar v;\n\tvar g;\n\n\tthisArg = opts.thisArg;\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tv = obj[ key ];\n\t\t\tg = indicator.call( thisArg, v, key );\n\t\t\tif ( hasOwnProp( out, g ) ) {\n\t\t\t\tout[ g ].push( [ key, v ] );\n\t\t\t} else {\n\t\t\t\tout[ g ] = [ [ key, v ] ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupOwn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Identity function.\n*\n* @param {*} x - input value\n* @returns {*} input value\n*\n* @example\n* var v = identity( 3.14 );\n* // returns 3.14\n*/\nfunction identity( x ) {\n\treturn x;\n}\n\n\n// EXPORTS //\n\nexport default identity;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* If a condition is truthy, returns `x`; otherwise, returns `y`.\n*\n* @param {boolean} bool - condition\n* @param {*} x - value to return if a condition is truthy\n* @param {*} y - value to return if a condition is falsy\n* @returns {*} either `x` or `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* var z = ifelse( randu() > 0.5, 1.0, -1.0 );\n* // returns <number>\n*/\nfunction ifelse( bool, x, y ) {\n\tif ( bool ) {\n\t\treturn x;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default ifelse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a condition is truthy, invokes `x`; otherwise, invokes `y`.\n*\n* @param {boolean} bool - condition\n* @param {Function} x - function to invoke if a condition is truthy\n* @param {Function} y - function to invoke if a condition is falsy\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {*} return value of either `x` or `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x() {\n*     return randu() * 100.0;\n* }\n*\n* function y() {\n*     return -1.0 * randu() * 100.0;\n* }\n*\n* var z = ifthen( randu() > 0.5, x, y );\n* // returns <number>\n*/\nfunction ifthen( bool, x, y ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', y ) );\n\t}\n\tif ( bool ) {\n\t\treturn x();\n\t}\n\treturn y();\n}\n\n\n// EXPORTS //\n\nexport default ifthen;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests that a value is a valid constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var ctor = function ctor() {};\n*\n* var err = validate( ctor );\n* // returns null\n*\n* err = validate( null );\n* // returns <TypeError>\n*/\nfunction validate( value ) {\n\tvar type = typeof value;\n\tif (\n\t\tvalue === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\treturn new TypeError( format( 'invalid argument. A provided constructor must be either an object (except null) or a function. Value: `%s`.', value ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Object.create;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Ctor() {\n\t// Empty...\n}\n\n\n// MAIN //\n\n/**\n* An `Object.create` shim for older JavaScript engines.\n*\n* @private\n* @param {Object} proto - prototype\n* @returns {Object} created object\n*\n* @example\n* var obj = createObject( Object.prototype );\n* // returns {}\n*/\nfunction createObject( proto ) {\n\tCtor.prototype = proto;\n\treturn new Ctor();\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar createObject;\nif ( typeof builtin === 'function' ) {\n\tcreateObject = builtin;\n} else {\n\tcreateObject = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport createObject from './detect.js';\n\n\n// MAIN //\n\n/**\n* Implements prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* ## Notes\n*\n* -   This implementation is not designed to work with ES2015/ES6 classes. For ES2015/ES6 classes, use `class` with `extends`.\n* -   For reference, see [node#3455](https://github.com/nodejs/node/pull/3455), [node#4179](https://github.com/nodejs/node/issues/4179), [node#3452](https://github.com/nodejs/node/issues/3452), and [node commit](https://github.com/nodejs/node/commit/29da8cf8d7ab8f66b9091ab22664067d4468461e#diff-3deb3f32958bb937ae05c6f3e4abbdf5).\n*\n* @param {(Object|Function)} ctor - constructor which will inherit\n* @param {(Object|Function)} superCtor - super (parent) constructor\n* @throws {TypeError} first argument must be either an object or a function which can inherit\n* @throws {TypeError} second argument must be either an object or a function from which a constructor can inherit\n* @throws {TypeError} second argument must have an inheritable prototype\n* @returns {(Object|Function)} child constructor\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\nfunction inherit( ctor, superCtor ) {\n\tvar err = validate( ctor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\terr = validate( superCtor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( typeof superCtor.prototype === 'undefined' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must have a prototype from which another object can inherit. Value: `%s`.', superCtor.prototype ) );\n\t}\n\t// Create a prototype which inherits from the parent prototype:\n\tctor.prototype = createObject( superCtor.prototype );\n\n\t// Set the constructor to refer to the child constructor:\n\tdefineProperty( ctor.prototype, 'constructor', {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': ctor\n\t});\n\n\treturn ctor;\n}\n\n\n// EXPORTS //\n\nexport default inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* @module @stdlib/constants/float64/max-safe-integer\n* @type {number}\n*\n* @example\n* import FLOAT64_MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\n* // returns 9007199254740991\n*/\n\n\n// MAIN //\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* ## Notes\n*\n* The integer has the value\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_SAFE_INTEGER = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable property names and symbols\n*\n* @example\n* var props = inheritedEnumerableProperties( {} );\n*/\nfunction inheritedEnumerableProperties( value, level ) { // eslint-disable-line id-length\n\tvar props;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting enumerable properties...\n\tprops = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn props;\n}\n\n\n// EXPORTS //\n\nexport default inheritedEnumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable symbol properties\n*\n* @example\n* var symbols = inheritedEnumerablePropertySymbols( [] );\n*/\nfunction inheritedEnumerablePropertySymbols( value, level ) { // eslint-disable-line id-length\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting enumerable symbol properties...\n\tcache = {};\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedEnumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isEnumerable from '@stdlib/assert/is-enumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable property names\n*\n* @example\n* var keys = inheritedKeys( {} );\n*/\nfunction inheritedKeys( value, level ) {\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting enumerable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from './../../has-own-property';\nimport isEnumerableProperty from './../../is-enumerable-property';\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is non-enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is non-enumerable\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': true,\n*     'value': 'beep'\n* });\n*\n* var bool = isNonEnumerableProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isNonEnumerableProperty( obj, 'beep' );\n* // returns true\n*/\nfunction isNonEnumerableProperty( value, property ) {\n\tif ( hasOwnProp( value, property ) === false ) {\n\t\treturn false;\n\t}\n\treturn ( isEnumerableProperty( value, property ) === false );\n}\n\n\n// EXPORTS //\n\nexport default isNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited non-enumerable property names and symbols\n*\n* @example\n* var props = inheritedNonEnumerableProperties( {} );\n*/\nfunction inheritedNonEnumerableProperties( value, level ) { // eslint-disable-line id-length\n\tvar props;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting non-enumerable properties...\n\tprops = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn props;\n}\n\n\n// EXPORTS //\n\nexport default inheritedNonEnumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited non-enumerable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited non-enumerable property names\n*\n* @example\n* var keys = inheritedNonEnumerablePropertyNames( {} );\n*/\nfunction inheritedNonEnumerablePropertyNames( value, level ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting non-enumerable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedNonEnumerablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited non-enumerable symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited non-enumerable symbol properties\n*\n* @example\n* var symbols = inheritedNonEnumerablePropertySymbols( [] );\n*/\nfunction inheritedNonEnumerablePropertySymbols( value, level ) { // eslint-disable-line id-length\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting non-enumerable symbol properties...\n\tcache = {};\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedNonEnumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport propertySymbols from './../../property-symbols';\nimport propertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited property names and symbols\n*\n* @example\n* var props = inheritedProperties( [] );\n* // returns [...]\n*/\nfunction inheritedProperties( value, level ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all properties...\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\ttmp = propertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport getOwnPropertyDescriptor from './../../property-descriptor';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's inherited property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have an inherited provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} third argument must be a positive integer\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var desc = inheritedPropertyDescriptor( {}, 'toString' );\n* // returns {...}\n*/\nfunction inheritedPropertyDescriptor( value, property, level ) { // eslint-disable-line id-length\n\tvar desc;\n\tvar obj;\n\tvar N;\n\tvar n;\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain in search of a specified property...\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\tdesc = getOwnPropertyDescriptor( obj, property );\n\t\tif ( desc ) {\n\t\t\treturn desc;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptors !== 'undefined' ); // eslint-disable-line node/no-unsupported-features/es-builtins\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\n\n\n// VARIABLES //\n\nvar propertyDescriptors = Object.getOwnPropertyDescriptors; // eslint-disable-line node/no-unsupported-features/es-builtins\n\n\n// MAIN //\n\n/**\n* Returns an object's own property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Object} property descriptors\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptors( obj );\n* // returns {...}\n*/\nfunction getOwnPropertyDescriptors( value ) {\n\treturn propertyDescriptors( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an object's own property descriptors.\n*\n* @module @stdlib/utils/property-descriptors\n*\n* @example\n* import getOwnPropertyDescriptors from '@stdlib/utils/property-descriptors';\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptors( obj, 'foo' );\n* // returns {...}\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\nimport propertyDescriptor from './../../property-descriptor';\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Returns an object's own property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Object} property descriptors\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptors( obj, 'foo' );\n* // returns {...}\n*/\nfunction getOwnPropertyDescriptors( value ) {\n\tvar symbols;\n\tvar names;\n\tvar desc;\n\tvar out;\n\tvar i;\n\n\tout = {};\n\n\t// Get the value's own enumerable and non-enumerable properties:\n\tnames = propertyNames( value );\n\n\t// For each property name, retrieve the property descriptor...\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tdesc = propertyDescriptor( value, names[ i ] );\n\t\tif ( desc ) {\n\t\t\t// The following is equivalent to `out[ names[i] ] = desc`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\tdefineProperty( out, names[ i ], {\n\t\t\t\t'configurable': true,\n\t\t\t\t'enumerable': true,\n\t\t\t\t'writable': true,\n\t\t\t\t'value': desc\n\t\t\t});\n\t\t}\n\t}\n\n\t// Get the value's symbol properties:\n\tsymbols = propertySymbols( value );\n\n\t// For each symbol property, retrieve the property descriptor...\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tdesc = propertyDescriptor( value, symbols[ i ] );\n\t\tif ( desc ) {\n\t\t\t// The following is equivalent to `out[ symbols[i] ] = desc`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\tdefineProperty( out, symbols[ i ], {\n\t\t\t\t'configurable': true,\n\t\t\t\t'enumerable': true,\n\t\t\t\t'writable': true,\n\t\t\t\t'value': desc\n\t\t\t});\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport getOwnPropertyDescriptors from './../../property-descriptors';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport objectKeys from './../../keys';\nimport defineProperty from './../../define-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an object's inherited property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Object} inherited property descriptors\n*\n* @example\n* var desc = inheritedPropertyDescriptors( [] );\n* // returns {...}\n*/\nfunction inheritedPropertyDescriptors( value, level ) { // eslint-disable-line id-length\n\tvar desc;\n\tvar keys;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn {};\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all property descriptors...\n\tdesc = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyDescriptors( obj );\n\t\tkeys = objectKeys( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a property name always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tkeys = getOwnPropertySymbols( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a symbol property always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\treturn desc;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertyDescriptors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport propertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited enumerable and non-enumerable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited enumerable and non-enumerable property names\n*\n* @example\n* var keys = inheritedPropertyNames( [] );\n*/\nfunction inheritedPropertyNames( value, level ) {\n\tvar names;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all enumerable and non-enumerable property names...\n\tnames = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( names, tmp[ i ] ) === false ) {\n\t\t\t\tnames.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport propertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited symbol properties\n*\n* @example\n* var symbols = inheritedPropertySymbols( [] );\n*/\nfunction inheritedPropertySymbols( value, level ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all symbol properties...\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptor !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tvar desc;\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\tdesc = propertyDescriptor( value, property );\n\treturn ( desc === void 0 ) ? null : desc;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a property descriptor for an object's own property.\n*\n* @module @stdlib/utils/property-descriptor\n*\n* @example\n* import getOwnPropertyDescriptor from '@stdlib/utils/property-descriptor';\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':'bar'}\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n* -   In environments lacking `Object.getOwnPropertyDescriptor()` support, property descriptors do not exist. In non-supporting environment, if an object has a provided property, this function returns a descriptor object equivalent to that returned in a supporting environment; otherwise, the function returns `null`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tif ( hasOwnProp( value, property ) ) {\n\t\treturn {\n\t\t\t'configurable': true,\n\t\t\t'enumerable': true,\n\t\t\t'writable': true,\n\t\t\t'value': value[ property ]\n\t\t};\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyDescriptor from '@stdlib/utils/property-descriptor';\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is writable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is writable\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'beep'\n* });\n*\n* var bool = isWritableProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isWritableProperty( obj, 'beep' );\n* // returns false\n*/\nfunction isWritableProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\tdesc.writable === true ||\n\t\t\ttypeof desc.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isWritableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable property names and symbols.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable property names and symbols\n*\n* @example\n* var props = inheritedWritableProperties( {} );\n*/\nfunction inheritedWritableProperties( value, level ) { // eslint-disable-line id-length\n\tvar props;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable properties...\n\tprops = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tprops.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn props;\n}\n\n\n// EXPORTS //\n\nexport default inheritedWritableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable property names\n*\n* @example\n* var keys = inheritedWritablePropertyNames( {} );\n*/\nfunction inheritedWritablePropertyNames( value, level ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default inheritedWritablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MAX_SAFE_INTEGER from '@stdlib/constants/float64/max-safe-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable symbol properties\n*\n* @example\n* var symbols = inheritedWritablePropertySymbols( [] );\n*/\nfunction inheritedWritablePropertySymbols( value, level ) { // eslint-disable-line id-length\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', level ) );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable symbol properties...\n\tcache = {};\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default inheritedWritablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates the collection in-place.\n*\n* ## Notes\n*\n* -   The invoked function's return value is cached prior to updating a collection. Before updating the collection, a collection must be inspected to ensure that a collection has not been resized during invocation such that an index no longer has a corresponding element in the collection. Were a return value automatically used to update a collection, an input collection could be converted into a sparse data structure. While some might consider this a feature, here, we take stance that a user should be less clever.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function scale( value, index, collection ) {\n*     return value * index;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = inmap( arr, scale );\n* // returns [ 0, 2, 6, 12 ]\n*\n* var bool = ( out === arr );\n* // returns true\n*/\nfunction inmap( collection, fcn, thisArg ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = fcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\tlen = collection.length;\n\t\t}\n\t\tif ( i < len ) {\n\t\t\tcollection[ i ] = v;\n\t\t}\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default inmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each element in a collection and updates the collection in-place, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `inmap` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `inmap()`, `[].push()` behavior is consistent with `inmapRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function scale( value, index, collection ) {\n*     console.log( '%s: %d', index, value );\n*     return value * index;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = inmapRight( arr, scale );\n* // returns [ 0, 2, 6, 12 ]\n*\n* var bool = ( out === arr );\n* // returns true\n*/\nfunction inmapRight( collection, fcn, thisArg ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tv = fcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\tif ( i >= 0 && i < len ) {\n\t\t\tcollection[ i ] = v;\n\t\t}\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default inmapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts a collection to an object whose keys are determined by a provided function and whose values are the collection values.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} output object\n*\n* @example\n* function toKey( value, index ) {\n*     console.log( '%d: %s', index, JSON.stringify( value ) );\n*     return value.name;\n* }\n*\n* var collection = [\n*     { 'name': 'beep', 'a': 1 },\n*     { 'name': 'boop', 'b': 2 }\n* ];\n*\n* var obj = keyBy( collection, toKey );\n* // returns { 'beep': { 'name': 'beep', 'a': 1 }, 'boop': { 'name': 'boop', 'b': 2 } }\n*/\nfunction keyBy( collection, fcn, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar key;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = fcn.call( thisArg, collection[ i ], i );\n\t\tout[ key ] = collection[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts a collection to an object whose keys are determined by a provided function and whose values are the collection values, iterating from right to left.\n*\n* @param {Collection} collection - input collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} output object\n*\n* @example\n* function toKey( value, index ) {\n*     console.log( '%d: %s', index, JSON.stringify( value ) );\n*     return value.name;\n* }\n*\n* var collection = [\n*     { 'name': 'beep', 'a': 1 },\n*     { 'name': 'boop', 'b': 2 }\n* ];\n*\n* var obj = keyByRight( collection, toKey );\n* // returns { 'boop': { 'name': 'boop', 'b': 2 }, 'beep': { 'name': 'beep', 'a': 1 } }\n*/\nfunction keyByRight( collection, fcn, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar key;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\tout = {};\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tkey = fcn.call( thisArg, collection[ i ], i );\n\t\tout[ key ] = collection[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts each object key to lowercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'A': 1,\n*     'B': 2\n* };\n*\n* var obj2 = lowercaseKeys( obj1 );\n* // returns { 'a': 1, 'b': 2 }\n*/\nfunction lowercaseKeys( obj ) {\n\tvar out;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tout[ key.toLowerCase() ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default lowercaseKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from '@stdlib/utils/global';\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\n\n\n// MAIN //\n\n/**\n* Tests for native `BigInt` support.\n*\n* @returns {boolean} boolean indicating if an environment has `BigInt` support\n*\n* @example\n* var bool = hasBigIntSupport();\n* // returns <boolean>\n*/\nfunction hasBigIntSupport() {\n\treturn (\n\t\ttypeof Global.BigInt === 'function' &&\n\t\ttypeof BigInt === 'function' && // eslint-disable-line stdlib/require-globals\n\t\ttypeof Global.BigInt( '1' ) === 'bigint' &&\n\t\ttypeof BigInt( '1' ) === 'bigint' // eslint-disable-line stdlib/require-globals, no-undef\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasBigIntSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport abs from '@stdlib/math/base/special/abs';\n\n\n// MAIN //\n\n/**\n* Determines the order of a multidimensional array based on a provided stride array.\n*\n* @param {IntegerArray} strides - stride array\n* @returns {integer} order\n*\n* @example\n* var order = strides2order( [ 2, 1 ] );\n* // returns 1\n*\n* order = strides2order( [ 1, 2 ] );\n* // returns 2\n*\n* order = strides2order( [ 1, 1, 1 ] );\n* // returns 3\n*\n* order = strides2order( [ 2, 3, 1 ] );\n* // returns 0\n*/\nfunction strides2order( strides ) {\n\tvar column;\n\tvar ndims;\n\tvar row;\n\tvar s1;\n\tvar s2;\n\tvar i;\n\n\tndims = strides.length;\n\tif ( ndims === 0 ) {\n\t\treturn 0|0; // 'none'\n\t}\n\tcolumn = true;\n\trow = true;\n\n\ts1 = abs( strides[ 0 ] );\n\tfor ( i = 1; i < ndims; i++ ) {\n\t\ts2 = abs( strides[ i ] );\n\t\tif ( column && s2 < s1 ) {\n\t\t\tcolumn = false;\n\t\t} else if ( row && s2 > s1 ) {\n\t\t\trow = false;\n\t\t}\n\t\tif ( row || column ) {\n\t\t\ts1 = s2;\n\t\t} else {\n\t\t\treturn 0|0; // 'none'\n\t\t}\n\t}\n\tif ( row && column ) {\n\t\treturn 3|0; // 'both'\n\t}\n\tif ( row ) {\n\t\treturn 1|0; // 'row-major'\n\t}\n\treturn 2|0; // 'column-major'\n}\n\n\n// EXPORTS //\n\nexport default strides2order;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// VARIABLES //\n\nvar arraySlice = Array.prototype.slice;\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'slice' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Returns a shallow copy of a portion of an array using the `Array#slice` built-in.\n*\n* @private\n* @param {Collection} x - input array\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = builtin( x, 1, 3 );\n* // returns [ 2, 3 ]\n*/\nfunction builtin( x, start, end ) {\n\treturn arraySlice.call( x, start, end );\n}\n\n/**\n* Returns a shallow copy of a portion of an accessor array.\n*\n* @private\n* @param {Object} x - input array object\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @returns {Array} output array\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var out = accessors( x, 1, 3 );\n* // returns [ 2, 3 ]\n*/\nfunction accessors( x, start, end ) {\n\tvar data;\n\tvar get;\n\tvar out;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\tout = [];\n\tfor ( i = start; i < end; i++ ) {\n\t\tout.push( get( data, i ) );\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a shallow copy of a portion of an array.\n*\n* @param {Collection} x - input array\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = slice( x, 1, 3 );\n* // returns [ 2, 3 ]\n*\n* var bool = ( out === x );\n* // returns false\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var out = slice( x, 1, 3 );\n* // returns <Int32Array>[ 2, 3 ]\n*\n* var bool = ( out === x );\n* // returns false\n*/\nfunction slice( x, start, end ) {\n\tvar obj;\n\tif ( hasMethod( x, 'slice' ) ) {\n\t\treturn x.slice( start, end );\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, start, end );\n\t}\n\t// Assume we can use the built-in `Array#slice` method to copy elements to a generic array:\n\treturn builtin( x, start, end );\n}\n\n\n// EXPORTS //\n\nexport default slice;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Determines if an array is column-major contiguous.\n*\n* @private\n* @param {integer} order - **inferred** array order\n* @param {boolean} contiguous - boolean indicating is an array is contiguous\n* @returns {boolean} boolean indicating if an array is column-major contiguous\n*/\nfunction isColumnMajorContiguous( order, contiguous ) {\n\treturn contiguous && ( order === 2 || order === 3 );\n}\n\n\n// EXPORTS //\n\nexport default isColumnMajorContiguous;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Determines if an array is row-major contiguous.\n*\n* @private\n* @param {integer} order - **inferred** array order\n* @param {boolean} contiguous - boolean indicating is an array is contiguous\n* @returns {boolean} boolean indicating if an array is row-major contiguous\n*/\nfunction isRowMajorContiguous( order, contiguous ) {\n\treturn contiguous && ( order === 1 || order === 3 );\n}\n\n\n// EXPORTS //\n\nexport default isRowMajorContiguous;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the minimum and maximum linear indices in an underlying data buffer which are accessible to an array view.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @returns {Array} linear indices\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 10, 1 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -10, -1 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 1, 10 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -1, -10 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*/\nfunction minmaxViewBufferIndex( shape, strides, offset ) {\n\tvar ndims;\n\tvar min;\n\tvar max;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\tmin = offset;\n\tmax = offset;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tif ( shape[ i ] === 0 ) {\n\t\t\treturn [ offset, offset ];\n\t\t}\n\t\ts = strides[ i ];\n\t\tif ( s > 0 ) {\n\t\t\tmax += s * ( shape[i]-1 );\n\t\t} else if ( s < 0 ) {\n\t\t\tmin += s * ( shape[i]-1 ); // decrements min\n\t\t}\n\t}\n\treturn [ min, max ];\n}\n\n\n// EXPORTS //\n\nexport default minmaxViewBufferIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether an input value is the string representing column-major order.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean result\n*\n* @example\n* var bool = isColumnMajorString( 'column-major' );\n* // returns true\n*\n* bool = isColumnMajorString( 'row-major' );\n* // returns false\n*\n* bool = isColumnMajorString( 'foo' );\n* // returns false\n*/\nfunction isColumnMajorString( v ) {\n\treturn ( v === 'column-major' );\n}\n\n\n// EXPORTS //\n\nexport default isColumnMajorString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum and maximum linear indices in an underlying data buffer which are accessible to an array view.\n*\n* @module @stdlib/ndarray/base/minmax-view-buffer-index\n*\n* @example\n* import minmaxViewBufferIndex from '@stdlib/ndarray/base/minmax-view-buffer-index';\n*\n* var shape = [ 10, 10 ];\n* var strides = [ 10, 1 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* import minmaxViewBufferIndex from '@stdlib/ndarray/base/minmax-view-buffer-index';\n*\n* var shape = [ 10, 10 ];\n* var strides = [ -10, -1 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*\n* @example\n* import minmaxViewBufferIndex from '@stdlib/ndarray/base/minmax-view-buffer-index';\n*\n* var shape = [ 10, 10 ];\n* var strides = [ 1, 10 ];\n* var offset = 10;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 10, 109 ]\n*\n* @example\n* import minmaxViewBufferIndex from '@stdlib/ndarray/base/minmax-view-buffer-index';\n*\n* var shape = [ 10, 10 ];\n* var strides = [ -1, -10 ];\n* var offset = 99;\n*\n* var idx = minmaxViewBufferIndex( shape, strides, offset );\n* // returns [ 0, 99 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the minimum and maximum linear indices in an underlying data buffer which are accessible to an array view and assigns results to a provided output array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} linear indices\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 10, 1 ];\n* var offset = 10;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 10, 109 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -10, -1 ];\n* var offset = 99;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 0, 99 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ 1, 10 ];\n* var offset = 10;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 10, 109 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*\n* @example\n* var shape = [ 10, 10 ];\n* var strides = [ -1, -10 ];\n* var offset = 99;\n*\n* var out = [ 0, 0 ];\n* var idx = minmaxViewBufferIndex( shape, strides, offset, out );\n* // returns [ 0, 99 ]\n*\n* var bool = ( idx === out );\n* // returns true\n*/\nfunction minmaxViewBufferIndex( shape, strides, offset, out ) {\n\tvar ndims;\n\tvar min;\n\tvar max;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\tmin = offset;\n\tmax = offset;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tif ( shape[ i ] === 0 ) {\n\t\t\tout[ 0 ] = offset;\n\t\t\tout[ 1 ] = offset;\n\t\t\treturn out;\n\t\t}\n\t\ts = strides[ i ];\n\t\tif ( s > 0 ) {\n\t\t\tmax += s * ( shape[i]-1 );\n\t\t} else if ( s < 0 ) {\n\t\t\tmin += s * ( shape[i]-1 ); // decrements min\n\t\t}\n\t}\n\tout[ 0 ] = min;\n\tout[ 1 ] = max;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default minmaxViewBufferIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport replace from '@stdlib/string/replace';\nimport real from '@stdlib/complex/float64/real';\nimport imag from '@stdlib/complex/float64/imag';\n\n\n// VARIABLES //\n\nvar CTORS = {\n\t'int8': 'new Int8Array( [ {{data}} ] )',\n\t'uint8': 'new Uint8Array( [ {{data}} ] )',\n\t'uint8c': 'new Uint8ClampedArray( [ {{data}} ] )',\n\t'int16': 'new Int16Array( [ {{data}} ] )',\n\t'uint16': 'new Uint16Array( [ {{data}} ] )',\n\t'int32': 'new Int32Array( [ {{data}} ] )',\n\t'uint32': 'new Uint32Array( [ {{data}} ] )',\n\t'float32': 'new Float32Array( [ {{data}} ] )',\n\t'float64': 'new Float64Array( [ {{data}} ] )',\n\t'generic': '[ {{data}} ]',\n\t'binary': 'new Buffer( [ {{data}} ] )',\n\t'complex64': 'new Complex64Array( [ {{data}} ] )',\n\t'complex128': 'new Complex128Array( [ {{data}} ] )',\n\t'bool': 'new BooleanArray( [ {{data}} ] )'\n};\n\n\n// MAIN //\n\n/**\n* Serializes an ndarray as a string.\n*\n* ## Notes\n*\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n* @private\n* @returns {string} string representation\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar buffer;\n\tvar ndims;\n\tvar ctor;\n\tvar str;\n\tvar dt;\n\tvar v;\n\tvar i;\n\n\tndims = this._shape.length;\n\tdt = this._dtype;\n\n\t// Function to invoke to create an ndarray:\n\tstr = 'ndarray( \\''+dt+'\\', ';\n\n\t// Data buffer parameter...\n\tbuffer = '';\n\tif ( this._length <= 100 ) {\n\t\tif ( dt === 'complex64' || dt === 'complex128' ) {\n\t\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\t\tv = this.iget( i );\n\t\t\t\tbuffer += real( v ) + ', ' + imag( v );\n\t\t\t\tif ( i < this._length-1 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\t\tbuffer += this.iget( i );\n\t\t\t\tif ( i < this._length-1 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// First three values...\n\t\tif ( dt === 'complex64' || dt === 'complex128' ) {\n\t\t\tfor ( i = 0; i < 3; i++ ) {\n\t\t\t\tv = this.iget( i );\n\t\t\t\tbuffer += real( v ) + ', ' + imag( v );\n\t\t\t\tif ( i < 2 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < 3; i++ ) {\n\t\t\t\tbuffer += this.iget( i );\n\t\t\t\tif ( i < 2 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbuffer += ', ..., ';\n\n\t\t// Last three values...\n\t\tif ( dt === 'complex64' || dt === 'complex128' ) {\n\t\t\tfor ( i = 2; i >= 0; i-- ) {\n\t\t\t\tv = this.iget( this._length-1-i );\n\t\t\t\tbuffer += real( v ) + ', ' + imag( v );\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 2; i >= 0; i-- ) {\n\t\t\t\tbuffer += this.iget( this._length-1-i );\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tbuffer += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tctor = CTORS[ this.dtype ];\n\tstr += replace( ctor, '{{data}}', buffer );\n\tstr += ', ';\n\n\t// Array shape...\n\tif ( ndims === 0 ) {\n\t\tstr += '[]';\n\t} else {\n\t\tstr += '[ ' + this._shape.join( ', ' ) + ' ]';\n\t}\n\tstr += ', ';\n\n\t// Stride array...\n\tstr += '[ ';\n\tif ( ndims === 0 ) {\n\t\tstr += '0';\n\t} else {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\tif ( this._strides[ i ] < 0 ) {\n\t\t\t\tstr += -this._strides[ i ];\n\t\t\t} else {\n\t\t\t\tstr += this._strides[ i ];\n\t\t\t}\n\t\t\tif ( i < ndims-1 ) {\n\t\t\t\tstr += ', ';\n\t\t\t}\n\t\t}\n\t}\n\tstr += ' ]';\n\tstr += ', ';\n\n\t// Buffer offset:\n\tstr += '0';\n\tstr += ', ';\n\n\t// Order:\n\tstr += '\\'' + this._order + '\\'';\n\n\t// Close the function call:\n\tstr += ' )';\n\treturn str;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasDataView = ( typeof DataView === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `DataView`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a DataView\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n* import DataView from '@stdlib/array/dataview';\n*\n* var bool = isDataView( new DataView( new ArrayBuffer( 10 ) ) );\n* // returns true\n*\n* @example\n* var bool = isDataView( [] );\n* // returns false\n*/\nfunction isDataView( value ) {\n\treturn (\n\t\t( hasDataView && value instanceof DataView ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object DataView]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isDataView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof DataView === 'function' ) ? DataView : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof DataView === 'function' ) ? DataView : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @module @stdlib/array/dataview\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n* import DataView from '@stdlib/array/dataview';\n*\n* var buf = new ArrayBuffer( 10 );\n* // returns <ArrayBuffer>\n*\n* var dv = new DataView( buf );\n* // returns <DataView>\n*/\n\n// MODULES //\n\nimport hasDataViewSupport from '@stdlib/assert/has-dataview-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasDataViewSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isDataView from './../../is-dataview';\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport GlobalDataView from './dataview.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `DataView` support.\n*\n* @returns {boolean} boolean indicating if an environment has `DataView` support\n*\n* @example\n* var bool = hasDataViewSupport();\n* // returns <boolean>\n*/\nfunction hasDataViewSupport() {\n\tvar bool;\n\tvar view;\n\tvar buf;\n\n\tif ( typeof GlobalDataView !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tbuf = new ArrayBuffer( 24 );\n\t\tview = new GlobalDataView( buf, 8 );\n\t\tbool = ( isDataView( view ) && typeof view.getFloat64 === 'function' && typeof view.setFloat64 === 'function' );\n\t\tif ( bool ) {\n\t\t\tview.setFloat64( 0, -3.14 );\n\t\t\tview.setFloat64( 8, NaN );\n\t\t\tbool = (\n\t\t\t\tbool &&\n\t\t\t\tview.buffer === buf &&\n\t\t\t\tview.byteLength === 16 &&\n\t\t\t\tview.byteOffset === 8 &&\n\t\t\t\tview.getFloat64( 0 ) === -3.14 &&\n\t\t\t\tview.getFloat64( 8 ) !== view.getFloat64( 8 )\n\t\t\t);\n\t\t}\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasDataViewSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* global BigInt */\n\n'use strict';\n\n// MAIN //\n\nvar BigInteger = ( typeof BigInt === 'function' ) ? BigInt : void 0; // eslint-disable-line stdlib/require-globals, node/no-unsupported-features/es-builtins\n\n\n// EXPORTS //\n\nexport default BigInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport replace from '@stdlib/string/base/replace';\nimport DTYPES from './dtypes.json';\n\n\n// VARIABLES //\n\nvar RE_SUFFIX = /_and_generic$/;\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types.\n*\n* @param {string} [kind] - data type kind\n* @returns {StringArray} list of ndarray data types\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*\n* @example\n* var list = dtypes( 'floating_point' );\n* // returns [...]\n*/\nfunction dtypes() {\n\tvar kind;\n\tvar out;\n\tvar FLG;\n\tif ( arguments.length === 0 ) {\n\t\treturn DTYPES.all.slice();\n\t}\n\tFLG = false;\n\tkind = arguments[ 0 ];\n\tif ( RE_SUFFIX.test( kind ) ) {\n\t\tkind = replace( kind, RE_SUFFIX, '' );\n\t\tif ( kind !== 'all' && kind !== 'index' ) {\n\t\t\tFLG = true;\n\t\t}\n\t}\n\tout = DTYPES[ kind ];\n\tout = ( out ) ? out.slice() : [];\n\tif ( FLG && out.length > 0 ) {\n\t\tout.push( 'generic' );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/empty-line-before-comment */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported data type strings to enumeration constants.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects. While certain dtypes, such as \"generic\" and \"binary\", have special behavior in JavaScript, they do not have a direct complement in C.\n*\n* @private\n* @returns {Object} object mapping supported dtypes to enumeration constants\n*\n* @example\n* var table = enumeration();\n* // returns <Object>\n*/\nfunction enumeration() {\n\t// NOTE: the following should match the C `dtypes.h` enumeration!!!!\n\treturn {\n\t\t// Boolean data types:\n\t\t'bool': 0,\n\n\t\t// Integer data types:\n\t\t'int8': 1,\n\t\t'uint8': 2,\n\t\t'uint8c': 3,\n\t\t'int16': 4,\n\t\t'uint16': 5,\n\t\t'int32': 6,\n\t\t'uint32': 7,\n\t\t'int64': 8,\n\t\t'uint64': 9,\n\t\t// 'int128': 10, // uncomment once supported\n\t\t// 'uint128': 11,\n\t\t// 'int256': 12,\n\t\t// 'uint256': 13,\n\n\t\t// Floating-point data types:\n\t\t// 'float16': 14,\n\t\t// 'bfloat16': 15,\n\t\t'float32': 10,\n\t\t'float64': 11,\n\t\t// 'float128': 18, // uncomment once supported\n\n\t\t// Complex floating-point number data types:\n\t\t'complex64': 12,\n\t\t'complex128': 13,\n\n\t\t// Data type for \"binary\" data (i.e., data stored in a Node.js `Buffer` object):\n\t\t'binary': 14,\n\n\t\t// Data type for \"generic\" JavaScript values (objects):\n\t\t'generic': 15,\n\n\t\t// Define a signaling value which is guaranteed not to be a valid type enumeration value:\n\t\t'notype': 17,\n\n\t\t// Indicate the start of user defined type numbers (leaving room for type growth above):\n\t\t'userdefined_type': 256\n\t};\n}\n\n\n// EXPORTS //\n\nexport default enumeration;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from '@stdlib/assert/is-arguments';\nimport builtin from './builtin.js';\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport noop from './../../noop';\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nexport default isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nexport default w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport typeOf from './../../type-of';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport EXCLUDED_KEYS from './excluded_keys.json';\nimport win from './window.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasArgumentsBug from './has_arguments_bug.js';\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport wrapper from './builtin_wrapper.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './builtin.js';\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArguments from '@stdlib/assert/is-arguments';\nimport HAS_ENUM_PROTO_BUG from './has_enumerable_prototype_bug.js';\nimport HAS_NON_ENUM_PROPS_BUG from './has_non_enumerable_properties_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype_wrapper.js';\nimport NON_ENUMERABLE from './non_enumerable.json';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasAutomationEqualityBug from './has_automation_equality_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport HAS_WINDOW from './has_window.js';\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray data types.\n*\n* @module @stdlib/ndarray/dtypes\n*\n* @example\n* import dtypes from '@stdlib/ndarray/dtypes';\n*\n* var list = dtypes();\n* // returns [...]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport enumeration from './enum.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'enum', enumeration );\nassign( main, enumeration() );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\nimport objectKeys from '@stdlib/utils/keys';\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ORDERS from './orders.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray orders.\n*\n* @returns {StringArray} list of ndarray orders\n*\n* @example\n* var list = orders();\n* // e.g., returns [ 'row-major', 'column-major' ]\n*/\nfunction orders() {\n\treturn ORDERS.slice();\n}\n\n\n// EXPORTS //\n\nexport default orders;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported layouts to integer values for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `row-major == 101`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of array objects.\n*\n* @returns {Object} object mapping supported layouts to integer values\n*\n* @example\n* var table = enumerated();\n* // returns <Object>\n*/\nfunction enumerated() {\n\t// NOTE: the following should match the C `layouts.h` enumeration!!!!\n\treturn {\n\t\t// Row-major (C-style):\n\t\t'row-major': 101,\n\n\t\t// Column-major (Fortran-style):\n\t\t'column-major': 102\n\t};\n}\n\n\n// EXPORTS //\n\nexport default enumerated;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of BLAS memory layouts.\n*\n* @module @stdlib/blas/base/layouts\n*\n* @example\n* import layouts from '@stdlib/blas/base/layouts';\n*\n* var list = layouts();\n* // e.g., returns [ 'row-major', 'column-major' ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport enumeration from './enum.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'enum', enumeration );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DATA from './data.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of BLAS memory layouts.\n*\n* @returns {StringArray} list of memory layouts\n*\n* @example\n* var list = layouts();\n* // e.g., returns [ 'row-major', 'column-major' ]\n*/\nfunction layouts() {\n\treturn DATA.slice();\n}\n\n\n// EXPORTS //\n\nexport default layouts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { enum as layouts } from '@stdlib/blas/base/layouts';\n\n\n// VARIABLES //\n\nvar LAYOUTS = layouts();\n\n\n// MAIN //\n\n/**\n* Returns an object mapping supported orders to integer values for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `row-major == 1`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects.\n*\n* @returns {Object} object mapping supported orders to integer values\n*\n* @example\n* var table = enumerated();\n* // returns <Object>\n*/\nfunction enumerated() {\n\t// NOTE: the following should match the C `orders.h` enumeration!!!!\n\treturn {\n\t\t// Row-major (C-style):\n\t\t'row-major': LAYOUTS[ 'row-major' ],\n\n\t\t// Column-major (Fortran-style):\n\t\t'column-major': LAYOUTS[ 'column-major' ]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default enumerated;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray orders.\n*\n* @module @stdlib/ndarray/orders\n*\n* @example\n* import orders from '@stdlib/ndarray/orders';\n*\n* var list = orders();\n* // e.g., returns [ 'row-major', 'column-major' ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport enumeration from './enum.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'enum', enumeration );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport MODES from './modes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray index modes.\n*\n* @returns {StringArray} list of ndarray index modes\n*\n* @example\n* var list = modes();\n* // returns [ 'throw', 'normalize', 'clamp', 'wrap' ]\n*/\nfunction modes() {\n\treturn MODES.slice();\n}\n\n\n// EXPORTS //\n\nexport default modes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported index modes to integer values for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `throw == 1`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects.\n*\n* @returns {Object} object mapping supported index modes to integer values\n*\n* @example\n* var table = enumerated();\n* // returns <Object>\n*/\nfunction enumerated() {\n\t// NOTE: the following should match the C `index_modes.h` enumeration!!!!\n\treturn {\n\t\t'throw': 1,\n\t\t'clamp': 2,\n\t\t'wrap': 3,\n\t\t'normalize': 4\n\t};\n}\n\n\n// EXPORTS //\n\nexport default enumerated;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray index modes.\n*\n* @module @stdlib/ndarray/index-modes\n*\n* @example\n* import modes from '@stdlib/ndarray/index-modes';\n*\n* var list = modes();\n* // returns [ 'throw', 'normalize', 'clamp', 'wrap' ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport modes from './main.js';\nimport enumeration from './enum.js';\n\n\n// MAIN //\n\nsetReadOnly( modes, 'enum', enumeration );\n\n\n// EXPORTS //\n\nexport default modes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport IS_LITTLE_ENDIAN from '@stdlib/assert/is-little-endian';\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport DataView from '@stdlib/array/dataview';\nimport BigInt from '@stdlib/bigint/ctor';\nimport { enum as dtypes } from './../../../dtypes';\nimport { enum as orders } from './../../../orders';\nimport { enum as modes } from './../../../index-modes';\n\n\n// VARIABLES //\n\nvar DTYPES = dtypes();\nvar ORDERS = orders();\nvar MODES = modes();\n\n\n// FUNCTIONS //\n\n/**\n* Serializes ndarray meta data to a `DataView`.\n*\n* ## Notes\n*\n* -   This function takes into account ndarray-like objects which may support index modes.\n*\n* -   This function defaults to returning cached serialized meta data. To force serialization, set the private `__meta_dataview__` property to `null`.\n*\n* -   Serialization is performed according to host byte order (endianness).\n*\n* -   Meta data format:\n*\n*     ```text\n*     | endianness (1 byte) | <dtype> (2 bytes) | <ndims> (8 bytes) | <shape> (ndims*8 bytes) | <strides> (ndims*8 bytes) | <offset> (8 bytes) | <order> (1 byte) | <mode> (1 byte) | <nsubmodes> (8 bytes) | <submodes> (nsubmodes*1 bytes) | <flags> (4 bytes) |\n*     ```\n*\n*     which translates to the following `ArrayBuffer` layout:\n*\n*     ```text\n*     ArrayBuffer[\n*         <endianness>[int8],\n*         <dtype>[int16],\n*         <ndims>[int64],\n*         <shape>[ndims*int64],\n*         <strides>[ndims*int64],\n*         <offset>[int64],\n*         <order>[int8],\n*         <mode>[int8],\n*         <nsubmodes>[int64],\n*         <submodes>[nsubmodes*int8],\n*         <flags>[int32]\n*     ]\n*     ```\n*\n*     where `strides` and `offset` are in units of bytes.\n*\n* -   If the endianness is `1`, the byte order is little endian. If the endianness is `0`, the byte order is big endian.\n*\n* -   Buffer length:\n*\n*     ```text\n*     1 + 2 + 8 + (ndims*8) + (ndims*8) + 8 + 1 + 1 + 8 + (nsubmodes*1) + 4 = 33 + (ndims*16) + nsubmodes\n*     ```\n*\n*     For example, consider a three-dimensional ndarray with one subscript index mode (submode):\n*\n*     ```text\n*     33 + (3*16) + 1 = 82 bytes\n*     ```\n*\n* -   Views:\n*\n*     -   endianness: `Int8Array( buf, 0, 1 )`\n*     -   dtype: `Int16Array( buf, 1, 1 )`\n*     -   ndims: `Int64Array( buf, 3, 1 )`\n*     -   shape: `Int64Array( buf, 11, ndims )`\n*     -   strides: `Int64Array( buf, 11+(ndims*8), ndims )`\n*     -   offset: `Int64Array( buf, 11+(ndims*16), 1 )`\n*     -   order: `Int8Array( buf, 19+(ndims*16), 1 )`\n*     -   mode: `Int8Array( buf, 20+(ndims*16), 1 )`\n*     -   nsubmodes: `Int64Array( buf, 21+(ndims*16), 1 )`\n*     -   submodes: `Int8Array( buf, 29+(ndims*16), nsubmodes )`\n*     -   flags: `Int32Array( buf, 29+(ndims*16)+nsubmodes, 1 )`\n*\n* @private\n* @returns {DataView} serialized meta data\n*/\nfunction meta2dataview() {\n\t/* eslint-disable no-invalid-this */\n\tvar nbytes;\n\tvar flgs;\n\tvar len;\n\tvar dt;\n\tvar sh;\n\tvar st;\n\tvar sm;\n\tvar v;\n\tvar m;\n\tvar o;\n\tvar s;\n\tvar N;\n\tvar M;\n\tvar i;\n\n\tm = this._mode || 'throw';\n\tsm = this._submode || [ m ];\n\tN = this._ndims;\n\tM = sm.length;\n\n\t// Compute the amount of memory we need to allocate for storing meta data:\n\tlen = 33 + (N*16) + M;\n\n\t// Check if we've already serialized ndarray meta data and can reuse an already allocated array buffer...\n\tv = this.__meta_dataview__;\n\tif ( v && v.byteLength === len ) { // Note: the byte length check is only a bare minimum sanity check, as cached contents may still be \"stale\" (e.g., shape and/or strides may have changed)\n\t\treturn v;\n\t}\n\t// Allocate raw memory and create a view for interfacing with the allocated memory:\n\tv = new DataView( new ArrayBuffer( len ) );\n\n\t// Retrieve ndarray meta data:\n\tsh = this._shape;\n\tst = this._strides;\n\tdt = this._dtype;\n\tnbytes = this._bytesPerElement;\n\n\t// Endianness: (byteoffset: 0; bytelength: 1)\n\to = 0;\n\tv.setInt8( o, ( IS_LITTLE_ENDIAN ) ? 1 : 0 );\n\n\t// Data type: (byteoffset: 1; bytelength: 2)\n\to += 1;\n\tv.setInt16( o, DTYPES[ dt ], IS_LITTLE_ENDIAN );\n\n\t// Number of dimensions: (byteoffset: 3; bytelength: 8)\n\to += 2;\n\tv.setBigInt64( o, BigInt( N ), IS_LITTLE_ENDIAN );\n\n\t// Shape and strides: (byteoffset: 11 and 11+(ndims*8), respectively; bytelength: ndims*8 for both shape and strides, and, thus, ndims*16 total)\n\ts = N * 8; // stride length between a dimension (shape[i]) and its associated stride\n\to += 8;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv.setBigInt64( o, BigInt( sh[i] ), IS_LITTLE_ENDIAN );\n\t\tv.setBigInt64( o+s, BigInt( st[i]*nbytes ), IS_LITTLE_ENDIAN );\n\t\to += 8;\n\t}\n\t// Offset: (byteoffset: 11+(ndims*16); bytelength: 8)\n\to += s;\n\tv.setBigInt64( o, BigInt( this._offset*nbytes ), IS_LITTLE_ENDIAN );\n\n\t// Order: (byteoffset: 19+(ndims*16); bytelength: 1)\n\to += 8;\n\tv.setInt8( o, ORDERS[ this._order ] );\n\n\t// Mode: (byteoffset: 20+(ndims*16); bytelength: 1)\n\to += 1;\n\tv.setInt8( o, MODES[ m ] );\n\n\t// Number of submodes: (byteoffset: 21+(ndims*16); bytelength: 8)\n\to += 1;\n\tv.setBigInt64( o, BigInt( M ), IS_LITTLE_ENDIAN );\n\n\t// Submodes: (byteoffset: 29+(ndims*16); bytelength: nsubmodes*1)\n\to += 8;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tv.setInt8( o, MODES[ sm[i] ] );\n\t\to += 1;\n\t}\n\t// Flags: (byteoffset: 29+(ndims*16)+nsubmodes; bytelength: 4)\n\tflgs = 0|0;\n\tflgs |= ( this._flags.READONLY ) ? 4 : 0; // 00000000 00000000 00000000 00000100\n\tv.setInt32( o, flgs, IS_LITTLE_ENDIAN );\n\n\t// Cache the serialized meta data:\n\tthis.__meta_dataview__ = v;\n\n\treturn v;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nexport default meta2dataview;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport IS_LITTLE_ENDIAN from '@stdlib/assert/is-little-endian';\nimport Uint8Array from '@stdlib/array/uint8';\nimport DataView from '@stdlib/array/dataview';\nimport floor from '@stdlib/math/base/special/floor';\n\n\n// VARIABLES //\n\n// 0xFFFFFFFF = 2**32 - 1 => 11111111 11111111 11111111 11111111\nvar LOW_MASK = 0xFFFFFFFF >>> 0;\n\n// 2**32\nvar TWO_32 = 4294967296;\n\n// Byte array workspace:\nvar BYTES = new Uint8Array( 8 );\nvar VIEW = new DataView( BYTES.buffer );\n\n\n// MAIN //\n\n/**\n* Converts an integer-valued double-precision floating-point number to a signed 64-bit integer byte array according to host byte order (endianness).\n*\n* ## Notes\n*\n* -   This function assumes that the input value is less than the maximum safe double-precision floating-point integer plus one (i.e., `2**53`).\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* var out = new Uint8Array( 8 );\n* var bytes = float64ToInt64Bytes( 1.0, out, 1, 0 );\n* // returns <Uint8Array>\n*/\nfunction float64ToInt64Bytes( x, out, stride, offset ) {\n\tvar hi;\n\tvar lo;\n\tvar i;\n\n\tif ( x === 0 ) {\n\t\tfor ( i = 0; i < BYTES.length; i++ ) {\n\t\t\tout[ offset ] = 0;\n\t\t\toffset += stride;\n\t\t}\n\t\treturn out;\n\t}\n\t// Get the low 32-bit word:\n\tlo = (x&LOW_MASK)>>>0;\n\n\t// Get the high 32-bit word:\n\thi = floor( x/TWO_32 );\n\n\t// Insert the high and low words according to host byte order (endianness):\n\tif ( IS_LITTLE_ENDIAN ) {\n\t\tVIEW.setUint32( 0, lo, IS_LITTLE_ENDIAN );\n\t\tVIEW.setUint32( 4, hi, IS_LITTLE_ENDIAN );\n\t} else {\n\t\tVIEW.setUint32( 0, hi, IS_LITTLE_ENDIAN );\n\t\tVIEW.setUint32( 4, lo, IS_LITTLE_ENDIAN );\n\t}\n\tfor ( i = 0; i < BYTES.length; i++ ) {\n\t\tout[ offset ] = BYTES[ i ];\n\t\toffset += stride;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default float64ToInt64Bytes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an integer-valued double-precision floating-point number to a signed 64-bit integer byte array according to host byte order (endianness).\n*\n* @module @stdlib/number/float64/base/to-int64-bytes\n*\n* @example\n* import float64ToInt64Bytes from '@stdlib/number/float64/base/to-int64-bytes';\n*\n* var bytes = float64ToInt64Bytes( 1.0 );\n* // returns <Uint8Array>\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n* import float64ToInt64Bytes from '@stdlib/number/float64/base/to-int64-bytes';\n*\n* var out = new Uint8Array( 8 );\n* var bytes = float64ToInt64Bytes( 1.0, out, 1, 0 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport IS_LITTLE_ENDIAN from '@stdlib/assert/is-little-endian';\nimport Uint8Array from '@stdlib/array/uint8';\nimport DataView from '@stdlib/array/dataview';\nimport floor from '@stdlib/math/base/special/floor';\n\n\n// VARIABLES //\n\n// 0xFFFFFFFF = 2**32 - 1 => 11111111 11111111 11111111 11111111\nvar LOW_MASK = 0xFFFFFFFF >>> 0;\n\n// 2**32\nvar TWO_32 = 4294967296;\n\n\n// MAIN //\n\n/**\n* Converts an integer-valued double-precision floating-point number to a signed 64-bit integer byte array according to host byte order (endianness).\n*\n* ## Notes\n*\n* -   This function assumes that the input value is less than the maximum safe double-precision floating-point integer plus one (i.e., `2**53`).\n*\n* @param {number} x - input value\n* @returns {Uint8Array} byte array\n*\n* @example\n* var bytes = float64ToInt64Bytes( 1.0 );\n* // returns <Uint8Array>\n*/\nfunction float64ToInt64Bytes( x ) {\n\tvar bytes;\n\tvar view;\n\tvar hi;\n\tvar lo;\n\n\tbytes = new Uint8Array( 8 );\n\tif ( x === 0 ) {\n\t\treturn bytes;\n\t}\n\t// Get the low 32-bit word:\n\tlo = (x&LOW_MASK)>>>0;\n\n\t// Get the high 32-bit word:\n\thi = floor( x/TWO_32 );\n\n\t// Insert the high and low words according to host byte order (endianness):\n\tview = new DataView( bytes.buffer );\n\tif ( IS_LITTLE_ENDIAN ) {\n\t\tview.setUint32( 0, lo, IS_LITTLE_ENDIAN );\n\t\tview.setUint32( 4, hi, IS_LITTLE_ENDIAN );\n\t} else {\n\t\tview.setUint32( 0, hi, IS_LITTLE_ENDIAN );\n\t\tview.setUint32( 4, lo, IS_LITTLE_ENDIAN );\n\t}\n\treturn bytes;\n}\n\n\n// EXPORTS //\n\nexport default float64ToInt64Bytes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport IS_LITTLE_ENDIAN from '@stdlib/assert/is-little-endian';\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport DataView from '@stdlib/array/dataview';\nimport Uint8Array from '@stdlib/array/uint8';\nimport { enum as dtypes } from './../../../dtypes';\nimport { enum as orders } from './../../../orders';\nimport { enum as modes } from './../../../index-modes';\nimport { assign as float64ToInt64Bytes } from '@stdlib/number/float64/base/to-int64-bytes';\n\n\n// VARIABLES //\n\nvar DTYPES = dtypes();\nvar ORDERS = orders();\nvar MODES = modes();\n\n\n// FUNCTIONS //\n\n/**\n* Serializes ndarray meta data to a `DataView`.\n*\n* ## Notes\n*\n* -   This function takes into account ndarray-like objects which may support index modes.\n*\n* -   This function defaults to returning cached serialized meta data. To force serialization, set the private `__meta_dataview__` property to `null`.\n*\n* -   Serialization is performed according to host byte order (endianness).\n*\n* -   Meta data format:\n*\n*     ```text\n*     | endianness (1 byte) | <dtype> (2 bytes) | <ndims> (8 bytes) | <shape> (ndims*8 bytes) | <strides> (ndims*8 bytes) | <offset> (8 bytes) | <order> (1 byte) | <mode> (1 byte) | <nsubmodes> (8 bytes) | <submodes> (nsubmodes*1 bytes) | <flags> (4 bytes) |\n*     ```\n*\n*     which translates to the following `ArrayBuffer` layout:\n*\n*     ```text\n*     ArrayBuffer[\n*         <endianness>[int8],\n*         <dtype>[int16],\n*         <ndims>[int64],\n*         <shape>[ndims*int64],\n*         <strides>[ndims*int64],\n*         <offset>[int64],\n*         <order>[int8],\n*         <mode>[int8],\n*         <nsubmodes>[int64],\n*         <submodes>[nsubmodes*int8],\n*         <flags>[int32]\n*     ]\n*     ```\n*\n*     where `strides` and `offset` are in units of bytes.\n*\n* -   If the endianness is `1`, the byte order is little endian. If the endianness is `0`, the byte order is big endian.\n*\n* -   Buffer length:\n*\n*     ```text\n*     1 + 2 + 8 + (ndims*8) + (ndims*8) + 8 + 1 + 1 + 8 + (nsubmodes*1) + 4 = 33 + (ndims*16) + nsubmodes\n*     ```\n*\n*     For example, consider a three-dimensional ndarray with one subscript index mode (submode):\n*\n*     ```text\n*     33 + (3*16) + 1 = 82 bytes\n*     ```\n*\n* -   Views:\n*\n*     -   endianness: `Int8Array( buf, 0, 1 )`\n*     -   dtype: `Int16Array( buf, 1, 1 )`\n*     -   ndims: `Int64Array( buf, 3, 1 )`\n*     -   shape: `Int64Array( buf, 11, ndims )`\n*     -   strides: `Int64Array( buf, 11+(ndims*8), ndims )`\n*     -   offset: `Int64Array( buf, 11+(ndims*16), 1 )`\n*     -   order: `Int8Array( buf, 19+(ndims*16), 1 )`\n*     -   mode: `Int8Array( buf, 20+(ndims*16), 1 )`\n*     -   nsubmodes: `Int64Array( buf, 21+(ndims*16), 1 )`\n*     -   submodes: `Int8Array( buf, 29+(ndims*16), nsubmodes )`\n*     -   flags: `Int32Array( buf, 29+(ndims*16)+nsubmodes, 1 )`\n*\n* @private\n* @returns {DataView} serialized meta data\n*/\nfunction meta2dataview() {\n\t/* eslint-disable no-invalid-this */\n\tvar nbytes;\n\tvar bytes;\n\tvar flgs;\n\tvar len;\n\tvar dt;\n\tvar sh;\n\tvar st;\n\tvar sm;\n\tvar v;\n\tvar m;\n\tvar o;\n\tvar s;\n\tvar N;\n\tvar M;\n\tvar i;\n\n\tm = this._mode || 'throw';\n\tsm = this._submode || [ m ];\n\tN = this._ndims;\n\tM = sm.length;\n\n\t// Compute the amount of memory we need to allocate for storing meta data:\n\tlen = 33 + (N*16) + M;\n\n\t// Check if we've already serialized ndarray meta data and can reuse an already allocated array buffer...\n\tv = this.__meta_dataview__;\n\tif ( v && v.byteLength === len ) { // Note: the byte length check is only a bare minimum sanity check, as cached contents may still be \"stale\" (e.g., shape and/or strides may have changed)\n\t\treturn v;\n\t}\n\t// Allocate raw memory and create views for interfacing with the allocated memory:\n\tv = new DataView( new ArrayBuffer( len ) );\n\tbytes = new Uint8Array( v.buffer );\n\n\t// Retrieve ndarray meta data:\n\tsh = this._shape;\n\tst = this._strides;\n\tdt = this._dtype;\n\tnbytes = this._bytesPerElement;\n\n\t// Endianness: (byteoffset: 0; bytelength: 1)\n\to = 0;\n\tv.setInt8( o, ( IS_LITTLE_ENDIAN ) ? 1 : 0 );\n\n\t// Data type: (byteoffset: 1; bytelength: 2)\n\to += 1;\n\tv.setInt16( o, DTYPES[ dt ], IS_LITTLE_ENDIAN );\n\n\t// Number of dimensions: (byteoffset: 3; bytelength: 8)\n\to += 2;\n\tfloat64ToInt64Bytes( N, bytes, 1, o );\n\n\t// Shape and strides: (byteoffset: 11 and 11+(ndims*8), respectively; bytelength: ndims*8 for both shape and strides, and, thus, ndims*16 total)\n\ts = N * 8; // stride length between a dimension (shape[i]) and its associated stride\n\to += 8;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tfloat64ToInt64Bytes( sh[i], bytes, 1, o );\n\t\tfloat64ToInt64Bytes( st[i]*nbytes, bytes, 1, o+s );\n\t\to += 8;\n\t}\n\t// Offset: (byteoffset: 11+(ndims*16); bytelength: 8)\n\to += s;\n\tfloat64ToInt64Bytes( this._offset*nbytes, bytes, 1, o );\n\n\t// Order: (byteoffset: 19+(ndims*16); bytelength: 1)\n\to += 8;\n\tv.setInt8( o, ORDERS[ this._order ] );\n\n\t// Mode: (byteoffset: 20+(ndims*16); bytelength: 1)\n\to += 1;\n\tv.setInt8( o, MODES[ m ] );\n\n\t// Number of submodes: (byteoffset: 21+(ndims*16); bytelength: 8)\n\to += 1;\n\tfloat64ToInt64Bytes( M, bytes, 1, o );\n\n\t// Submodes: (byteoffset: 29+(ndims*16); bytelength: nsubmodes*1)\n\to += 8;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tv.setInt8( o, MODES[ sm[i] ] );\n\t\to += 1;\n\t}\n\t// Flags: (byteoffset: 29+(ndims*16)+nsubmodes; bytelength: 4)\n\tflgs = 0|0;\n\tflgs |= ( this._flags.READONLY ) ? 4 : 0; // 00000000 00000000 00000000 00000100\n\tv.setInt32( o, flgs, IS_LITTLE_ENDIAN );\n\n\t// Cache the serialized meta data:\n\tthis.__meta_dataview__ = v;\n\n\treturn v;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nexport default meta2dataview;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport hasBigIntSupport from '@stdlib/assert/has-bigint-support';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport bytesPerElement from './../../../base/bytes-per-element';\nimport iterationOrder from './../../../base/iteration-order';\nimport strides2order from './../../../base/strides2order';\nimport slice from '@stdlib/array/base/slice';\nimport Boolean from '@stdlib/boolean/ctor';\nimport isColumnMajorContiguous from './is_column_major_contiguous.js';\nimport isRowMajorContiguous from './is_row_major_contiguous.js';\nimport isContiguous from './is_contiguous.js';\nimport copyFlags from './copy_flags.js';\nimport igetValue from './iget.js';\nimport isetValue from './iset.js';\nimport setValue from './set.js';\nimport getValue from './get.js';\nimport valueOf from './valueof.js'; // eslint-disable-line stdlib/no-redeclare\nimport toJSON from './tojson.js';\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\nimport meta2dataview from './meta2dataview.js';\nimport meta2dataviewPolyfill from './meta2dataview.polyfill.js';\n\n\n// MAIN //\n\n/**\n* ndarray constructor.\n*\n* ## Notes\n*\n* -   To create a zero-dimensional array,\n*\n*     ```javascript\n*     var buffer = [ 1 ];\n*     var shape = [];\n*     var strides = [ 0 ];\n*     var offset = 0;\n*\n*     var out = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*     ```\n*\n* @constructor\n* @param {string} dtype - data type\n* @param {(ArrayLikeObject|TypedArray|Buffer)} buffer - data buffer\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - array strides\n* @param {NonNegativeInteger} offset - index offset\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var out = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*/\nfunction ndarray( dtype, buffer, shape, strides, offset, order ) {\n\tvar contiguous;\n\tvar nbytes;\n\tvar ord;\n\tvar len;\n\tvar i;\n\tif ( !(this instanceof ndarray) ) {\n\t\treturn new ndarray( dtype, buffer, shape, strides, offset, order );\n\t}\n\t// Compute the number of elements...\n\tlen = 1;\n\tfor ( i = 0; i < shape.length; i++ ) {\n\t\tlen *= shape[ i ]; // TODO: consider supporting accessor arrays here\n\t}\n\t// Compute the number of bytes...\n\tif ( buffer.BYTES_PER_ELEMENT ) {\n\t\tnbytes = buffer.BYTES_PER_ELEMENT * len;\n\t} else {\n\t\tnbytes = null;\n\t}\n\t// Set private properties...\n\tthis._byteLength = nbytes;\n\tthis._bytesPerElement = bytesPerElement( dtype );\n\tthis._buffer = buffer;\n\tthis._dtype = dtype;\n\tthis._length = len;\n\tthis._ndims = shape.length;\n\tthis._offset = offset;\n\tthis._order = order;\n\tthis._shape = shape;\n\tthis._strides = strides;\n\tthis._accessors = Boolean( buffer.get && buffer.set );\n\n\tthis._iterationOrder = iterationOrder( strides );\n\n\t// Determine if the array can be stored contiguously:\n\tcontiguous = isContiguous( len, shape, strides, offset, this._iterationOrder ); // eslint-disable-line max-len\n\n\t// Infer the array \"order\" from the stride array (this is supplementary to the `order` parameter):\n\tord = strides2order( strides );\n\n\tthis._flags = {\n\t\t'ROW_MAJOR_CONTIGUOUS': isRowMajorContiguous( ord, contiguous ),\n\t\t'COLUMN_MAJOR_CONTIGUOUS': isColumnMajorContiguous( ord, contiguous ),\n\t\t'READONLY': false\n\t};\n\n\t// Initialize a property for caching serialized meta data:\n\tthis.__meta_dataview__ = null;\n\n\treturn this;\n}\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof ndarray\n* @type {string}\n* @default 'ndarray'\n*\n* @example\n* var str = ndarray.name;\n* // returns 'ndarray'\n*/\nsetReadOnly( ndarray, 'name', 'ndarray' );\n\n/**\n* Size (in bytes) of the array (if known).\n*\n* @name byteLength\n* @memberof ndarray.prototype\n* @type {(NonNegativeInteger|null)}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var buffer = new Float64Array( [ 1, 2, 3, 4, 5, 6 ] );\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'float64', buffer, shape, strides, offset, 'row-major' );\n*\n* var byteLength = x.byteLength;\n* // returns 48\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'byteLength', function get() {\n\treturn this._byteLength;\n});\n\n/**\n* Size (in bytes) of each array element (if known).\n*\n* @name BYTES_PER_ELEMENT\n* @memberof ndarray.prototype\n* @type {(PositiveInteger|null)}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var buffer = new Float64Array( [ 1, 2, 3, 4, 5, 6 ] );\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'float64', buffer, shape, strides, offset, 'row-major' );\n*\n* var nbytes = x.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'BYTES_PER_ELEMENT', function get() {\n\treturn this._bytesPerElement;\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name data\n* @memberof ndarray.prototype\n* @type {(Array|TypedArray|Buffer)}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var data = x.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'data', function get() {\n\treturn this._buffer;\n});\n\n/**\n* Underlying data type.\n*\n* @name dtype\n* @memberof ndarray.prototype\n* @type {string}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var dtype = x.dtype;\n* // returns 'generic'\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'dtype', function get() {\n\treturn this._dtype;\n});\n\n/**\n* Meta information, such as information concerning the memory layout of the array.\n*\n* @name flags\n* @memberof ndarray.prototype\n* @type {Object}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var flgs = x.flags;\n* // returns <Object>\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'flags', function get() {\n\treturn copyFlags( this._flags );\n});\n\n/**\n* Length of the array.\n*\n* @name length\n* @memberof ndarray.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var len = x.length;\n* // returns 6\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Number of dimensions.\n*\n* @name ndims\n* @memberof ndarray.prototype\n* @type {PositiveInteger}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var ndims = x.ndims;\n* // returns 2\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'ndims', function get() {\n\treturn this._ndims;\n});\n\n/**\n* Index offset which specifies the buffer index at which to start iterating over array elements.\n*\n* @name offset\n* @memberof ndarray.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var o = x.offset;\n* // returns 0\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'offset', function get() {\n\treturn this._offset;\n});\n\n/**\n* Array order.\n*\n* ## Notes\n*\n* -   The array order is either row-major (C-style) or column-major (Fortran-style).\n*\n* @name order\n* @memberof ndarray.prototype\n* @type {string}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var order = x.order;\n* // returns 'row-major'\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'order', function get() {\n\treturn this._order;\n});\n\n/**\n* Shape of the array.\n*\n* @name shape\n* @memberof ndarray.prototype\n* @type {NonNegativeIntegerArray}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var s = x.shape;\n* // returns [ 3, 2 ]\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'shape', function get() {\n\treturn slice( this._shape, 0, this._shape.length );\n});\n\n/**\n* Index strides which specify how to access data along corresponding array dimensions.\n*\n* @name strides\n* @memberof ndarray.prototype\n* @type {IntegerArray}\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var s = x.strides;\n* // returns [ 2, 1 ]\n*/\nsetReadOnlyAccessor( ndarray.prototype, 'strides', function get() {\n\treturn slice( this._strides, 0, this._strides.length );\n});\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name get\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'get', getValue );\n\n/**\n* Returns an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @name iget\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'iget', igetValue );\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name set\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*\n* x.set( 1, 1, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.get( 1, 1 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'set', setValue );\n\n/**\n* Sets an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @name iset\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*\n* x.iset( 3, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.iget( 3 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'iset', isetValue );\n\n/**\n* Serializes an ndarray as a string.\n*\n* ## Notes\n*\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n* @name toString\n* @memberof ndarray.prototype\n* @type {Function}\n* @returns {string} serialized ndarray\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var str = x.toString();\n* // returns \"ndarray( 'generic', [ 3, 4, 5, 6, 7, 8 ], [ 3, 2 ], [ 2, 1 ], 0, 'row-major' )\"\n*/\nsetReadOnly( ndarray.prototype, 'toString', toString );\n\n/**\n* Serializes an ndarray as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying an `ndarray` instance.\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n* @name toJSON\n* @memberof ndarray.prototype\n* @type {Function}\n* @returns {Object} serialized ndarray\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var o = x.toJSON();\n* // e.g., returns { 'type': 'ndarray', 'dtype': 'generic', 'flags': {...}, 'offset': 0, 'order': 'row-major', 'shape': [ 3, 2 ], 'strides': [ 2, 1 ], 'data': [ 3, 4, 5, 6, 7, 8 ] }\n*/\nsetReadOnly( ndarray.prototype, 'toJSON', toJSON );\n\n/**\n* Converts an ndarray instance to a primitive value.\n*\n* ## Notes\n*\n* -   Only zero-dimensional ndarrays are converted to a primitive value. For ndarray instances having one or more dimensions, the method returns the `this` value, as is the default behavior for objects.\n*\n* @name valueOf\n* @memberof ndarray.prototype\n* @type {Function}\n* @returns {(*|ndarray)} result\n*\n* @example\n* var buffer = [ 3.14 ];\n* var shape = [];\n* var strides = [ 0 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.valueOf();\n* // returns 3.14\n*\n* @example\n* var buffer = [ 3.14 ];\n* var shape = [ 1 ];\n* var strides = [ 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.valueOf();\n* // returns <ndarray>\n*/\nsetReadOnly( ndarray.prototype, 'valueOf', valueOf );\n\n/**\n* Serializes ndarray meta data to a `DataView`.\n*\n* ## Notes\n*\n* -   Meta data format:\n*\n*     ```text\n*     | <endianness> (1 byte) | <dtype> (2 bytes) | <ndims> (8 bytes) | <shape> (ndims*8 bytes) | <strides> (ndims*8 bytes) | <offset> (8 bytes) | <order> (1 byte) | <mode> (1 byte) | <nsubmodes> (8 bytes) | <submodes> (nsubmodes*1 bytes) | <flags> (4 bytes) |\n*     ```\n*\n*     where `strides` and `offset` are in units of bytes.\n*\n* -   If the endianness is `1`, the byte order is little endian. If the endianness is `0`, the byte order is big endian.\n*\n* -   Serialization is performed according to host byte order (endianness).\n*\n* -   Consumers of this method should treat the returned `DataView` as **immutable**. Otherwise, mutation can invalidate meta data and potentially affect other consumers.\n*\n* @private\n* @name __array_meta_dataview__\n* @memberof ndarray.prototype\n* @type {Function}\n* @returns {DataView} serialized meta data\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var dv = x.__array_meta_dataview__();\n* // returns <DataView>\n*/\nsetReadOnly( ndarray.prototype, '__array_meta_dataview__', ( hasBigIntSupport() ) ? meta2dataview : meta2dataviewPolyfill );\n\n\n// EXPORTS //\n\nexport default ndarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport BYTES_PER_ELEMENT from './bytes_per_element.json';\n\n\n// MAIN //\n\n/**\n* Returns the number of bytes per element provided an underlying array data type.\n*\n* @param {string} dtype - data type\n* @returns {(NonNegativeInteger|null)} number of bytes per element\n*\n* @example\n* var nbytes = bytesPerElement( 'float64' );\n* // returns 8\n*\n* nbytes = bytesPerElement( 'generic' );\n* // returns null\n*/\nfunction bytesPerElement( dtype ) {\n\treturn BYTES_PER_ELEMENT[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default bytesPerElement;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns array iteration order.\n*\n* ## Notes\n*\n* -   Return value key:\n*\n*     -   `0`: unordered (i.e., strides of mixed sign; e.g., `[ 9, -3, 1 ]`)\n*     -   `1`: ordered left-to-right (i.e., all nonnegative strides)\n*     -   `-1`: ordered right-to-left (i.e., all negative strides)\n*\n* @param {IntegerArray} strides - stride array\n* @returns {integer} iteration order\n*\n* @example\n* var o = iterationOrder( [ 2, 1 ] );\n* // returns 1\n*\n* o = iterationOrder( [ -2, 1 ] );\n* // returns 0\n*\n* o = iterationOrder( [ -2, -1 ] );\n* // returns -1\n*/\nfunction iterationOrder( strides ) {\n\tvar cnt;\n\tvar i;\n\n\tcnt = 0;\n\tfor ( i = 0; i < strides.length; i++ ) {\n\t\tif ( strides[ i ] < 0 ) {\n\t\t\tcnt += 1;\n\t\t}\n\t}\n\tif ( cnt === 0 ) {\n\t\t// All nonnegative strides:\n\t\treturn 1|0; // asm-type annotation\n\t}\n\tif ( cnt === strides.length ) {\n\t\t// All negative strides:\n\t\treturn -1|0; // asm-type annotation\n\t}\n\t// Strides of mixed signs:\n\treturn 0|0; // asm-type annotation\n}\n\n\n// EXPORTS //\n\nexport default iterationOrder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport minmaxViewBufferIndex from './../../../base/minmax-view-buffer-index';\n\n\n// MAIN //\n\n/**\n* Determines if an array is contiguous.\n*\n* @private\n* @param {NonNegativeInteger} len - array length\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @param {integer} iterationOrder - iteration order\n* @returns {boolean} boolean indicating if an array is contiguous\n*/\nfunction isContiguous( len, shape, strides, offset, iterationOrder ) {\n\tvar buf;\n\n\t// If an array does not contain any elements, then no data to store, and, if the array is unordered, adjacent array elements are not guaranteed to be stored next to each other.\n\tif ( len === 0 || iterationOrder === 0 ) {\n\t\treturn false;\n\t}\n\t// Ensure that the array is compatible with a single memory segment:\n\tbuf = minmaxViewBufferIndex( shape, strides, offset );\n\treturn ( len === ( buf[1]-buf[0]+1 ) );\n}\n\n\n// EXPORTS //\n\nexport default isContiguous;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ndarray from '@stdlib/ndarray/base/ctor';\n\n\n// MAIN //\n\n/**\n* Tests if a value is ndarray-like.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is ndarray-like\n*\n* @example\n* import ndarray from '@stdlib/ndarray/ctor';\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isndarrayLike( arr );\n* // returns true\n*\n* bool = isndarrayLike( [] );\n* // returns false\n*/\nfunction isndarrayLike( v ) {\n\treturn (\n\t\tv instanceof ndarray ||\n\t\t(\n\t\t\tv !== null &&\n\t\t\ttypeof v === 'object' &&\n\t\t\ttypeof v.data === 'object' &&\n\t\t\ttypeof v.shape === 'object' &&\n\t\t\ttypeof v.strides === 'object' &&\n\t\t\ttypeof v.offset === 'number' &&\n\t\t\ttypeof v.order === 'string' &&\n\t\t\ttypeof v.ndims === 'number' &&\n\t\t\ttypeof v.dtype === 'string' &&\n\t\t\ttypeof v.length === 'number' &&\n\t\t\ttypeof v.flags === 'object' &&\n\t\t\ttypeof v.get === 'function' &&\n\t\t\ttypeof v.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled \"generic\" array.\n*\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var out = zeros( 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*/\nfunction zeros( len ) {\n\treturn filled( 0.0, len );\n}\n\n\n// EXPORTS //\n\nexport default zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*\n* @example\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filled( value, len ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the number of elements in an array.\n*\n* @param {(NonNegativeIntegerArray|EmptyArray)} shape - array shape\n* @returns {NonNegativeInteger} number of elements\n*\n* @example\n* var n = numel( [ 3, 3, 3 ] );\n* // returns 27\n*/\nfunction numel( shape ) {\n\tvar ndims;\n\tvar n;\n\tvar i;\n\n\tndims = shape.length;\n\tif ( ndims === 0 ) {\n\t\treturn 0;\n\t}\n\tn = 1;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tn *= shape[ i ];\n\t}\n\treturn n;\n}\n\n\n// EXPORTS //\n\nexport default numel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the data type of a provided ndarray.\n*\n* @param {ndarrayLike} x - input ndarray\n* @returns {string} data type\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var x = zeros( [ 3, 3, 3 ], {\n*     'dtype': 'float64'\n* });\n*\n* var dt = dtype( x );\n* // returns 'float64'\n*/\nfunction dtype( x ) {\n\treturn x.dtype;\n}\n\n\n// EXPORTS //\n\nexport default dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies the elements of an indexed array-like object to a new \"generic\" array.\n*\n* @param {Collection} x - input array\n* @returns {Array} output array\n*\n* @example\n* var out = copy( [ 1, 2, 3 ] );\n* // returns [ 1, 2, 3 ]\n*/\nfunction copy( x ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\n\tlen = x.length;\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( x[ i ] ); // use `Array#push` to ensure \"fast\" elements\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copyIndexed from '@stdlib/array/base/copy-indexed';\n\n\n// MAIN //\n\n/**\n* Returns the shape of a provided ndarray.\n*\n* @param {ndarrayLike} x - input ndarray\n* @param {boolean} copy - boolean indicating whether to explicitly copy the value assigned to the input ndarray's `shape` property\n* @returns {NonNegativeIntegerArray} shape\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var out = shape( zeros( [ 3, 3, 3 ] ), false );\n* // returns [ 3, 3, 3 ]\n*/\nfunction shape( x, copy ) {\n\tvar sh = x.shape;\n\tif ( copy ) {\n\t\treturn copyIndexed( sh );\n\t}\n\treturn sh;\n}\n\n\n// EXPORTS //\n\nexport default shape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isColumnMajor from './../../../base/assert/is-column-major-string';\n\n\n// FUNCTIONS //\n\n/**\n* Generates a stride array from an array shape (row-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} array strides\n*/\nfunction rowmajor( shape ) {\n\tvar ndims;\n\tvar out;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\tout = [];\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tout.push( 0 );\n\t}\n\ts = 1;\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\tout[ i ] = s;\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n/**\n* Generates a stride array from an array shape (column-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} array strides\n*/\nfunction columnmajor( shape ) {\n\tvar out;\n\tvar s;\n\tvar i;\n\n\tout = [];\n\ts = 1;\n\tfor ( i = 0; i < shape.length; i++ ) {\n\t\tout.push( s );\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates a stride array from an array shape.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @returns {Array} array strides\n*\n* @example\n* var s = shape2strides( [ 3, 2 ], 'row-major' );\n* // returns [ 2, 1 ]\n*\n* s = shape2strides( [ 3, 2 ], 'column-major' );\n* // returns [ 1, 3 ]\n*/\nfunction shape2strides( shape, order ) {\n\tif ( isColumnMajor( order ) ) {\n\t\treturn columnmajor( shape );\n\t}\n\treturn rowmajor( shape );\n}\n\n\n// EXPORTS //\n\nexport default shape2strides;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies ndarray flags.\n*\n* @private\n* @param {Object} flags - flags\n* @returns {Object} copy of input object\n*/\nfunction copyFlags( flags ) {\n\treturn {\n\t\t'ROW_MAJOR_CONTIGUOUS': flags.ROW_MAJOR_CONTIGUOUS,\n\t\t'COLUMN_MAJOR_CONTIGUOUS': flags.COLUMN_MAJOR_CONTIGUOUS,\n\t\t'READONLY': flags.READONLY\n\t};\n}\n\n\n// EXPORTS //\n\nexport default copyFlags;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} idx - indices\n* @returns {*} array element\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar idx;\n\tvar i;\n\n\tidx = this._offset;\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tidx += this._strides[ i ] * arguments[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\treturn this._buffer.get( idx );\n\t}\n\treturn this._buffer[ idx ];\n}\n\n\n// EXPORTS //\n\nexport default get;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isColumnMajor from './../../../base/assert/is-column-major-string';\n\n\n// MAIN //\n\n/**\n* Returns an array element located a specified linear view index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @returns {*} array element\n*/\nfunction iget( idx ) {\n\t/* eslint-disable no-invalid-this */\n\tvar strides;\n\tvar shape;\n\tvar ndims;\n\tvar ind;\n\tvar s;\n\tvar i;\n\n\tndims = this._ndims;\n\tif ( ndims === 0 ) {\n\t\tif ( this._accessors ) {\n\t\t\treturn this._buffer.get( this._offset );\n\t\t}\n\t\treturn this._buffer[ this._offset ];\n\t}\n\tif ( this._flags.ROW_MAJOR_CONTIGUOUS || this._flags.COLUMN_MAJOR_CONTIGUOUS ) { // eslint-disable-line max-len\n\t\t// Trivial case where we have all positive strides...\n\t\tif ( this._iterationOrder === 1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\treturn this._buffer.get( this._offset+idx );\n\t\t\t}\n\t\t\treturn this._buffer[ this._offset+idx ];\n\t\t}\n\t\t// Trivial case where we have all negative strides...\n\t\tif ( this._iterationOrder === -1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\treturn this._buffer.get( this.offset-idx );\n\t\t\t}\n\t\t\treturn this._buffer[ this._offset-idx ];\n\t\t}\n\t}\n\t// The approach which follows is to resolve a view index to its subscripts and then plug the subscripts into the standard formula for computing the linear index in the underlying data buffer...\n\tshape = this._shape;\n\tstrides = this._strides;\n\tind = this._offset;\n\tif ( isColumnMajor( this._order ) ) {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\ts = idx % shape[ i ];\n\t\t\tidx -= s;\n\t\t\tidx /= shape[ i ];\n\t\t\tind += s * strides[ i ];\n\t\t}\n\t\tif ( this._accessors ) {\n\t\t\treturn this._buffer.get( ind );\n\t\t}\n\t\treturn this._buffer[ ind ];\n\t}\n\t// Case: row-major\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\ts = idx % shape[ i ];\n\t\tidx -= s;\n\t\tidx /= shape[ i ];\n\t\tind += s * strides[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\treturn this._buffer.get( ind );\n\t}\n\treturn this._buffer[ ind ];\n}\n\n\n// EXPORTS //\n\nexport default iget;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*/\nfunction set() {\n\t/* eslint-disable no-invalid-this */\n\tvar idx;\n\tvar i;\n\n\tidx = this._offset;\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\tidx += this._strides[ i ] * arguments[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\tthis._buffer.set( arguments[ i ], idx );\n\t} else {\n\t\tthis._buffer[ idx ] = arguments[ i ];\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default set;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isColumnMajor from './../../../base/assert/is-column-major-string';\n\n\n// MAIN //\n\n/**\n* Sets an array element located a specified linear view index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*/\nfunction iset( idx, v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar strides;\n\tvar shape;\n\tvar ndims;\n\tvar ind;\n\tvar s;\n\tvar i;\n\n\tndims = this._ndims;\n\tif ( ndims === 0 ) {\n\t\tif ( this._accessors ) {\n\t\t\tthis._buffer.set( idx, this._offset );\n\t\t} else {\n\t\t\tthis._buffer[ this._offset ] = idx;\n\t\t}\n\t\treturn this;\n\t}\n\tif ( this._flags.ROW_MAJOR_CONTIGUOUS || this._flags.COLUMN_MAJOR_CONTIGUOUS ) { // eslint-disable-line max-len\n\t\t// Trivial case where we have all positive strides...\n\t\tif ( this._iterationOrder === 1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\tthis._buffer.set( v, this._offset+idx );\n\t\t\t} else {\n\t\t\t\tthis._buffer[ this._offset+idx ] = v;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\t// Trivial case where we have all negative strides...\n\t\tif ( this._iterationOrder === -1 ) {\n\t\t\tif ( this._accessors ) {\n\t\t\t\tthis._buffer.set( v, this._offset-idx );\n\t\t\t} else {\n\t\t\t\tthis._buffer[ this._offset-idx ] = v;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t}\n\t// The approach which follows is to resolve a view index to its subscripts and then plug the subscripts into the standard formula for computing the linear index in the underlying data buffer...\n\tshape = this._shape;\n\tstrides = this._strides;\n\tind = this._offset;\n\tif ( isColumnMajor( this._order ) ) {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\ts = idx % shape[ i ];\n\t\t\tidx -= s;\n\t\t\tidx /= shape[ i ];\n\t\t\tind += s * strides[ i ];\n\t\t}\n\t\tif ( this._accessors ) {\n\t\t\tthis._buffer.set( v, ind );\n\t\t} else {\n\t\t\tthis._buffer[ ind ] = v;\n\t\t}\n\t\treturn this;\n\t}\n\t// Case: row-major\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\ts = idx % shape[ i ];\n\t\tidx -= s;\n\t\tidx /= shape[ i ];\n\t\tind += s * strides[ i ];\n\t}\n\tif ( this._accessors ) {\n\t\tthis._buffer.set( v, ind );\n\t} else {\n\t\tthis._buffer[ ind ] = v;\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default iset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport real from '@stdlib/complex/float64/real';\nimport imag from '@stdlib/complex/float64/imag';\n\n\n// MAIN //\n\n/**\n* Serializes an ndarray as a JSON object.\n*\n* ## Notes\n*\n* -   The method does **not** serialize data outside of the buffer region defined by the array configuration.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out;\n\tvar len;\n\tvar v;\n\tvar i;\n\n\tlen = this._length;\n\n\t// Build an object containing all ndarray properties needed to revive a serialized ndarray...\n\tout = {};\n\tout.type = 'ndarray';\n\tout.dtype = this.dtype;\n\tout.flags = {\n\t\t'READONLY': this._flags.READONLY\n\t};\n\tout.order = this._order;\n\tout.shape = this._shape.slice();\n\tout.strides = this._strides.slice();\n\n\t// Flip the signs of negative strides:\n\tfor ( i = 0; i < out.strides.length; i++ ) {\n\t\tif ( out.strides[ i ] < 0 ) {\n\t\t\tout.strides[ i ] *= -1;\n\t\t}\n\t}\n\t// Cast data to generic array...\n\tout.data = [];\n\tif ( out.dtype === 'complex64' || out.dtype === 'complex128' ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = this.iget( i );\n\t\t\tout.data.push( real( v ), imag( v ) );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tout.data.push( this.iget( i ) );\n\t\t}\n\t}\n\treturn out;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts an ndarray instance to a primitive value.\n*\n* ## Notes\n*\n* -   Only zero-dimensional ndarrays are converted to a primitive value. For ndarray instances having one or more dimensions, the method returns the `this` value, as is the default behavior for objects.\n*\n* @private\n* @returns {(*|ndarray)} result\n*/\nfunction valueOf() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tif ( this._ndims === 0 ) {\n\t\treturn this.iget();\n\t}\n\treturn this;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// EXPORTS //\n\nexport default valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a stride array from an array shape.\n*\n* @module @stdlib/ndarray/base/shape2strides\n*\n* @example\n* import shape2strides from '@stdlib/ndarray/base/shape2strides';\n*\n* var strides = shape2strides( [ 3, 2 ], 'row-major' );\n* // returns [ 2, 1 ]\n*\n* strides = shape2strides( [ 3, 2 ], 'column-major' );\n* // returns [ 1, 3 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isColumnMajor from './../../../base/assert/is-column-major-string';\n\n\n// FUNCTIONS //\n\n/**\n* Generates a stride array from an array shape (row-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} array strides\n*/\nfunction rowmajor( shape, out ) {\n\tvar ndims;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\ts = 1;\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\tout[ i ] = s;\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n/**\n* Generates a stride array from an array shape (column-major).\n*\n* @private\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} array strides\n*/\nfunction columnmajor( shape, out ) {\n\tvar s;\n\tvar i;\n\n\ts = 1;\n\tfor ( i = 0; i < shape.length; i++ ) {\n\t\tout[ i ] = s;\n\t\ts *= shape[ i ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates a stride array from an array shape.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @param {(Array|TypedArray|Object)} out - output object\n* @returns {(Array|TypedArray|Object)} array strides\n*\n* @example\n* var strides = [ 0, 0 ];\n*\n* var out = shape2strides( [ 3, 2 ], 'row-major', strides );\n* // returns [ 2, 1 ]\n*\n* var bool = ( out === strides );\n* // returns true\n*\n* out = shape2strides( [ 3, 2 ], 'column-major', strides );\n* // returns [ 1, 3 ]\n*/\nfunction shape2strides( shape, order, out ) {\n\tif ( isColumnMajor( order ) ) {\n\t\treturn columnmajor( shape, out );\n\t}\n\treturn rowmajor( shape, out );\n}\n\n\n// EXPORTS //\n\nexport default shape2strides;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport shape2strides from './../../../base/shape2strides';\nimport copyIndexed from '@stdlib/array/base/copy-indexed';\n\n\n// VARIABLES //\n\nvar ROW_MAJOR = 'row-major';\n\n\n// MAIN //\n\n/**\n* Returns the strides of a provided ndarray.\n*\n* @param {ndarrayLike} x - input ndarray\n* @param {boolean} copy - boolean indicating whether to explicitly copy the value assigned to the input ndarray's `strides` property\n* @returns {IntegerArray} strides\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var out = strides( zeros( [ 3, 3, 3 ] ), false );\n* // returns [ 9, 3, 1 ]\n*/\nfunction strides( x, copy ) {\n\tvar ord;\n\tvar sh;\n\tvar st;\n\n\tst = x.strides;\n\tif ( typeof st !== 'object' || st === null ) {\n\t\tsh = x.shape;\n\t\tif ( sh.length === 0 ) {\n\t\t\treturn [ 0 ];\n\t\t}\n\t\tord = x.order;\n\t\tif ( typeof ord !== 'string' ) {\n\t\t\tord = ROW_MAJOR;\n\t\t}\n\t\treturn shape2strides( sh, ord );\n\t}\n\tif ( copy ) {\n\t\treturn copyIndexed( st );\n\t}\n\treturn st;\n}\n\n\n// EXPORTS //\n\nexport default strides;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the index offset which specifies the location of the first indexed value in a multidimensional array based on a stride array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @returns {NonNegativeInteger} offset - offset\n*\n* @example\n* var shape = [ 2, 3, 10 ];\n* var strides = [ 30, -10, 1 ];\n*\n* var offset = strides2offset( shape, strides );\n* // returns 20\n*/\nfunction strides2offset( shape, strides ) {\n\tvar offset;\n\tvar ndims;\n\tvar i;\n\n\tndims = shape.length;\n\toffset = 0;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tif ( strides[ i ] < 0 ) {\n\t\t\t// Note that, since the stride is negative, this operation increments, not decrements, the offset...\n\t\t\toffset -= strides[ i ] * ( shape[ i ]-1 );\n\t\t}\n\t}\n\treturn offset;\n}\n\n\n// EXPORTS //\n\nexport default strides2offset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strides2offset from './../../../base/strides2offset';\n\n\n// MAIN //\n\n/**\n* Returns the index offset specifying the underlying buffer index of the first iterated ndarray element.\n*\n* @param {ndarrayLike} x - input ndarray\n* @returns {NonNegativeInteger} index offset\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var n = offset( zeros( [ 3, 3, 3 ] ) );\n* // returns 0\n*/\nfunction offset( x ) {\n\tvar st;\n\tvar sh;\n\tvar o;\n\n\to = x.offset;\n\tif ( typeof o === 'number' ) {\n\t\treturn o;\n\t}\n\tsh = x.shape;\n\tif ( sh.length === 0 ) {\n\t\treturn 0;\n\t}\n\tst = x.strides;\n\tif ( typeof st !== 'object' || st === null ) {\n\t\treturn 0;\n\t}\n\treturn strides2offset( sh, st );\n}\n\n\n// EXPORTS //\n\nexport default offset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport strides2order from './../../../base/strides2order';\n\n\n// VARIABLES //\n\nvar ROW_MAJOR = 'row-major';\nvar COLUMN_MAJOR = 'column-major';\n\n\n// MAIN //\n\n/**\n* Returns the layout order of a provided ndarray.\n*\n* @param {ndarrayLike} x - input ndarray\n* @returns {(string|null)} layout order\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var x = zeros( [ 3, 3, 3 ], {\n*     'order': 'row-major'\n* });\n*\n* var out = order( x );\n* // returns 'row-major'\n*/\nfunction order( x ) {\n\tvar st;\n\tvar o;\n\n\to = x.order;\n\tif ( isString( o ) ) {\n\t\treturn o;\n\t}\n\t// Try to infer the layout order from the strides array...\n\tst = x.strides;\n\tif ( typeof st !== 'object' || st === null ) {\n\t\treturn ROW_MAJOR; // WARNING: default to row-major for ndarray-like objects lacking strides. This may or may not be accurate, and we're defaulting to row-major here based on the belief that row-major is more likely given that, e.g., JavaScript arrays are similar to C arrays (i.e., stored in row-major order).\n\t}\n\to = strides2order( st );\n\tif ( o === 1 || o === 3 ) {\n\t\treturn ROW_MAJOR; // for o == 3 (both row- and column-major; e.g., one-dimensional ndarrays), default to row-major\n\t}\n\tif ( o === 2 ) {\n\t\treturn COLUMN_MAJOR;\n\t}\n\t// o === 0\n\tif ( x.shape.length === 0 ) {\n\t\treturn ROW_MAJOR; // default to row-major for zero-dimensional ndarrays\n\t}\n\t// Case: mixed strides (e.g., [ 2, 3, 1 ] )\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default order;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the underlying data buffer of a provided ndarray.\n*\n* @param {ndarrayLike} x - input ndarray\n* @returns {Collection} underlying data buffer\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var x = zeros( [ 3, 3, 3 ], {\n*     'dtype': 'float64'\n* });\n*\n* var out = data( x );\n* // returns <Float64Array>\n*/\nfunction data( x ) {\n\treturn x.data;\n}\n\n\n// EXPORTS //\n\nexport default data;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from '@stdlib/array/base/assert/is-accessor-array';\nimport accessorGetter from '@stdlib/array/base/accessor-getter';\nimport accessorSetter from '@stdlib/array/base/accessor-setter';\nimport getter from '@stdlib/array/base/getter';\nimport setter from '@stdlib/array/base/setter';\nimport numel from './../../../base/numel';\nimport getDType from './../../../base/dtype';\nimport getShape from './../../../base/shape';\nimport getStrides from './../../../base/strides';\nimport getOffset from './../../../base/offset';\nimport getOrder from './../../../base/order';\nimport getData from './../../../base/data-buffer';\n\n\n// MAIN //\n\n/**\n* Converts an ndarray-like object to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding ndarray meta data to ensure that internal functions operating on ndarrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **ref**: reference to the original ndarray-like object.\n*     -   **dtype**: underlying data type.\n*     -   **data**: data buffer.\n*     -   **length**: number of elements.\n*     -   **shape**: array dimensions.\n*     -   **strides**: array strides.\n*     -   **offset**: index offset.\n*     -   **order**: order.\n*     -   **accessorProtocol**: `boolean` indicating whether the data buffer supports the get/set protocol (i.e., uses accessors for getting and setting elements).\n*     -   **accessors**: a two-element array whose first element is an accessor for retrieving an ndarray element and whose second element is an accessor for setting an ndarray element.\n*\n* @param {ndarrayLike} x - ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @returns {Object} object containing ndarray meta data\n*\n* @example\n* import array from '@stdlib/ndarray/array';\n*\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ] );\n*\n* var obj = ndarraylike2object( x );\n* // returns {...}\n*/\nfunction ndarraylike2object( x ) {\n\tvar xbuf;\n\tvar bool;\n\tvar sh;\n\tvar dt;\n\n\txbuf = getData( x );\n\tsh = getShape( x, true );\n\tdt = getDType( x );\n\n\tbool = isAccessorArray( xbuf );\n\n\treturn {\n\t\t'ref': x,\n\t\t'dtype': dt,\n\t\t'data': xbuf,\n\t\t'length': numel( sh ),\n\t\t'shape': sh,\n\t\t'strides': getStrides( x, true ),\n\t\t'offset': getOffset( x ),\n\t\t'order': getOrder( x ),\n\t\t'accessorProtocol': bool,\n\t\t'accessors': ( bool ) ?\n\t\t\t[ accessorGetter( dt ), accessorSetter( dt ) ] :\n\t\t\t[ getter( dt ), setter( dt ) ]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default ndarraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Buffer from '@stdlib/buffer/ctor';\nimport Float64Array from '@stdlib/array/float64';\nimport Float32Array from '@stdlib/array/float32';\nimport Int16Array from '@stdlib/array/int16';\nimport Int32Array from '@stdlib/array/int32';\nimport Int8Array from '@stdlib/array/int8';\nimport Uint16Array from '@stdlib/array/uint16';\nimport Uint32Array from '@stdlib/array/uint32';\nimport Uint8Array from '@stdlib/array/uint8';\nimport Uint8ClampedArray from '@stdlib/array/uint8c';\nimport Complex64Array from '@stdlib/array/complex64';\nimport Complex128Array from '@stdlib/array/complex128';\nimport BooleanArray from '@stdlib/array/bool';\n\n\n// MAIN //\n\n// Mapping from data types to underlying buffer constructors...\nvar ctors = {\n\t'binary': Buffer,\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'generic': Array, // TODO: replace with `stdlib` pkg\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray,\n\t'complex64': Complex64Array,\n\t'complex128': Complex128Array,\n\t'bool': BooleanArray\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Allocate a buffer having a specified number of bytes.\n*\n* @module @stdlib/buffer/alloc-unsafe\n*\n* @example\n* import allocUnsafe from '@stdlib/buffer/alloc-unsafe';\n*\n* var buf = allocUnsafe( 10 );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nimport hasAllocUnsafe from './has_alloc_unsafe.js';\nimport main from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar allocUnsafe;\nif ( hasAllocUnsafe ) {\n\tallocUnsafe = main;\n} else {\n\tallocUnsafe = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default allocUnsafe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport Buffer from './../../ctor';\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.allocUnsafe );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNonNegativeInteger from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\nimport Buffer from './../../ctor';\n\n\n// MAIN //\n\n/**\n* Allocates a buffer having a specified number of bytes.\n*\n* ## Notes\n*\n* -   The underlying memory of returned `Buffer` instances is not initialized. Memory contents are unknown and may contain sensitive data.\n* -   When the size is less than half the pool size (specified on the `Buffer` constructor), memory is allocated from the `Buffer` pool for faster allocation of new `Buffer` instances.\n*\n* @param {NonNegativeInteger} size - number of bytes to allocate\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var buf = allocUnsafe( 10 );\n* // returns <Buffer>\n*/\nfunction allocUnsafe( size ) {\n\tif ( !isNonNegativeInteger( size ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', size ) );\n\t}\n\treturn Buffer.allocUnsafe( size );\n}\n\n\n// EXPORTS //\n\nexport default allocUnsafe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNonNegativeInteger from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\nimport Buffer from './../../ctor';\n\n\n// MAIN //\n\n/**\n* Allocates a buffer having a specified number of bytes.\n*\n* ## Notes\n*\n* -   The underlying memory of returned `Buffer` instances is not initialized. Memory contents are unknown and may contain sensitive data.\n* -   When the size is less than half the pool size (specified on the `Buffer` constructor), memory is allocated from the `Buffer` pool for faster allocation of new `Buffer` instances.\n*\n* @param {NonNegativeInteger} size - number of bytes to allocate\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var buf = allocUnsafe( 10 );\n* // returns <Buffer>\n*/\nfunction allocUnsafe( size ) {\n\tif ( !isNonNegativeInteger( size ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', size ) );\n\t}\n\treturn new Buffer( size );\n}\n\n\n// EXPORTS //\n\nexport default allocUnsafe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport bufferCtors from './../../../base/buffer-ctors';\nimport allocUnsafe from '@stdlib/buffer/alloc-unsafe';\nimport zeros from './zeros.js';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a zero-filled generic array.\n*\n* @private\n* @param {NonNegativeInteger} size - buffer size\n* @returns {Array} zero-filled generic array\n*/\nfunction generic( size ) {\n\tvar buf;\n\tvar i;\n\n\tbuf = [];\n\tfor ( i = 0; i < size; i++ ) {\n\t\tbuf.push( 0 );\n\t}\n\treturn buf;\n}\n\n/**\n* Returns a zero-filled binary buffer.\n*\n* @private\n* @param {NonNegativeInteger} size - buffer size\n* @returns {Buffer} zero-filled binary buffer\n*/\nfunction binary( size ) {\n\treturn zeros( allocUnsafe( size ) );\n}\n\n/**\n* Returns a typed array.\n*\n* @private\n* @param {string} dtype - data type\n* @param {NonNegativeInteger} size - buffer size\n* @returns {(TypedArray|null)} typed array\n*/\nfunction typedarray( dtype, size ) {\n\tvar ctor = bufferCtors( dtype );\n\tif ( ctor ) {\n\t\treturn new ctor( size );\n\t}\n\treturn null;\n}\n\n\n// MAIN //\n\n/**\n* Returns a contiguous linear ndarray data buffer.\n*\n* @param {string} dtype - data type\n* @param {NonNegativeInteger} size - buffer size\n* @returns {(Array|TypedArray|Buffer|null)} data buffer\n*\n* @example\n* var buf = buffer( 'float64', 3 );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0 ]\n*/\nfunction buffer( dtype, size ) {\n\tif ( dtype === 'generic' ) {\n\t\treturn generic( size );\n\t}\n\tif ( dtype === 'binary' ) {\n\t\treturn binary( size );\n\t}\n\treturn typedarray( dtype, size );\n}\n\n\n// EXPORTS //\n\nexport default buffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns an ndarray data buffer constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} data buffer constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Fills an array-like object with zeros.\n*\n* @private\n* @param {(Array|TypedArray|Buffer)} v - array-like object to fill\n* @returns {(Array|TypedArray|Buffer)} input value\n*\n* @example\n* var arr = zeros( new Array( 2 ) );\n* // returns [ 0, 0 ]\n*/\nfunction zeros( v ) {\n\tvar i;\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tv[ i ] = 0;\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only nonnegative integers.\n*\n* @module @stdlib/assert/is-nonnegative-integer-array\n*\n* @example\n* import isNonNegativeIntegerArray from '@stdlib/assert/is-nonnegative-integer-array';\n*\n* var bool = isNonNegativeIntegerArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* import { primitives as isNonNegativeIntegerArray } from '@stdlib/assert/is-nonnegative-integer-array';\n*\n* var bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* import { objects as isNonNegativeIntegerArray } from '@stdlib/assert/is-nonnegative-integer-array';\n*\n* var bool = isNonNegativeIntegerArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport isNonNegativeInteger from './../../is-nonnegative-integer';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport arrayfun from './../../tools/array-like-function';\n\n\n// VARIABLES //\n\nvar isPrimitiveArray = arrayfun( isNonNegativeInteger.isPrimitive );\nvar isObjectArray = arrayfun( isNonNegativeInteger.isObject );\n\n\n// MAIN //\n\nvar isNonNegativeIntegerArray = arrayfun( isNonNegativeInteger );\nsetReadOnly( isNonNegativeIntegerArray, 'primitives', isPrimitiveArray );\nsetReadOnly( isNonNegativeIntegerArray, 'objects', isObjectArray );\n\n\n// EXPORTS //\n\nexport default isNonNegativeIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only integers.\n*\n* @module @stdlib/assert/is-integer-array\n*\n* @example\n* import isIntegerArray from '@stdlib/assert/is-integer-array';\n*\n* var bool = isIntegerArray( [ -3.0, new Number(0.0), 2.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* import { primitives as isIntegerArray } from '@stdlib/assert/is-integer-array';\n*\n* var bool = isIntegerArray( [ -1.0, 10.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -1.0, 0.0, 5.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* import { objects as isIntegerArray } from '@stdlib/assert/is-integer-array';\n*\n* var bool = isIntegerArray( [ new Number(1.0), new Number(3.0) ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -1.0, 0.0, 3.0 ] );\n* // returns false\n*\n* bool = isIntegerArray( [ 3.0, new Number(-1.0) ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport isInteger from './../../is-integer';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport arrayfun from './../../tools/array-like-function';\n\n\n// VARIABLES //\n\nvar isPrimitiveArray = arrayfun( isInteger.isPrimitive );\nvar isObjectArray = arrayfun( isInteger.isObject );\n\n\n// MAIN //\n\nvar isIntegerArray = arrayfun( isInteger );\nsetReadOnly( isIntegerArray, 'primitives', isPrimitiveArray );\nsetReadOnly( isIntegerArray, 'objects', isObjectArray );\n\n\n// EXPORTS //\n\nexport default isIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as contains } from '@stdlib/array/base/assert/contains';\nimport orders from './../../../../orders';\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is an ndarray order.\n*\n* @name isOrder\n* @type {Function}\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is an ndarray order\n*\n* @example\n* var bool = isOrder( 'row-major' );\n* // returns true\n*\n* bool = isOrder( 'column-major' );\n* // returns true\n*\n* bool = isOrder( 'foo' );\n* // returns false\n*/\nvar isOrder = contains( orders() );\n\n\n// EXPORTS //\n\nexport default isOrder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as contains } from '@stdlib/array/base/assert/contains';\nimport dtypes from './../../../../dtypes';\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported ndarray data type.\n*\n* @name isDataType\n* @type {Function}\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported ndarray data type\n*\n* @example\n* var bool = isDataType( 'binary' );\n* // returns true\n*\n* bool = isDataType( 'float32' );\n* // returns true\n*\n* bool = isDataType( 'float64' );\n* // returns true\n*\n* bool = isDataType( 'generic' );\n* // returns true\n*\n* bool = isDataType( 'int16' );\n* // returns true\n*\n* bool = isDataType( 'int32' );\n* // returns true\n*\n* bool = isDataType( 'int8' );\n* // returns true\n*\n* bool = isDataType( 'uint16' );\n* // returns true\n*\n* bool = isDataType( 'uint32' );\n* // returns true\n*\n* bool = isDataType( 'uint8' );\n* // returns true\n*\n* bool = isDataType( 'uint8c' );\n* // returns true\n*\n* bool = isDataType( 'foo' );\n* // returns false\n*/\nvar isDataType = contains( dtypes() );\n\n\n// EXPORTS //\n\nexport default isDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default ndarray settings.\n*\n* @returns {Object} defaults\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t// Data types:\n\t\t'dtypes': {\n\t\t\t'default': 'float64',\n\t\t\t'numeric': 'float64',\n\t\t\t'real': 'float64',\n\t\t\t'floating_point': 'float64',\n\t\t\t'real_floating_point': 'float64',\n\t\t\t'complex_floating_point': 'complex128',\n\t\t\t'integer': 'int32',\n\t\t\t'signed_integer': 'int32',\n\t\t\t'unsigned_integer': 'uint32',\n\t\t\t'boolean': 'bool',\n\t\t\t'index': 'int32',\n\t\t\t'integer_index': 'int32',\n\t\t\t'boolean_index': 'bool',\n\t\t\t'mask_index': 'uint8'\n\t\t},\n\n\t\t// Memory layout:\n\t\t'order': 'row-major',\n\n\t\t// Casting mode:\n\t\t'casting': 'safe',\n\n\t\t// Index mode:\n\t\t'index_mode': 'throw'\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defaults from './main.js';\n\n\n// VARIABLES //\n\nvar DEFAULTS = defaults();\nvar HASH = {\n\t'dtypes.default': DEFAULTS.dtypes.default,\n\t'dtypes.numeric': DEFAULTS.dtypes.numeric,\n\t'dtypes.real': DEFAULTS.dtypes.real,\n\t'dtypes.floating_point': DEFAULTS.dtypes.floating_point,\n\t'dtypes.real_floating_point': DEFAULTS.dtypes.real_floating_point,\n\t'dtypes.complex_floating_point': DEFAULTS.dtypes.complex_floating_point,\n\t'dtypes.integer': DEFAULTS.dtypes.integer,\n\t'dtypes.signed_integer': DEFAULTS.dtypes.signed_integer,\n\t'dtypes.unsigned_integer': DEFAULTS.dtypes.unsigned_integer,\n\t'dtypes.boolean': DEFAULTS.dtypes.boolean,\n\t'dtypes.index': DEFAULTS.dtypes.index,\n\t'dtypes.integer_index': DEFAULTS.dtypes.integer_index,\n\t'dtypes.boolean_index': DEFAULTS.dtypes.boolean_index,\n\t'dtypes.mask_index': DEFAULTS.dtypes.mask_index,\n\t'order': DEFAULTS.order,\n\t'casting': DEFAULTS.casting,\n\t'index_mode': DEFAULTS.index_mode\n};\n\n\n// MAIN //\n\n/**\n* Returns a default ndarray setting.\n*\n* @param {string} name - setting name\n* @returns {*} default setting or null\n*\n* @example\n* var v = get( 'dtypes.default' );\n* // returns <string>\n*/\nfunction get( name ) {\n\tvar v = HASH[ name ];\n\treturn ( v === void 0 ) ? null : v;\n}\n\n\n// EXPORTS //\n\nexport default get;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests that a value is a valid constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var ctor = function ctor() {};\n*\n* var err = validate( ctor );\n* // returns null\n*\n* err = validate( null );\n* // returns <TypeError>\n*/\nfunction validate( value ) {\n\tvar type = typeof value;\n\tif (\n\t\tvalue === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\treturn new TypeError( format( 'invalid argument. A provided constructor must be either an object (except null) or a function. Value: `%s`.', value ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return default ndarray settings.\n*\n* @module @stdlib/ndarray/defaults\n*\n* @example\n* import defaults from '@stdlib/ndarray/defaults';\n*\n* var o = defaults();\n* // returns {...}\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport get from './get.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'get', get );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Object.create;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Ctor() {\n\t// Empty...\n}\n\n\n// MAIN //\n\n/**\n* An `Object.create` shim for older JavaScript engines.\n*\n* @private\n* @param {Object} proto - prototype\n* @returns {Object} created object\n*\n* @example\n* var obj = createObject( Object.prototype );\n* // returns {}\n*/\nfunction createObject( proto ) {\n\tCtor.prototype = proto;\n\treturn new Ctor();\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar createObject;\nif ( typeof builtin === 'function' ) {\n\tcreateObject = builtin;\n} else {\n\tcreateObject = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Restricts an index to the interval `[0,max]`.\n*\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @returns {NonNegativeInteger} index\n*\n* @example\n* var idx = clampIndex( -1, 10 );\n* // returns 0\n*\n* idx = clampIndex( 15, 10 );\n* // returns 10\n*\n* idx = clampIndex( 5, 10 );\n* // returns 5\n*/\nfunction clampIndex( idx, max ) {\n\tif ( idx < 0 ) {\n\t\treturn 0;\n\t}\n\tif ( idx > max ) {\n\t\treturn max;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nexport default clampIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Wraps an index on the interval `[0,max]`.\n*\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @returns {NonNegativeInteger} index\n*\n* @example\n* var idx = wrapIndex( -1, 10 );\n* // returns 10\n*\n* idx = wrapIndex( 13, 10 );\n* // returns 2\n*\n* idx = wrapIndex( 6, 10 );\n* // returns 6\n*/\nfunction wrapIndex( idx, max ) {\n\tvar mp1 = max + 1;\n\tif ( idx < 0 ) {\n\t\tidx += mp1; // slight optimization to avoid modulo arithmetic when |idx| <= max+1\n\t\tif ( idx < 0 ) {\n\t\t\tidx %= mp1;\n\t\t\tif ( idx !== 0 ) {\n\t\t\t\tidx += mp1;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\tif ( idx > max ) {\n\t\tidx -= mp1; // slight optimization to avoid modulo arithmetic when max+1 < idx <= 2*(max+1)\n\t\tif ( idx > max ) {\n\t\t\tidx %= mp1;\n\t\t}\n\t\treturn idx;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nexport default wrapIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Normalizes an index to the interval `[0,max]`.\n*\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @returns {integer} index\n*\n* @example\n* var idx = normalizeIndex( -2, 10 );\n* // returns 9\n*\n* idx = normalizeIndex( 15, 10 );\n* // returns -1\n*\n* idx = normalizeIndex( 5, 10 );\n* // returns 5\n*/\nfunction normalizeIndex( idx, max ) {\n\tif ( idx < 0 ) {\n\t\tidx += max + 1;\n\t\tif ( idx < 0 ) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn idx;\n\t}\n\tif ( idx > max ) {\n\t\treturn -1;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nexport default normalizeIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as contains } from '@stdlib/array/base/assert/contains';\nimport modes from './../../../../index-modes';\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported ndarray index mode.\n*\n* @name isIndexMode\n* @type {Function}\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported ndarray index mode\n*\n* @example\n* var bool = isIndexMode( 'wrap' );\n* // returns true\n*\n* bool = isIndexMode( 'clamp' );\n* // returns true\n*\n* bool = isIndexMode( 'throw' );\n* // returns true\n*\n* bool = isIndexMode( 'foo' );\n* // returns false\n*/\nvar isIndexMode = contains( modes() );\n\n\n// EXPORTS //\n\nexport default isIndexMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport clampIndex from './../../../base/clamp-index';\nimport wrapIndex from './../../../base/wrap-index';\nimport normalize from './../../../base/normalize-index';\nimport isIndexMode from './../../../base/assert/is-index-mode';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar TABLE = {\n\t'wrap': wrapIndex,\n\t'clamp': clampIndex,\n\t'normalize': normalizeIndex,\n\t'throw': throwIfOutOfBounds\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an index if within bounds and throw an error otherwise.\n*\n* @private\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @throws {RangeError} index out-of-bounds\n* @returns {integer} index\n*\n* @example\n* var idx = throwIfOutOfBounds( 2, 9 );\n* // returns 2\n*\n* idx = throwIfOutOfBounds( 10, 9 );\n* // throws <RangeError>\n*\n* idx = throwIfOutOfBounds( -1, 9 );\n* // throws <RangeError>\n*/\nfunction throwIfOutOfBounds( idx, max ) {\n\tif ( idx < 0 || idx > max ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index must resolve to a value on the interval: [0, %d]. Value: `%d`.', max, idx ) );\n\t}\n\treturn idx;\n}\n\n/**\n* Normalizes an index before performing a strict bounds check.\n*\n* @private\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @throws {RangeError} index out-of-bounds\n* @returns {integer} index\n*\n* @example\n* var idx = normalizeIndex( 1, 10 );\n* // returns 1\n*\n* idx = normalizeIndex( -4, 10 );\n* // returns 7\n*\n* idx = normalizeIndex( -100, 10 );\n* // throws <RangeError>\n*/\nfunction normalizeIndex( idx, max ) {\n\tvar index = normalize( idx, max );\n\tif ( index < 0 || index > max ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index must resolve to a value on the interval: [0, %d]. Value: `%d`.', max, idx ) );\n\t}\n\treturn index;\n}\n\n\n// MAIN //\n\n/**\n* Returns a function for returning an index according to a provided index mode.\n*\n* @param {string} mode - specifies how to handle an out-of-bounds index\n* @throws {TypeError} first argument must be a recognized index mode\n* @returns {Function} function for returning an index\n*\n* @example\n* var ind = factory( 'clamp' );\n*\n* var idx = ind( 2, 9 );\n* // returns 2\n*\n* idx = ind( 10, 9 );\n* // returns 9\n*\n* idx = ind( -1, 9 );\n* // returns 0\n*\n* @example\n* var ind = factory( 'wrap' );\n*\n* var idx = ind( 2, 9 );\n* // returns 2\n*\n* idx = ind( 10, 9 );\n* // returns 0\n*\n* idx = ind( -1, 9 );\n* // returns 9\n*\n* @example\n* var ind = factory( 'throw' );\n*\n* var idx = ind( 2, 9 );\n* // returns 2\n*\n* idx = ind( 10, 9 );\n* // throws <RangeError>\n*\n* idx = ind( -1, 9 );\n* // throws <RangeError>\n*\n* @example\n* var ind = factory( 'normalize' );\n*\n* var idx = ind( 1, 10 );\n* // returns 1\n*\n* idx = ind( -4, 10 );\n* // returns 7\n*\n* idx = ind( -100, 10 );\n* // throws <RangeError>\n*/\nfunction factory( mode ) {\n\tif ( !isIndexMode( mode ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a recognized index mode. Value: `%s`.', mode ) );\n\t}\n\treturn TABLE[ mode ];\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport clampIndex from './../../../base/clamp-index';\nimport wrapIndex from './../../../base/wrap-index';\nimport normalizeIndex from './../../../base/normalize-index';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an index given an index mode.\n*\n* @param {integer} idx - index\n* @param {NonNegativeInteger} max - maximum index\n* @param {string} mode - specifies how to handle an index outside the interval `[0,max]`\n* @throws {RangeError} index out-of-bounds\n* @returns {integer} index\n*\n* @example\n* var idx = ind( 2, 9, 'clamp' );\n* // returns 2\n*\n* idx = ind( 10, 9, 'clamp' );\n* // returns 9\n*\n* idx = ind( -1, 9, 'clamp' );\n* // returns 0\n*\n* @example\n* var idx = ind( 2, 9, 'wrap' );\n* // returns 2\n*\n* idx = ind( 10, 9, 'wrap' );\n* // returns 0\n*\n* idx = ind( -1, 9, 'wrap' );\n* // returns 9\n*\n* @example\n* var idx = ind( 2, 9, 'throw' );\n* // returns 2\n*\n* idx = ind( 10, 9, 'throw' );\n* // throws <RangeError>\n*\n* idx = ind( -1, 9, 'throw' );\n* // throws <RangeError>\n*\n* @example\n* var idx = ind( 1, 10, 'normalize' );\n* // returns 1\n*\n* idx = ind( -4, 10, 'normalize' );\n* // returns 7\n*\n* idx = ind( -100, 10, 'normalize' );\n* // throws <RangeError>\n*/\nfunction ind( idx, max, mode ) {\n\tvar index;\n\tif ( mode === 'clamp' ) {\n\t\treturn clampIndex( idx, max );\n\t}\n\tif ( mode === 'wrap' ) {\n\t\treturn wrapIndex( idx, max );\n\t}\n\tindex = idx;\n\tif ( mode === 'normalize' ) {\n\t\tindex = normalizeIndex( index, max );\n\t}\n\tif ( index < 0 || index > max ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index must resolve to a value on the interval: [0, %d]. Value: `%d`.', max, idx ) );\n\t}\n\treturn index;\n}\n\n\n// EXPORTS //\n\nexport default ind;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an index given an index mode.\n*\n* @module @stdlib/ndarray/base/ind\n*\n* @example\n* import ind from '@stdlib/ndarray/base/ind';\n*\n* var idx = ind( -1, 10, 'wrap' );\n* // returns 10\n*\n* idx = ind( 14, 10, 'wrap' );\n* // returns 3\n*\n* idx = ind( 6, 10, 'wrap' );\n* // returns 6\n*\n* @example\n* import ind from '@stdlib/ndarray/base/ind';\n*\n* var idx = ind( -1, 10, 'clamp' );\n* // returns 0\n*\n* idx = ind( 14, 10, 'clamp' );\n* // returns 10\n*\n* idx = ind( 6, 10, 'clamp' );\n* // returns 6\n*\n* @example\n* import ind from '@stdlib/ndarray/base/ind';\n*\n* var idx = ind( 1, 10, 'throw' );\n* // returns 1\n*\n* idx = ind( 14, 10, 'throw' );\n* // throws <RangeError>\n*\n* idx = ind( -1, 10, 'throw' );\n* // throws <RangeError>\n*\n* @example\n* import ind from '@stdlib/ndarray/base/ind';\n*\n* var idx = ind( 1, 10, 'normalize' );\n* // returns 1\n*\n* idx = ind( -4, 10, 'normalize' );\n* // returns 7\n*\n* idx = ind( -100, 10, 'normalize' );\n* // throws <RangeError>\n*\n* @example\n* import ind from '@stdlib/ndarray/base/ind';\n*\n* var fcn = ind.factory( 'clamp' );\n*\n* var idx = fcn( -1, 10 );\n* // returns 0\n*\n* idx = fcn( 14, 10 );\n* // returns 10\n*\n* idx = fcn( 6, 10 );\n* // returns 6\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport factory from './factory.js';\nimport main from './main.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport getIndex from './../../base/ind';\nimport parent from './../../base/ctor'; // eslint-disable-line stdlib/no-redeclare\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar base = parent.prototype.iget;\n\n\n// MAIN //\n\n/**\n* Returns an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @throws {TypeError} index must be an integer\n* @throws {RangeError} index exceeds array dimensions\n* @returns {*} array element\n*/\nfunction iget( idx ) {\n\tif ( this._ndims > 0 ) {\n\t\tif ( !isInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index must be an integer. Value: `%s`.', idx ) );\n\t\t}\n\t\tidx = getIndex( idx, this._length-1, this._mode );\n\t\treturn base.call( this, idx );\n\t}\n\treturn base.call( this );\n}\n\n\n// EXPORTS //\n\nexport default iget;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// METHODS //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport getIndex from './../../base/ind';\nimport parent from './../../base/ctor'; // eslint-disable-line stdlib/no-redeclare\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar base = parent.prototype.iset;\n\n\n// MAIN //\n\n/**\n* Sets an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @private\n* @param {integer} [idx] - linear view index\n* @param {*} v - value to set\n* @throws {Error} cannot write to a read-only array\n* @throws {TypeError} index must be an integer\n* @throws {RangeError} index exceeds array dimensions\n* @returns {ndarray} ndarray instance\n*/\nfunction iset( idx, v ) {\n\tif ( this._flags.READONLY ) {\n\t\tthrow new Error( 'invalid invocation. Cannot write to a read-only array.' );\n\t}\n\tif ( this._ndims > 0 ) {\n\t\tif ( !isInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index must be an integer. Value: `%s`.', idx ) );\n\t\t}\n\t\tidx = getIndex( idx, this._length-1, this._mode );\n\t\tbase.call( this, idx, v );\n\t} else {\n\t\tbase.call( this, idx );\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default iset;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies the contents of array-like value to a new array.\n*\n* @private\n* @param {ArrayLike} arr - input array\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0 ];\n*\n* var out = copy( arr, arr.length );\n* // returns [ 1.0, 2.0, 3.0 ]\n*\n* var bool = ( arr === out );\n* // returns false\n*/\nfunction copy( arr, len ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( arr[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { primitives as isNonNegativeIntegerArray } from '@stdlib/assert/is-nonnegative-integer-array';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { primitives as isIntegerArray } from '@stdlib/assert/is-integer-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport isOrder from './../../base/assert/is-order';\nimport isDataType from './../../base/assert/is-data-type';\nimport isBufferLengthCompatible from './../../base/assert/is-buffer-length-compatible';\nimport numel from './../../base/numel';\nimport parent from './../../base/ctor'; // eslint-disable-line stdlib/no-redeclare\nimport defaults from './../../defaults';\nimport inherit from '@stdlib/utils/inherit';\nimport format from '@stdlib/string/format';\nimport iget from './iget.js';\nimport iset from './iset.js';\nimport get from './get.js';\nimport set from './set.js';\nimport copy from './copy_array.js';\nimport validate from './validate.js';\n\n\n// VARIABLES //\n\n/*\n* See the following references:\n*\n* -  https://stackoverflow.com/questions/22747068/is-there-a-max-number-of-arguments-javascript-functions-can-accept\n* -  https://bugs.webkit.org/show_bug.cgi?id=80797\n* -  https://github.com/numpy/numpy/issues/5744\n*\n* Note that the maximum number of function arguments can vary from engine to engine. Here, we choose something of a lowest common denominator which may **not** be valid everywhere.\n*/\nvar MAX_DIMS = 32767|0;\n\nvar INDEX_MODE = defaults.get( 'index_mode' );\nvar READONLY = false;\n\n\n// MAIN //\n\n/**\n* ndarray constructor.\n*\n* @constructor\n* @param {string} dtype - data type\n* @param {Collection} buffer - data buffer\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - array strides\n* @param {NonNegativeInteger} offset - index offset\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @param {Options} [options] - function options\n* @param {string} [options.mode=\"throw\"] - specifies how to handle indices which exceed array dimensions\n* @param {StringArray} [options.submode=[\"throw\"]] - specifies how to handle subscripts which exceed array dimensions on a per dimension basis\n* @param {boolean} [options.readonly=false] - boolean indicating whether an array should be read-only\n* @throws {TypeError} `dtype` argument must be a supported ndarray data type\n* @throws {TypeError} `buffer` argument must be an array-like object, typed-array-like, or a Buffer\n* @throws {TypeError} `buffer` argument `get` and `set` properties must be functions\n* @throws {TypeError} `shape` argument must be an array-like object containing nonnegative integers\n* @throws {Error} `shape` argument length must equal the number of dimensions\n* @throws {TypeError} `strides` argument must be an array-like object containing integers\n* @throws {Error} `strides` argument length must equal the number of dimensions (except for zero-dimensional arrays; in which case, the `strides` argument length must be equal to `1`)\n* @throws {Error} for zero-dimensional ndarrays, the `strides` argument must contain a single element equal to `0`\n* @throws {TypeError} `offset` argument must be a nonnegative integer\n* @throws {TypeError} `order` argument must be a supported ndarray order\n* @throws {Error} `buffer` argument must be compatible with specified meta data\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} too many dimensions\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var out = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*/\nfunction ndarray( dtype, buffer, shape, strides, offset, order, options ) {\n\tvar ndims;\n\tvar opts;\n\tvar err;\n\tvar sh;\n\tvar st;\n\n\tif ( !(this instanceof ndarray) ) {\n\t\tif ( arguments.length < 7 ) {\n\t\t\treturn new ndarray( dtype, buffer, shape, strides, offset, order );\n\t\t}\n\t\treturn new ndarray( dtype, buffer, shape, strides, offset, order, options ); // eslint-disable-line max-len\n\t}\n\tif ( !isDataType( dtype ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a supported ndarray data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( !isCollection( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object, typed-array-like, or a Buffer. Value: `%s`.', buffer ) );\n\t} else if ( buffer.get && buffer.set && ( !isFunction( buffer.get ) || !isFunction( buffer.set ) ) ) { // eslint-disable-line max-len\n\t\tthrow new TypeError( format( 'invalid argument. Second argument `get` and `set` properties must be functions. Value: `%s`.', buffer ) );\n\t}\n\tif ( !isNonNegativeIntegerArray( shape ) ) {\n\t\tif ( !isCollection( shape) || shape.length > 0 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an array-like object containing nonnegative integers. Value: `%s`.', shape ) );\n\t\t}\n\t}\n\tndims = shape.length;\n\tif ( ndims > MAX_DIMS ) {\n\t\tthrow new RangeError( format( 'invalid argument. Number of dimensions must not exceed %u due to stack limits. Value: `%u`.', MAX_DIMS, ndims ) );\n\t}\n\tif ( !isIntegerArray( strides ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be an array-like object containing integers. Value: `%s`.', strides ) );\n\t}\n\tif ( ndims > 0 ) {\n\t\tif ( strides.length !== ndims ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Fourth argument length must match the number of dimensions. Expected number of dimensions: `%u`. Strides length: `%u`.', ndims, strides.length ) );\n\t\t}\n\t} else if ( strides.length !== 1 ) {\n\t\tthrow new RangeError( 'invalid argument. Fourth argument length must be equal to 1 when creating a zero-dimensional ndarray.' );\n\t} else if ( strides[ 0 ] !== 0 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Fourth argument must contain a single element equal to 0. Value: `%d`.', strides[ 0 ] ) );\n\t}\n\tif ( !isNonNegativeInteger( offset ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t}\n\tif ( !isOrder( order ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Sixth argument must be a supported order. Value: `%s`.', order ) );\n\t}\n\tif ( ndims > 0 && !isBufferLengthCompatible( buffer.length, shape, strides, offset ) && numel( shape ) > 0 ) { // eslint-disable-line max-len\n\t\tthrow new Error( 'invalid arguments. Input buffer is incompatible with the specified meta data. Ensure that the offset is valid with regard to the strides array and that the buffer has enough elements to satisfy the desired array shape.' );\n\t}\n\topts = {};\n\topts.mode = INDEX_MODE;\n\topts.readonly = READONLY;\n\tif ( arguments.length > 6 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tthis._mode = opts.mode;\n\tif ( opts.submode === void 0 ) {\n\t\topts.submode = [ this._mode ];\n\t}\n\tthis._submode = opts.submode;\n\n\t// Copy `shape` and `strides` to prevent external mutation:\n\tsh = copy( shape, ndims );\n\tst = copy( strides, ndims || 1 );\n\n\t// Call the parent constructor:\n\tparent.call( this, dtype, buffer, sh, st, offset, order );\n\tthis._flags.READONLY = opts.readonly;\n\n\treturn this;\n\n\t/* eslint-enable no-invalid-this */\n}\n\n// Inherit from the parent constructor:\ninherit( ndarray, parent );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof ndarray\n* @type {string}\n* @default 'ndarray'\n*\n* @example\n* var str = ndarray.name;\n* // returns 'ndarray'\n*/\nsetReadOnly( ndarray, 'name', 'ndarray' );\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name get\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'get', get );\n\n/**\n* Returns an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the input argument is ignored and, for clarity, should not be provided.\n*\n* @name iget\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @returns {*} array element\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*/\nsetReadOnly( ndarray.prototype, 'iget', iget );\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @name set\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.get( 1, 1 );\n* // returns 4\n*\n* x.set( 1, 1, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.get( 1, 1 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'set', set );\n\n/**\n* Sets an array element located at a specified linear index.\n*\n* ## Notes\n*\n* -   For zero-dimensional arrays, the first, and only, argument should be the value to set.\n*\n* @name iset\n* @memberof ndarray.prototype\n* @type {Function}\n* @param {integer} [idx] - linear index\n* @param {*} v - value to set\n* @returns {ndarray} ndarray instance\n*\n* @example\n* var buffer = [ 1, 2, 3, 4, 5, 6 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n*\n* var v = x.iget( 3 );\n* // returns 4\n*\n* x.iset( 3, 10 );\n*\n* var b = x.data;\n* // returns [ 1, 2, 3, 10, 5, 6 ]\n*\n* v = x.iget( 3 );\n* // returns 10\n*/\nsetReadOnly( ndarray.prototype, 'iset', iset );\n\n\n// EXPORTS //\n\nexport default ndarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport minmax from './../../../../base/minmax-view-buffer-index';\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a buffer length is compatible with provided ndarray meta data.\n*\n* @param {NonNegativeInteger} len - buffer length\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @returns {boolean} boolean indicating if a buffer length is compatible\n*\n* @example\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns true\n*\n* @example\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns false\n*/\nfunction isBufferLengthCompatible( len, shape, strides, offset ) {\n\t// Determine the minimum and maximum linear indices which are accessible by the array view:\n\tvar buf = minmax( shape, strides, offset );\n\n\t// If the indices are \"inbounds\", then the buffer length is compatible:\n\treturn ( buf[ 0 ] >= 0 && buf[ 1 ] < len );\n}\n\n\n// EXPORTS //\n\nexport default isBufferLengthCompatible;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isIndexMode from './../../base/assert/is-index-mode';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.mode] - specifies how to handle indices which exceed array dimensions\n* @param {StringArray} [options.submode] - specifies how to handle subscripts which exceed array dimensions\n* @param {boolean} [options.readonly] - boolean indicating whether an array should be read-only\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'mode': 'clamp',\n*     'submode': [ 'throw', 'wrap', 'clamp' ]\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tvar i;\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'mode' ) ) {\n\t\topts.mode = options.mode;\n\t\tif ( !isIndexMode( opts.mode ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a recognized mode. Option: `%s`.', 'mode', opts.mode ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'submode' ) ) {\n\t\topts.submode = options.submode;\n\t\tif ( !isArrayLikeObject( opts.submode ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array containing recognized modes. Option: `%s`.', 'submode', opts.submode ) );\n\t\t}\n\t\tif ( opts.submode.length === 0 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array containing recognized modes. Option: `%s`.', 'submode', opts.submode.join( ',' ) ) );\n\t\t}\n\t\tfor ( i = 0; i < opts.submode.length; i++ ) {\n\t\t\tif ( !isIndexMode( opts.submode[ i ] ) ) {\n\t\t\t\treturn new TypeError( format( 'invalid option. Each submode must be a recognized mode. Option: `%s`.', opts.submode[ i ] ) );\n\t\t\t}\n\t\t}\n\t\topts.submode = opts.submode.slice();\n\t}\n\tif ( hasOwnProp( options, 'readonly' ) ) {\n\t\topts.readonly = options.readonly;\n\t\tif ( !isBoolean( opts.readonly ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'readonly', opts.readonly ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\nimport createObject from './detect.js';\n\n\n// MAIN //\n\n/**\n* Implements prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* ## Notes\n*\n* -   This implementation is not designed to work with ES2015/ES6 classes. For ES2015/ES6 classes, use `class` with `extends`.\n* -   For reference, see [node#3455](https://github.com/nodejs/node/pull/3455), [node#4179](https://github.com/nodejs/node/issues/4179), [node#3452](https://github.com/nodejs/node/issues/3452), and [node commit](https://github.com/nodejs/node/commit/29da8cf8d7ab8f66b9091ab22664067d4468461e#diff-3deb3f32958bb937ae05c6f3e4abbdf5).\n*\n* @param {(Object|Function)} ctor - constructor which will inherit\n* @param {(Object|Function)} superCtor - super (parent) constructor\n* @throws {TypeError} first argument must be either an object or a function which can inherit\n* @throws {TypeError} second argument must be either an object or a function from which a constructor can inherit\n* @throws {TypeError} second argument must have an inheritable prototype\n* @returns {(Object|Function)} child constructor\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\nfunction inherit( ctor, superCtor ) {\n\tvar err = validate( ctor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\terr = validate( superCtor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( typeof superCtor.prototype === 'undefined' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must have a prototype from which another object can inherit. Value: `%s`.', superCtor.prototype ) );\n\t}\n\t// Create a prototype which inherits from the parent prototype:\n\tctor.prototype = createObject( superCtor.prototype );\n\n\t// Set the constructor to refer to the child constructor:\n\tdefineProperty( ctor.prototype, 'constructor', {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': ctor\n\t});\n\n\treturn ctor;\n}\n\n\n// EXPORTS //\n\nexport default inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport getIndex from './../../base/ind';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} [idx] - indices\n* @throws {TypeError} provided indices must be integer valued\n* @throws {RangeError} index exceeds array dimensions\n* @throws {RangeError} number of indices must equal the number of dimensions\n* @returns {*} array element\n*/\nfunction get() {\n\tvar idx;\n\tvar ind;\n\tvar M;\n\tvar i;\n\n\tif ( arguments.length !== this._ndims ) {\n\t\tthrow new RangeError( format( 'invalid arguments. Number of indices must match the number of dimensions. ndims: `%u`. nargs: `%u`.', this._ndims, arguments.length ) );\n\t}\n\tidx = this._offset;\n\tM = this._submode.length;\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\tif ( !isInteger( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Indices must be integer valued. Argument: `%u`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\tind = getIndex( arguments[ i ], this._shape[ i ]-1, this._submode[ i%M ] ); // eslint-disable-line max-len\n\t\tidx += this._strides[ i ] * ind;\n\t}\n\tif ( this._accessors ) {\n\t\treturn this._buffer.get( idx );\n\t}\n\treturn this._buffer[ idx ];\n}\n\n\n// EXPORTS //\n\nexport default get;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport getIndex from './../../base/ind';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   The number of indices should **equal** the number of dimensions. Accordingly, for zero-dimensional arrays, no indices should be provided.\n*\n* @private\n* @param {...integer} [idx] - indices\n* @param {*} v - value to set\n* @throws {Error} cannot write to a read-only array\n* @throws {TypeError} provided indices must be integer valued\n* @throws {RangeError} index exceeds array dimensions\n* @throws {RangeError} number of indices must equal the number of dimensions\n* @returns {ndarray} ndarray instance\n*/\nfunction set() {\n\tvar idx;\n\tvar ind;\n\tvar M;\n\tvar i;\n\n\tif ( this._flags.READONLY ) {\n\t\tthrow new Error( 'invalid invocation. Cannot write to a read-only array.' );\n\t}\n\tif ( arguments.length !== this._ndims+1 ) {\n\t\tthrow new RangeError( format( 'invalid arguments. Number of indices must match the number of dimensions. ndims: `%u`. nargs: `%u`.', this._ndims, arguments.length ) );\n\t}\n\tidx = this._offset;\n\tM = this._submode.length;\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\tif ( !isInteger( arguments[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Indices must be integer valued. Argument: `%i`. Value: `%s`.', i, arguments[ i ] ) );\n\t\t}\n\t\tind = getIndex( arguments[ i ], this._shape[ i ]-1, this._submode[ i%M ] ); // eslint-disable-line max-len\n\t\tidx += this._strides[ i ] * ind;\n\t}\n\tif ( this._accessors ) {\n\t\tthis._buffer.set( arguments[ i ], idx );\n\t} else {\n\t\tthis._buffer[ idx ] = arguments[ i ];\n\t}\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default set;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isPlainObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArrayLike from '@stdlib/assert/is-array-like';\nimport shape2strides from './../../base/shape2strides';\nimport strides2offset from './../../base/strides2offset';\nimport buffer from './../../base/buffer';\nimport numel from './../../base/numel';\nimport ndarray from './../../ctor';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DTYPE = defaults.get( 'dtypes.default' );\nvar ORDER = defaults.get( 'order' );\n\n\n// MAIN //\n\n/**\n* Creates a zero-filled ndarray having a specified shape and data type.\n*\n* @param {(NonNegativeIntegerArray|NonNegativeInteger)} shape - array shape\n* @param {Options} [options] - options\n* @param {string} [options.dtype='float64'] - data type\n* @param {string} [options.order='row-major'] - array order\n* @param {string} [options.mode=\"throw\"] - specifies how to handle indices which exceed array dimensions\n* @param {StringArray} [options.submode=[\"throw\"]] - specifies how to handle subscripts which exceed array dimensions on a per dimension basis\n* @param {boolean} [options.readonly=false] - boolean indicating whether an array should be read-only\n* @throws {TypeError} first argument must be either a nonnegative integer or an array of nonnegative integers\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} `dtype` option must be a recognized data type\n* @throws {TypeError} `order` option must be a recognized array order\n* @throws {TypeError} must provide valid options\n* @returns {ndarray} ndarray\n*\n* @example\n* var arr = zeros( [ 2, 2 ] );\n* // returns <ndarray>\n*\n* var sh = arr.shape;\n* // returns [ 2, 2 ]\n*\n* var dt = arr.dtype;\n* // returns 'float64'\n*/\nfunction zeros( shape ) {\n\tvar options;\n\tvar dtype;\n\tvar order;\n\tvar ndims;\n\tvar opts;\n\tvar buf;\n\tvar len;\n\tvar st;\n\tvar sh;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\toptions = arguments[ 1 ];\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'dtype' ) ) {\n\t\t\tdtype = options.dtype;\n\t\t} else {\n\t\t\tdtype = DTYPE;\n\t\t}\n\t\tif ( hasOwnProp( options, 'order' ) ) {\n\t\t\torder = options.order;\n\t\t} else {\n\t\t\torder = ORDER;\n\t\t}\n\t\tif ( hasOwnProp( options, 'mode' ) ) {\n\t\t\topts.mode = options.mode;\n\t\t}\n\t\tif ( hasOwnProp( options, 'submode' ) ) {\n\t\t\topts.submode = options.submode;\n\t\t}\n\t\tif ( hasOwnProp( options, 'readonly' ) ) {\n\t\t\topts.readonly = options.readonly;\n\t\t}\n\t} else {\n\t\tdtype = DTYPE;\n\t\torder = ORDER;\n\t}\n\tif ( isNumber( shape ) ) {\n\t\tsh = [ shape ];\n\t} else if ( isArrayLike( shape ) ) {\n\t\tsh = shape;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a nonnegative integer or an array of nonnegative integers. Value: `%s`.', shape ) );\n\t}\n\tndims = sh.length;\n\tif ( ndims > 0 ) {\n\t\tlen = numel( sh );\n\t\tif ( len !== len || len < 0 ) {\n\t\t\t// We should only get here if we've been provided an invalid shape (e.g., an array containing negative integers, etc)...\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a nonnegative integer or an array of nonnegative integers. Value: `%s`.', shape ) );\n\t\t}\n\t\tst = shape2strides( sh, order );\n\t} else {\n\t\t// For 0-dimensional arrays, the buffer should contain a single element...\n\t\tlen = 1;\n\t\tst = [ 0 ];\n\t}\n\tbuf = buffer( dtype, len );\n\tif ( buf === null ) {\n\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a recognized data type. Option: `%s`.', 'dtype', dtype ) );\n\t}\n\treturn new ndarray( dtype, buf, sh, st, strides2offset( sh, st ), order, opts ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isColumnMajor from './../../../base/assert/is-column-major-string';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts a linear index in an array view to a linear index in an underlying data buffer.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - location of the first indexed value **based** on the stride array\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @param {integer} idx - linear index in an array view\n* @param {string} mode - specifies how to handle a linear index which exceeds array dimensions\n* @throws {RangeError} linear index must not exceed array dimensions\n* @returns {NonNegativeInteger} linear index in an underlying data buffer\n*\n* @example\n* var shape = [ 3, 3 ];\n* var strides = [ -3, 1 ];\n* var offset = 6;\n* var order = 'row-major';\n* var mode = 'throw';\n*\n* var ind = vind2bind( shape, strides, offset, order, 1, mode );\n* // returns 7\n*/\nfunction vind2bind( shape, strides, offset, order, idx, mode ) {\n\tvar ndims;\n\tvar len;\n\tvar ind;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\tlen = 1;\n\tfor ( i = 0; i < ndims; i++ ) {\n\t\tlen *= shape[ i ];\n\t}\n\tif ( mode === 'clamp' ) {\n\t\tif ( idx < 0 ) {\n\t\t\tidx = 0;\n\t\t} else if ( idx >= len ) {\n\t\t\tidx = len - 1;\n\t\t}\n\t} else if ( mode === 'wrap' ) {\n\t\tif ( idx < 0 ) {\n\t\t\tidx += len; // slight optimization to avoid modulo arithmetic when |idx| <= len\n\t\t\tif ( idx < 0 ) {\n\t\t\t\tidx %= len;\n\t\t\t\tif ( idx !== 0 ) {\n\t\t\t\t\tidx += len;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( idx >= len ) {\n\t\t\tidx -= len; // slight optimization to avoid modulo arithmetic when len < idx <= 2*len\n\t\t\tif ( idx >= len ) {\n\t\t\t\tidx %= len;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ( mode === 'normalize' && idx < 0 ) {\n\t\t\tidx += len;\n\t\t}\n\t\tif ( idx < 0 || idx >= len ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Linear index must not exceed array dimensions. Number of array elements: `%u`. Value: `%d`.', len, idx ) );\n\t\t}\n\t}\n\t// The approach which follows is to resolve a view index to its subscripts and then plug the subscripts into the standard formula for computing the linear index in the underlying data buffer...\n\tind = offset;\n\tif ( isColumnMajor( order ) ) {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\ts = idx % shape[ i ];\n\t\t\tidx -= s;\n\t\t\tidx /= shape[ i ];\n\t\t\tind += s * strides[ i ];\n\t\t}\n\t\treturn ind;\n\t}\n\t// Case: row-major\n\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\ts = idx % shape[ i ];\n\t\tidx -= s;\n\t\tidx /= shape[ i ];\n\t\tind += s * strides[ i ];\n\t}\n\treturn ind;\n}\n\n\n// EXPORTS //\n\nexport default vind2bind;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an ndarray and assigns the result to an element in an output ndarray.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing output ndarray meta data\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* function scale( z ) {\n*     return new Complex64( realf(z)*10.0, imagf(z)*10.0 );\n* }\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': oy,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the unary function:\n* map( x, y, naryFunction( scale, 1 ) );\n*\n* var v = y.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction map( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar ordx;\n\tvar ordy;\n\tvar len;\n\tvar get;\n\tvar set;\n\tvar ref;\n\tvar shx;\n\tvar shy;\n\tvar sx;\n\tvar sy;\n\tvar ox;\n\tvar oy;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\tshy = y.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\tset( ybuf, oy, fcn.call( thisArg, get( xbuf, ox ), 0, ref ) );\n\t\treturn;\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tset( ybuf, iy, fcn.call( thisArg, get( xbuf, ix ), i, ref ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {Object} y - object containing output array data\n* @param {ArrayLikeObject} y.data - output array data\n* @param {Array<Function>} y.accessors - output array accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ -1, -2, -3, -4, -5, -6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* map( x, y, naryFunction( abs, 1 ) );\n*\n* var data = y.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction map( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar get;\n\tvar set;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Iterate over each element...\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tset( ybuf, i, fcn.call( thisArg, get( xbuf, i ), i, xbuf ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in a new array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction map( arr, fcn, thisArg ) {\n\tvar out;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tarr = ndarraylike2object( arr );\n\t\tout = ndzeros( arr.shape, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': arr.order\n\t\t});\n\t\tndarrayFcn( arr, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tout = zeros( arr.length );\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from '@stdlib/array/base/copy-indexed';\nimport ndarray from './../../../base/ctor';\nimport getShape from './../../../base/shape';\nimport getStrides from './../../../base/strides';\nimport getOffset from './../../../base/offset';\nimport getOrder from './../../../base/order';\nimport getDType from './../../../base/dtype';\nimport getData from './../../../base/data-buffer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Broadcasts an ndarray to a specified shape.\n*\n* ## Notes\n*\n* -   The returned array is a view on the input array data buffer. The view is typically **not** contiguous. As more than one element of a returned view may refer to the same memory location, writing to the view may affect multiple elements. If you need to write to the returned array, copy the array before performing operations which may mutate elements.\n*\n* @param {ndarray} arr - input array\n* @param {NonNegativeIntegerArray} shape - desired shape\n* @throws {Error} input array cannot have more dimensions than the desired shape\n* @throws {Error} input array dimension sizes must be `1` or equal to the corresponding dimension in the provided shape\n* @throws {Error} input array and desired shape must be broadcast compatible\n* @returns {ndarray} broadcasted array\n*\n* @example\n* import array from '@stdlib/ndarray/array';\n*\n* var x = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var shx = x.shape;\n* // returns [ 2, 2 ]\n*\n* var y = broadcastArray( x, [ 3, 2, 2 ] );\n* // returns <ndarray>\n*\n* var shy = y.shape;\n* // returns [ 3, 2, 2 ]\n*\n* var v = y.get( 0, 0, 0 );\n* // returns 1\n*\n* v = y.get( 0, 0, 1 );\n* // returns 2\n*\n* v = y.get( 1, 0, 0 );\n* // returns 1\n*\n* v = y.get( 1, 1, 0 );\n* // returns 3\n*\n* v = y.get( 2, 0, 0 );\n* // returns 1\n*\n* v = y.get( 2, 1, 1 );\n* // returns 4\n*\n* @example\n* import array from '@stdlib/ndarray/array';\n*\n* var x = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var y = broadcastArray( x, [ 3, 2 ] );\n* // throws <Error>\n*/\nfunction broadcastArray( arr, shape ) {\n\tvar strides;\n\tvar dim;\n\tvar sh;\n\tvar st;\n\tvar N;\n\tvar M;\n\tvar d;\n\tvar i;\n\tvar j;\n\n\tN = shape.length;\n\tsh = getShape( arr, false );\n\tM = sh.length;\n\tif ( N < M ) {\n\t\tthrow new Error( 'invalid argument. Cannot broadcast an array to a shape having fewer dimensions. Arrays can only be broadcasted to shapes having the same or more dimensions.' );\n\t}\n\t// Initialize a strides array...\n\tstrides = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tstrides.push( 0 );\n\t}\n\t// Determine the output array strides...\n\tst = getStrides( arr, false );\n\tfor ( i = N-1; i >= 0; i-- ) {\n\t\tj = M - N + i;\n\t\tif ( j < 0 ) {\n\t\t\t// Prepended singleton dimension; stride is zero...\n\t\t\tcontinue;\n\t\t}\n\t\td = sh[ j ];\n\t\tdim = shape[ i ];\n\t\tif ( dim !== 0 && dim < d ) {\n\t\t\tthrow new Error( format( 'invalid argument. Input array cannot be broadcast to the specified shape, as the specified shape has a dimension whose size is less than the size of the corresponding dimension in the input array. Array shape: (%s). Desired shape: (%s). Dimension: %u.', copy( sh ).join( ', ' ), copy( shape ).join( ', ' ), i ) );\n\t\t}\n\t\tif ( d === dim ) {\n\t\t\tstrides[ i ] = st[ j ];\n\t\t} else if ( d === 1 ) {\n\t\t\t// In order to broadcast dimensions, we set the stride for that dimension to zero...\n\t\t\tstrides[ i ] = 0;\n\t\t} else {\n\t\t\t// At this point, we know that `dim > d` and that `d` does not equal `1` (e.g., `dim=3` and `d=2`); in which case, the shapes are considered incompatible (even for desired shapes which are multiples of array dimensions, as might be desired when \"tiling\" an array; e.g., `dim=4` and `d=2`)...\n\t\t\tthrow new Error( format( 'invalid argument. Input array and the specified shape are broadcast incompatible. Array shape: (%s). Desired shape: (%s). Dimension: %u.', copy( sh ).join( ', ' ), copy( shape ).join( ', ' ), i ) );\n\t\t}\n\t}\n\treturn ndarray( getDType( arr ), getData( arr ), copy( shape ), strides, getOffset( arr ), getOrder( arr ) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default broadcastArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcast from './../../../base/broadcast-array';\nimport getShape from './../../../base/shape';\n\n\n// MAIN //\n\n/**\n* Broadcasts an ndarray to a specified shape if and only if the specified shape differs from the provided ndarray's shape.\n*\n* ## Notes\n*\n* -   If a provided ndarray has the same shape as the specified shape, the function returns the provided ndarray.\n* -   If a provided ndarray has a different (broadcast compatible) shape than the specified shape, the function returns a new (base) ndarray view of the provided ndarray's data. The view is typically **not** contiguous. As more than one element of a returned view may refer to the same memory location, writing to the view may affect multiple elements. If you need to write to the returned array, copy the array before performing operations which may mutate elements.\n*\n* @param {ndarray} arr - input array\n* @param {NonNegativeIntegerArray} shape - desired shape\n* @throws {Error} input array cannot have more dimensions than the desired shape\n* @throws {Error} input array dimension sizes must be `1` or equal to the corresponding dimension in the provided shape\n* @throws {Error} input array and desired shape must be broadcast compatible\n* @returns {ndarray} broadcasted array\n*\n* @example\n* import array from '@stdlib/ndarray/array';\n*\n* var x = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var shx = x.shape;\n* // returns [ 2, 2 ]\n*\n* var y = maybeBroadcastArray( x, [ 3, 2, 2 ] );\n* // returns <ndarray>\n*\n* var shy = y.shape;\n* // returns [ 3, 2, 2 ]\n*\n* var v = y.get( 0, 0, 0 );\n* // returns 1\n*\n* v = y.get( 0, 0, 1 );\n* // returns 2\n*\n* v = y.get( 1, 0, 0 );\n* // returns 1\n*\n* v = y.get( 1, 1, 0 );\n* // returns 3\n*\n* v = y.get( 2, 0, 0 );\n* // returns 1\n*\n* v = y.get( 2, 1, 1 );\n* // returns 4\n*\n* @example\n* import array from '@stdlib/ndarray/array';\n*\n* var x = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var y = maybeBroadcastArray( x, [ 3, 2 ] );\n* // throws <Error>\n*/\nfunction maybeBroadcastArray( arr, shape ) {\n\tvar sh;\n\tvar N;\n\tvar i;\n\n\tN = shape.length;\n\tsh = getShape( arr, false );\n\n\t// Check whether we need to broadcast the input array...\n\tif ( sh.length === N ) {\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t// Check whether dimensions match...\n\t\t\tif ( sh[ i ] !== shape[ i ] ) {\n\t\t\t\t// We found a mismatched dimension; delegate to `broadcast` to ensure that the input array is broadcast compatible with the desired array shape...\n\t\t\t\treturn broadcast( arr, shape );\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n\t// If we are provided an array having a different rank (i.e., number of dimensions) than the desired shape, assume we need to broadcast, delegating to `broadcast` to ensure that the input array is broadcast compatible with the desired array shape...\n\treturn broadcast( arr, shape );\n}\n\n\n// EXPORTS //\n\nexport default maybeBroadcastArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\n\n\n// MAIN //\n\nvar bool = isFunction( Object.assign ); // eslint-disable-line node/no-unsupported-features/es-builtins\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies own enumerable properties from source objects to a target object.\n*\n* ## Notes\n*\n* -   If a property key is present in multiple sources, the property from the last source that defines the key prevails.\n* -   The target object is mutated.\n*\n* @name assign\n* @type {Function}\n* @param {Object} target - target object\n* @param {...Object} source - source object(s)\n* @throws {TypeError} first argument must not be null or undefined\n* @returns {Object} target object\n*\n* @example\n* var obj1 = {\n*     'a': 'beep'\n* };\n* var obj2 = {\n*     'b': 'boop'\n* };\n*\n* var out = assign( obj1, obj2 );\n* // returns { 'a': 'beep', 'b': 'boop' }\n*/\nvar assign = Object.assign; // eslint-disable-line node/no-unsupported-features/es-builtins\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertySymbols !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\n\n\n// VARIABLES //\n\nvar propertySymbols = Object.getOwnPropertySymbols;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own symbol properties\n*\n* @example\n* var symbols = getOwnPropertySymbols( {} );\n*/\nfunction getOwnPropertySymbols( value ) {\n\treturn propertySymbols( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own symbol properties.\n*\n* @module @stdlib/utils/property-symbols\n*\n* @example\n* import getOwnPropertySymbols from '@stdlib/utils/property-symbols';\n*\n* var symbols = getOwnPropertySymbols( {} );\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy enumerable own properties from one or more source objects to a target object.\n*\n* @module @stdlib/object/assign\n*\n* @example\n* import assign from '@stdlib/object/assign';\n*\n* var out = assign( {}, { 'foo': 'bar' }, { 'baz': 'beep' } );\n* // returns { 'foo': 'bar', 'baz': 'beep' }\n*/\n\n// MODULES //\n\nimport hasObjectAssign from './has_object_assign.js';\nimport main from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar assign;\nif ( hasObjectAssign ) {\n\tassign = main;\n} else {\n\tassign = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {EmptyArray} a list of own symbol properties\n*\n* @example\n* var symbols = getOwnPropertySymbols( {} );\n* // returns []\n*/\nfunction getOwnPropertySymbols() {\n\treturn [];\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './../../keys';\nimport propertySymbols from './../../property-symbols';\nimport isEnumerable from '@stdlib/assert/is-enumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property enumerable names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = enumerableProperties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction enumerableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tout = keys( value );\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isEnumerable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default enumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enumerableProperties from '@stdlib/utils/enumerable-properties';\nimport Object from './../../ctor';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Copies own enumerable properties from source objects to a target object.\n*\n* ## Notes\n*\n* -   If a property key is present in multiple sources, the property from the last source that defines the key prevails.\n* -   The target object is mutated.\n*\n* @param {Object} target - target object\n* @param {...Object} source - source object(s)\n* @throws {TypeError} first argument must not be null or undefined\n* @returns {Object} target object\n*\n* @example\n* var obj1 = {\n*     'a': 'beep'\n* };\n* var obj2 = {\n*     'b': 'boop'\n* };\n*\n* var out = assign( obj1, obj2 );\n* // returns { 'a': 'beep', 'b': 'boop' }\n*/\nfunction assign( target ) {\n\tvar source;\n\tvar keys;\n\tvar key;\n\tvar len;\n\tvar to;\n\tvar i;\n\tvar j;\n\tif ( target === void 0 || target === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a non-null object. Value: `%s`.', target ) );\n\t}\n\tto = Object( target );\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\tsource = arguments[ i ];\n\t\tif ( source === void 0 || source === null ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tkeys = enumerableProperties( Object( source ) );\n\t\tlen = keys.length;\n\t\tfor ( j = 0; j < len; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tto[ key ] = source[ key ];\n\t\t}\n\t}\n\treturn to;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport flags from './../../../base/flags';\n\n\n// MAIN //\n\n/**\n* Returns a specified flag for a provided ndarray.\n*\n* @param {ndarrayLike} x - input ndarray\n* @param {(string|symbol)} name - flag name\n* @returns {*} flag value\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var out = flag( zeros( [ 3, 3, 3 ] ), 'READONLY' );\n* // returns <boolean>\n*/\nfunction flag( x, name ) {\n\treturn flags( x, false )[ name ];\n}\n\n\n// EXPORTS //\n\nexport default flag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport assign from '@stdlib/object/assign';\n\n\n// MAIN //\n\n/**\n* Returns the flags of a provided ndarray.\n*\n* @param {ndarrayLike} x - input ndarray\n* @param {boolean} copy - boolean indicating whether to explicitly copy the value assigned to the input ndarray's `flags` property\n* @returns {Object} flags\n*\n* @example\n* import zeros from '@stdlib/ndarray/zeros';\n*\n* var out = flags( zeros( [ 3, 3, 3 ] ), false );\n* // returns {...}\n*/\nfunction flags( x, copy ) {\n\tvar f = x.flags;\n\tif ( typeof f !== 'object' || f === null ) {\n\t\treturn {};\n\t}\n\tif ( copy ) {\n\t\treturn assign( {}, f );\n\t}\n\treturn f;\n}\n\n\n// EXPORTS //\n\nexport default flags;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport flag from './../../../../base/flag';\n\n\n// MAIN //\n\n/**\n* Tests whether an ndarray is read-only.\n*\n* @param {ndarray} arr - input ndarray\n* @returns {boolean} boolean indicating whether an ndarray is read-only\n*\n* @example\n* import array from '@stdlib/ndarray/array';\n*\n* var x = array( [ 1, 2, 3, 4 ], {\n*     'readonly': true\n* });\n* var bool = isReadOnly( x );\n* // returns true\n*\n* x = array( [ 1, 2, 3, 4 ] );\n* bool = isReadOnly( x );\n* // returns false\n*/\nfunction isReadOnly( arr ) {\n\treturn ( flag( arr, 'READONLY' ) === true );\n}\n\n\n// EXPORTS //\n\nexport default isReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function after transforming arguments according to a callback function.\n*\n* ## Notes\n*\n-   The callback function is provided the following arguments:\n*\n*     -   **value**: argument value.\n*     -   **index**: argument index.\n*\n* @param {Function} fcn - input function\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} wrapped function\n*\n* @example\n* function foo( a, b, c ) {\n*     return [ a, b, c ];\n* }\n*\n* function clbk( v ) {\n*     return v * 2;\n* }\n*\n* var bar = mapArguments( foo, clbk );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 2, 4, 6 ]\n*/\nfunction mapArguments( fcn, clbk, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\treturn wrap;\n\n\t/**\n\t* Invokes a function after transforming arguments according to a callback function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction wrap() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( clbk( arguments[ i ], i ) ); // eslint-disable-line node/callback-return\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mapArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function `n` times and returns an array of accumulated function return values.\n*\n* @param {Function} fcn - function to invoke\n* @param {NonNegativeInteger} n - number of function invocations\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Array} accumulated results\n*\n* @example\n* function fcn( i ) {\n*     return i;\n* }\n*\n* var arr = mapFun( fcn, 5 );\n* // returns [ 0, 1, 2, 3, 4 ]\n*/\nfunction mapFun( fcn, n, thisArg ) {\n\tvar out;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t}\n\t// Note: we explicitly do not preallocate in order to ensure \"fast\" elements for large output arrays.\n\tout = [];\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout.push( fcn.call( thisArg, i ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mapFun;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Maps keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   We need to cache an object value to prevent the edge case where, during the invocation of the transform function, the value corresponding to a particular key is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n* @param {Object} obj - source object\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function transform( key, value ) {\n*     return key + value;\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = mapKeys( obj1, transform );\n* // returns { 'a1': 1, 'b2': 2 }\n*/\nfunction mapKeys( obj, transform ) {\n\tvar out;\n\tvar key;\n\tvar v;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( transform ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', transform ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tv = obj[ key ];\n\t\t\tkey = transform( key, v, obj );\n\t\t\tout[ key ] = v;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mapKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to each element in an array and assign the result to an element in an output array.\n*\n* @module @stdlib/utils/map\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import map from '@stdlib/utils/map';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import map from '@stdlib/utils/map';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = map( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import map from '@stdlib/utils/map';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import map from '@stdlib/utils/map';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* map.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} input and output arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* map( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction map( arr, out, fcn, thisArg ) {\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an ndarray, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\ttmp = ndarraylike2object( broadcast( arr, sh ) );\n\t\ttmp.ref = arr;\n\t\tarr = tmp;\n\n\t\tndarrayFcn( arr, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tif ( !isArrayLikeObject( out ) || isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an array-like object, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( arr.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default map;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cceil from '@stdlib/math/base/special/cceil';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = mapReduce( x, new Complex64( 0.0, 0.0 ), naryFunction( cceil, 1 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 20.0\n*\n* var im = imagf( v );\n* // returns 24.0\n*/\nfunction mapReduce( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn reducer.call( thisArg, initial, mapper( get( xbuf, ox ), 0, ref ), 0, ref ); // eslint-disable-line max-len\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, ix ), i, ref ), i, ref ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The mapping function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* -   The reducing function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: result of applying the mapping function against the current array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = mapReduce( arr, 0, square, sum );\n* // returns 30\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapReduce( arr, 0, naryFunction( abs, 1 ), naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction mapReduce( arr, initial, mapper, reducer, thisArg ) {\n\tif ( !isFunction( mapper ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', mapper ) );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapReduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum of squared values:\n* var out = mapReduce( x, 0, square, sum );\n* // returns 30\n*/\nfunction mapReduce( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, i ), i, xbuf ), i, xbuf ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cceil from '@stdlib/math/base/special/cceil';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = mapReduceRight( x, new Complex64( 0.0, 0.0 ), naryFunction( cceil, 1 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 20.0\n*\n* var im = imagf( v );\n* // returns 24.0\n*/\nfunction mapReduceRight( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn reducer.call( thisArg, initial, mapper( get( xbuf, ox ), 0, ref ), 0, ref ); // eslint-disable-line max-len\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, ix ), i, ref ), i, ref ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array while iterating from right to left and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The mapping function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* -   The reducing function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: result of applying the mapping function against the current array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = mapReduceRight( arr, 0, square, sum );\n* // returns 30\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapReduceRight( arr, 0, naryFunction( abs, 1 ), naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction mapReduceRight( arr, initial, mapper, reducer, thisArg ) {\n\tif ( !isFunction( mapper ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', mapper ) );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, mapper, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapReduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Performs a map-reduce operation against each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} mapper - mapping function\n* @param {Function} reducer - reducing function\n* @param {*} thisArg - reducing function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function square( value ) {\n*     return value * value;\n* }\n*\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum of squared values:\n* var out = mapReduceRight( x, 0, square, sum );\n* // returns 30\n*/\nfunction mapReduceRight( x, initial, mapper, reducer, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tacc = reducer.call( thisArg, acc, mapper( get( xbuf, i ), i, xbuf ), i, xbuf ); // eslint-disable-line max-len\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default mapReduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an ndarray and assigns the result to an element in an output ndarray, iterating from right to left.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing output ndarray meta data\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* function scale( z ) {\n*     return new Complex64( realf(z)*10.0, imagf(z)*10.0 );\n* }\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': oy,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the unary function:\n* mapRight( x, y, naryFunction( scale, 1 ) );\n*\n* var v = y.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction mapRight( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar ordx;\n\tvar ordy;\n\tvar len;\n\tvar get;\n\tvar set;\n\tvar ref;\n\tvar shx;\n\tvar shy;\n\tvar sx;\n\tvar sy;\n\tvar ox;\n\tvar oy;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\tshy = y.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\tset( ybuf, oy, fcn.call( thisArg, get( xbuf, ox ), 0, ref ) );\n\t\treturn;\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tset( ybuf, iy, fcn.call( thisArg, get( xbuf, ix ), i, ref ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array, iterating from right to left.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {Object} y - object containing output array data\n* @param {ArrayLikeObject} y.data - output array data\n* @param {Array<Function>} y.accessors - output array accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ -1, -2, -3, -4, -5, -6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* mapRight( x, y, naryFunction( abs, 1 ) );\n*\n* var data = y.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction mapRight( x, y, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar get;\n\tvar set;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\t// Iterate over each element...\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tset( ybuf, i, fcn.call( thisArg, get( xbuf, i ), i, xbuf ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in a new array, iterating from right to left.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction mapRight( arr, fcn, thisArg ) {\n\tvar out;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tarr = ndarraylike2object( arr );\n\t\tout = ndzeros( arr.shape, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': arr.order\n\t\t});\n\t\tndarrayFcn( arr, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tout = zeros( arr.length );\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Maps values from one object to a new object having the same keys.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   The function only operates on own properties, not inherited properties.\n*\n* @param {Object} obj - source object\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function transform( value, key ) {\n*     return key + value;\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = mapValues( obj1, transform );\n* // returns { 'a': 'a1', 'b': 'b2' }\n*/\nfunction mapValues( obj, transform ) {\n\tvar out;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( transform ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', transform ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tout[ key ] = transform( obj[ key ], key, obj );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mapValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Broadcasts array shapes to a single shape.\n*\n* ## Notes\n*\n* -   Two respective dimensions in two shape arrays are compatible if\n*\n*     1.  the dimensions are equal.\n*     2.  one dimension is `1`.\n*\n* -   The function returns `null` if provided incompatible shapes (i.e., shapes which cannot be broadcast with one another).\n*\n* @param {Array<NonNegativeIntegerArray>} shapes - array of shape arrays\n* @returns {(NonNegativeIntegerArray|null)} broadcast shape (or `null`)\n*\n* @example\n* var shapes = [\n*     [ 8, 1, 6, 1 ],\n*     [ 7, 1, 5 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 8, 7, 6, 5 ]\n*\n* @example\n* var shapes = [\n*     [ 5, 4 ],\n*     [ 1 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 5, 4 ]\n*\n* @example\n* var shapes = [\n*     [ 5, 4 ],\n*     [ 4 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 5, 4 ]\n*\n* @example\n* var shapes = [\n*     [ 15, 3, 5 ],\n*     [ 15, 1, 5 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 15, 3, 5 ]\n*\n* @example\n* var shapes = [\n*     [ 15, 3, 5 ],\n*     [ 3, 5 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 15, 3, 5 ]\n*\n* @example\n* var shapes = [\n*     [ 15, 3, 5 ],\n*     [ 3, 1 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 15, 3, 5 ]\n*\n* @example\n* var shapes = [\n*     [ 8, 1, 1, 6, 1 ],\n*     [ 1, 7, 1, 5 ],\n*     [ 8, 4, 1, 6, 5 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 8, 4, 7, 6, 5 ]\n*\n* @example\n* var shapes = [\n*     [ 8, 1, 1, 6, 1 ],\n*     [ 0 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 8, 1, 1, 6, 0 ]\n*\n* @example\n* var shapes = [\n*     [ 8, 1, 1, 6, 1 ],\n*     [ 8, 0, 1, 6, 1 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 8, 0, 1, 6, 1 ]\n*\n* @example\n* var shapes = [\n*     [ 8, 8, 1, 6, 1 ],\n*     [ 8, 0, 1, 6, 1 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns null\n*\n* @example\n* var shapes = [\n*     [ 8, 0, 1, 6, 1 ],\n*     [ 8, 8, 1, 6, 1 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns null\n*\n* @example\n* var shapes = [\n*     []\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns []\n*\n* @example\n* var shapes = [\n*     [],\n*     []\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns []\n*\n* @example\n* var shapes = [];\n*\n* var out = broadcastShapes( shapes );\n* // returns []\n*\n* @example\n* var shapes = [\n*     [ 3, 2, 1 ],\n*     []\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 3, 2, 1 ]\n*\n* @example\n* var shapes = [\n*     [],\n*     [ 3, 2, 1 ]\n* ];\n*\n* var out = broadcastShapes( shapes );\n* // returns [ 3, 2, 1 ]\n*/\nfunction broadcastShapes( shapes ) {\n\tvar ndims;\n\tvar out;\n\tvar dim;\n\tvar sh;\n\tvar n1;\n\tvar n2;\n\tvar d;\n\tvar M;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tM = shapes.length;\n\tout = [];\n\tif ( M === 0 ) {\n\t\treturn out;\n\t}\n\tsh = shapes[ 0 ];\n\tN = sh.length;\n\n\t// If provided a single input shape array, then the broadcast shape is input shape...\n\tif ( M === 1 ) {\n\t\t// Need to manually copy to output shape, as shapes could be array-like objects...\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tout.push( sh[ i ] );\n\t\t}\n\t\treturn out;\n\t}\n\t// Determine the maximum dimensionality...\n\tndims = [ N ];\n\tfor ( i = 1; i < M; i++ ) {\n\t\tndims.push( shapes[ i ].length );\n\t\tif ( ndims[ i ] > N ) {\n\t\t\tN = ndims[ i ];\n\t\t}\n\t}\n\t// Initialize the output array...\n\tfor ( i = 0; i < N; i++ ) {\n\t\tout.push( 0 );\n\t}\n\t// Compute the broadcast shape...\n\ti = N - 1;\n\twhile ( i >= 0 ) {\n\t\tn1 = ndims[ 0 ] - N + i;\n\t\tif ( n1 >= 0 ) {\n\t\t\tdim = sh[ n1 ];\n\t\t} else {\n\t\t\tdim = 1;\n\t\t}\n\t\tfor ( j = 1; j < M; j++ ) {\n\t\t\tn2 = ndims[ j ] - N + i;\n\t\t\tif ( n2 >= 0 ) {\n\t\t\t\td = shapes[ j ][ n2 ];\n\t\t\t} else {\n\t\t\t\td = 1;\n\t\t\t}\n\t\t\tif ( dim === 1 ) {\n\t\t\t\tdim = d;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( d === 1 || dim === d ) {\n\t\t\t\t// When either `d` is `1` or `d` equals the current output shape dimension, the current output shape dimension remains the same...\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// The current shape cannot be broadcast against one of the other shapes...\n\t\t\treturn null;\n\t\t}\n\t\tout[ i ] = dim;\n\t\ti -= 1;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default broadcastShapes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to each element in an array and assign the result to an element in an output array, iterating from right to left.\n*\n* @module @stdlib/utils/map-right\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n*\n* var out = mapRight( arr, naryFunction( abs, 1 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* mapRight.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n* import mapRight from '@stdlib/utils/map-right';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* mapRight.assign( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to each element in an array and assigns the result to an element in an output array, iterating from right to left.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} input and output arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must have be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [ -1, -2, -3, -4, -5, -6 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* mapRight( arr, out, naryFunction( abs, 1 ) );\n*\n* console.log( out );\n* // => [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var arr = array( [ [ -1, -2, -3 ], [ -4, -5, -6 ] ], opts );\n* var out = array( opts );\n*\n* mapRight( arr, out, naryFunction( abs, 1 ) );\n*\n* var data = out.data;\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction mapRight( arr, out, fcn, thisArg ) {\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an ndarray, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\ttmp = ndarraylike2object( broadcast( arr, sh ) );\n\t\ttmp.ref = arr;\n\t\tarr = tmp;\n\n\t\tndarrayFcn( arr, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\tif ( !isArrayLikeObject( out ) || isndarrayLike( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input array is an array-like object, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( arr.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( arr ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default mapRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing meta data for the first input ndarray\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing meta data for the second input ndarray\n* @param {string} y.ref - reference to original input ndarray-like object\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Object} z - object containing output ndarray meta data\n* @param {string} z.dtype - data type\n* @param {Collection} z.data - data buffer\n* @param {NonNegativeInteger} z.length - number of elements\n* @param {NonNegativeIntegerArray} z.shape - dimensions\n* @param {IntegerArray} z.strides - stride lengths\n* @param {NonNegativeInteger} z.offset - index offset\n* @param {string} z.order - specifies whether `z` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} z.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/complex/float32/base/add';\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var zbuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n* var sz = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n* var oz = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* y.ref = y;\n*\n* var z = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': zbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sz,\n*     'offset': oz,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the function:\n* map2( x, y, z, naryFunction( add, 2 ) );\n*\n* var v = z.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 2.0\n*\n* var im = imagf( v );\n* // returns 3.0\n*/\nfunction map2( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar ordx;\n\tvar ordy;\n\tvar ordz;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar xref;\n\tvar yref;\n\tvar shx;\n\tvar shy;\n\tvar shz;\n\tvar len;\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ox;\n\tvar oy;\n\tvar oz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the array shapes:\n\tshx = x.shape;\n\tshy = y.shape;\n\tshz = z.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\tsz = z.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\toz = z.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\tordz = z.order;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Cache references to the original input arrays:\n\txref = x.ref;\n\tyref = y.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 && shy.length === 0 ) {\n\t\tzset( zbuf, oz, fcn.call( thisArg, xget( xbuf, ox ), yget( ybuf, oy ), 0, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t\treturn;\n\t}\n\t// Iterate over the arrays based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tiz = vind2bind( shz, sz, oz, ordz, i, MODE );\n\t\tzset( zbuf, iz, fcn.call( thisArg, xget( xbuf, ix ), yget( ybuf, iy ), i, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing data for the first input array\n* @param {ArrayLikeObject} x.data - array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {Object} y - object containing data for the second input array\n* @param {ArrayLikeObject} y.data - array data\n* @param {Array<Function>} y.accessors - array element accessors\n* @param {Object} z - object containing output array data\n* @param {ArrayLikeObject} z.data - array data\n* @param {Array<Function>} z.accessors - array element accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ 1, 2, 3, 4, 5, 6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 1, 1, 1, 1, 1, 1 ],\n*     'accessors': [ getter, setter ]\n* };\n* var z = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* map2( x, y, z, naryFunction( add, 2 ) );\n*\n* var data = z.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Iterate over the elements...\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tzset( zbuf, i, fcn.call( thisArg, xget( xbuf, i ), yget( ybuf, i ), i, [ xbuf, ybuf ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport broadcastShapes from '@stdlib/ndarray/base/broadcast-shapes';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to a new array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} input arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input arrays must have the same length\n* @throws {Error} input ndarrays must be broadcast compatible\n* @throws {TypeError} third argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2( x, y, naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2( x, y, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar out;\n\tvar tmp;\n\tvar sh;\n\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\t// Broadcast `x` and `y` to a common shape:\n\t\tsh = broadcastShapes( [ x.shape, y.shape ] );\n\t\tif ( sh === null ) {\n\t\t\tthrow new Error( 'invalid arguments. Input ndarrays must be broadcast compatible.' );\n\t\t}\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\t// Create an output array:\n\t\tout = ndzeros( sh, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': x.order\n\t\t});\n\n\t\t// Apply the function to the input arrays:\n\t\tndarrayFcn( x, y, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( y.length !== x.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input arrays must have the same length.' );\n\t\t}\n\t\tout = zeros( x.length );\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in two input arrays and assign the results to an output array.\n*\n* @module @stdlib/utils/map2\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2 from '@stdlib/utils/map2';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2 from '@stdlib/utils/map2';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2( x, y. naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2 from '@stdlib/utils/map2';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2 from '@stdlib/utils/map2';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays and assigns the results to an output array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be an array-like object or an ndarray\n* @throws {TypeError} fourth argument must be a function\n* @throws {TypeError} input and output arrays must be either all array-like objects or all ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2( x, y, out, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar isznd;\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tisznd = isndarrayLike( out );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( !isznd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are ndarrays, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\tndarrayFcn( x, y, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( isznd || !isArrayLikeObject( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are array-like objects, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( x.length !== y.length || y.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing meta data for the first input ndarray\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {Object} y - object containing meta data for the second input ndarray\n* @param {string} y.ref - reference to original input ndarray-like object\n* @param {string} y.dtype - data type\n* @param {Collection} y.data - data buffer\n* @param {NonNegativeInteger} y.length - number of elements\n* @param {NonNegativeIntegerArray} y.shape - dimensions\n* @param {IntegerArray} y.strides - stride lengths\n* @param {NonNegativeInteger} y.offset - index offset\n* @param {string} y.order - specifies whether `y` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} y.accessors - accessors for accessing data buffer elements\n* @param {Object} z - object containing output ndarray meta data\n* @param {string} z.dtype - data type\n* @param {Collection} z.data - data buffer\n* @param {NonNegativeInteger} z.length - number of elements\n* @param {NonNegativeIntegerArray} z.shape - dimensions\n* @param {IntegerArray} z.strides - stride lengths\n* @param {NonNegativeInteger} z.offset - index offset\n* @param {string} z.order - specifies whether `z` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} z.accessors - accessors for accessing data buffer elements\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/complex/float32/base/add';\n*\n* // Create data buffers:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var ybuf = new Complex64Array( [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var zbuf = new Complex64Array( 4 );\n*\n* // Define the shape of the input and output arrays:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n* var sy = [ 2, 1 ];\n* var sz = [ 2, 1 ];\n*\n* // Define the index offsets:\n* var ox = 0;\n* var oy = 0;\n* var oz = 0;\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf.set( value, idx );\n* }\n*\n* // Create the input and output ndarray-like objects:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* x.ref = x;\n*\n* var y = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': ybuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sy,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n* y.ref = y;\n*\n* var z = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': zbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sz,\n*     'offset': oz,\n*     'order': 'row-major',\n*     'accessors': [ getter, setter ]\n* };\n*\n* // Apply the function:\n* map2Right( x, y, z, naryFunction( add, 2 ) );\n*\n* var v = z.data.get( 0 );\n*\n* var re = realf( v );\n* // returns 2.0\n*\n* var im = imagf( v );\n* // returns 3.0\n*/\nfunction map2Right( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar ordx;\n\tvar ordy;\n\tvar ordz;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar xref;\n\tvar yref;\n\tvar shx;\n\tvar shy;\n\tvar shz;\n\tvar len;\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ox;\n\tvar oy;\n\tvar oz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the array shapes:\n\tshx = x.shape;\n\tshy = y.shape;\n\tshz = z.shape;\n\n\t// Cache references to the input and output ndarray data buffers:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache references to the respective stride arrays:\n\tsx = x.strides;\n\tsy = y.strides;\n\tsz = z.strides;\n\n\t// Cache the indices of the first indexed elements in the respective ndarrays:\n\tox = x.offset;\n\toy = y.offset;\n\toz = z.offset;\n\n\t// Cache the respective array orders:\n\tordx = x.order;\n\tordy = y.order;\n\tordz = z.order;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Cache references to the original input arrays:\n\txref = x.ref;\n\tyref = y.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 && shy.length === 0 ) {\n\t\tzset( zbuf, oz, fcn.call( thisArg, xget( xbuf, ox ), yget( ybuf, oy ), 0, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t\treturn;\n\t}\n\t// Iterate over the arrays based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tiy = vind2bind( shy, sy, oy, ordy, i, MODE );\n\t\tiz = vind2bind( shz, sz, oz, ordz, i, MODE );\n\t\tzset( zbuf, iz, fcn.call( thisArg, xget( xbuf, ix ), yget( ybuf, iy ), i, [ xref, yref ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to an output array.\n*\n* @private\n* @param {Object} x - object containing data for the first input array\n* @param {ArrayLikeObject} x.data - array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {Object} y - object containing data for the second input array\n* @param {ArrayLikeObject} y.data - array data\n* @param {Array<Function>} y.accessors - array element accessors\n* @param {Object} z - object containing output array data\n* @param {ArrayLikeObject} z.data - array data\n* @param {Array<Function>} z.accessors - array element accessors\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {void}\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* // Define getters and setters:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function setter( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* // Create the input and output array objects:\n* var x = {\n*     'data': [ 1, 2, 3, 4, 5, 6 ],\n*     'accessors': [ getter, setter ]\n* };\n* var y = {\n*     'data': [ 1, 1, 1, 1, 1, 1 ],\n*     'accessors': [ getter, setter ]\n* };\n* var z = {\n*     'data': [ 0, 0, 0, 0, 0, 0 ],\n*     'accessors': [ getter, setter ]\n* };\n*\n* map2Right( x, y, z, naryFunction( add, 2 ) );\n*\n* var data = z.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2Right( x, y, z, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar zbuf;\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar i;\n\n\t// Cache references to the input and output data:\n\txbuf = x.data;\n\tybuf = y.data;\n\tzbuf = z.data;\n\n\t// Cache accessors:\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\tzset = z.accessors[ 1 ];\n\n\t// Iterate over the elements...\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tzset( zbuf, i, fcn.call( thisArg, xget( xbuf, i ), yget( ybuf, i ), i, [ xbuf, ybuf ] ) ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport zeros from '@stdlib/array/base/zeros';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport ndzeros from '@stdlib/ndarray/zeros';\nimport broadcastShapes from '@stdlib/ndarray/base/broadcast-shapes';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to a new array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} input arrays must be either both array-like objects or both ndarrays\n* @throws {RangeError} input arrays must have the same length\n* @throws {Error} input ndarrays must be broadcast compatible\n* @throws {TypeError} third argument must be a function\n* @returns {(Array|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2Right( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2Right( x, y, naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2Right( x, y, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar out;\n\tvar tmp;\n\tvar sh;\n\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\t// Broadcast `x` and `y` to a common shape:\n\t\tsh = broadcastShapes( [ x.shape, y.shape ] );\n\t\tif ( sh === null ) {\n\t\t\tthrow new Error( 'invalid arguments. Input ndarrays must be broadcast compatible.' );\n\t\t}\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\t// Create an output array:\n\t\tout = ndzeros( sh, {\n\t\t\t'dtype': 'generic',\n\t\t\t'order': x.order\n\t\t});\n\n\t\t// Apply the function to the input arrays:\n\t\tndarrayFcn( x, y, ndarraylike2object( out ), fcn, thisArg );\n\t\treturn out;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( y.length !== x.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input arrays must have the same length.' );\n\t\t}\n\t\tout = zeros( x.length );\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in an array of arrays and assigns the result to a nested element in a new array of arrays.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - array of arrays\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array of arrays\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} array of arrays\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ -1, -2, -3 ],\n*     [ -4, -5, -6 ]\n* ];\n*\n* var out = map2d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ 1, 2, 3 ], [ 4, 5, 6 ] ]\n*/\nfunction map2d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar tmp;\n\tvar M;\n\tvar N;\n\tvar a;\n\tvar i;\n\tvar j;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tM = arr.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( !isArrayLikeObject( a ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object containing array-like objects. Index: `%u`. Value: `%s`.', i, a ) );\n\t\t}\n\t\tN = a.length;\n\t\ttmp = [];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\ttmp.push( fcn.call( thisArg, a[ j ], [ i, j ], arr ) );\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in a three-dimensional nested array and assigns the result to a nested element in a new three-dimensional nested array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - three-dimensional nested array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be a three-dimensional nested array\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} three-dimensional nested array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ [ -1, -2, -3 ] ],\n*     [ [ -4, -5, -6 ] ]\n* ];\n*\n* var out = map3d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ [ 1, 2, 3 ] ], [ [ 4, 5, 6 ] ] ]\n*/\nfunction map3d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar a1;\n\tvar a2;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tS0 = arr.length;\n\tout = [];\n\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\ta1 = arr[ i0 ];\n\t\tif ( !isArrayLikeObject( a1 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a three-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t}\n\t\tS1 = a1.length;\n\t\tt1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta2 = a1[ i1 ];\n\t\t\tif ( !isArrayLikeObject( a2 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a three-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t\t}\n\t\t\tS2 = a2.length;\n\t\t\tt2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tt2.push( fcn.call( thisArg, a2[ i2 ], [ i0, i1, i2 ], arr ) );\n\t\t\t}\n\t\t\tt1.push( t2 );\n\t\t}\n\t\tout.push( t1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in a four-dimensional nested array and assigns the result to a nested element in a new four-dimensional nested array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - four-dimensional nested array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be a four-dimensional nested array\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} four-dimensional nested array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ [ [ -1, -2, -3 ] ] ],\n*     [ [ [ -4, -5, -6 ] ] ]\n* ];\n*\n* var out = map4d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ [ [ 1, 2, 3 ] ] ], [ [ [ 4, 5, 6 ] ] ] ]\n*/\nfunction map4d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tS0 = arr.length;\n\tout = [];\n\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\ta1 = arr[ i0 ];\n\t\tif ( !isArrayLikeObject( a1 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t}\n\t\tS1 = a1.length;\n\t\tt1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta2 = a1[ i1 ];\n\t\t\tif ( !isArrayLikeObject( a2 ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u). Value: `%s`.', i0, i1, a2 ) );\n\t\t\t}\n\t\t\tS2 = a2.length;\n\t\t\tt2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta3 = a2[ i2 ];\n\t\t\t\tif ( !isArrayLikeObject( a3 ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u, %u). Value: `%s`.', i0, i1, i2, a3 ) );\n\t\t\t\t}\n\t\t\t\tS3 = a3.length;\n\t\t\t\tt3 = [];\n\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\tt3.push( fcn.call( thisArg, a3[ i3 ], [ i0, i1, i2, i3 ], arr ) ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\tt2.push( t3 );\n\t\t\t}\n\t\t\tt1.push( t2 );\n\t\t}\n\t\tout.push( t1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in a five-dimensional nested array and assigns the result to a nested element in a new five-dimensional nested array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - five-dimensional nested array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be a five-dimensional nested array\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} five-dimensional nested array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import abs from '@stdlib/math/base/special/abs';\n*\n* var arr = [\n*     [ [ [ [ -1, -2, -3 ] ] ] ],\n*     [ [ [ [ -4, -5, -6 ] ] ] ]\n* ];\n*\n* var out = map5d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ [ [ [ 1, 2, 3 ] ] ] ], [ [ [ [ 4, 5, 6 ] ] ] ] ]\n*/\nfunction map5d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar t4;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar a4;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tS0 = arr.length;\n\tout = [];\n\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\ta1 = arr[ i0 ];\n\t\tif ( !isArrayLikeObject( a1 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t}\n\t\tS1 = a1.length;\n\t\tt1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta2 = a1[ i1 ];\n\t\t\tif ( !isArrayLikeObject( a2 ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u). Value: `%s`.', i0, i1, a2 ) );\n\t\t\t}\n\t\t\tS2 = a2.length;\n\t\t\tt2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta3 = a2[ i2 ];\n\t\t\t\tif ( !isArrayLikeObject( a3 ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u, %u). Value: `%s`.', i0, i1, i2, a3 ) );\n\t\t\t\t}\n\t\t\t\tS3 = a3.length;\n\t\t\t\tt3 = [];\n\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\ta4 = a3[ i3 ];\n\t\t\t\t\tif ( !isArrayLikeObject( a4 ) ) {\n\t\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a five-dimensional nested array. Indices: (%u, %u, %u, %u). Value: `%s`.', i0, i1, i2, i3, a4 ) );\n\t\t\t\t\t}\n\t\t\t\t\tS4 = a4.length;\n\t\t\t\t\tt4 = [];\n\t\t\t\t\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\t\t\t\t\tt4.push( fcn.call( thisArg, a4[ i4 ], [ i0, i1, i2, i3, i4 ], arr ) ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t\tt3.push( t4 );\n\t\t\t\t}\n\t\t\t\tt2.push( t3 );\n\t\t\t}\n\t\t\tt1.push( t2 );\n\t\t}\n\t\tout.push( t1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function according to a specified mask.\n*\n* ## Notes\n*\n* -   Only those arguments having a truthy mask value are applied to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {Collection} mask - argument mask\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a collection\n* @returns {Function} masked function\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* var bar = maskArguments( foo, [ 1, 0, 1 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction maskArguments( fcn, mask, thisArg ) {\n\tvar fcns;\n\tvar idx;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isCollection( mask ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', mask ) );\n\t}\n\tidx = [];\n\tfor ( i = 0; i < mask.length; i++ ) {\n\t\tif ( mask[ i ] ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( idx.length < fcns.length ) ? fcns[ idx.length ] : nary;\n\n\t/**\n\t* Invokes a nullary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ] );\n\t}\n\n\t/**\n\t* Invokes a binary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ] );\n\t}\n\n\t/**\n\t* Invokes a ternary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quaternary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quinary function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ], arguments[ idx[4] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a function according to an argument mask.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ idx[i] ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default maskArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport identity from './../../identity-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a memoized function.\n*\n* @param {Function} fcn - function to memoize\n* @param {Function} [hashFunction] - function to map a set of arguments to a single value identifying that set\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} memoized function\n*\n* @example\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\nfunction memoize( fcn, hashFunction ) {\n\tvar toKey;\n\tvar cache;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\ttoKey = identity;\n\t} else {\n\t\ttoKey = hashFunction;\n\t\tif ( !isFunction( toKey ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Hash function argument must be a function. Value: `%s`.', toKey ) );\n\t\t}\n\t}\n\tcache = {};\n\tsetReadOnly( memoized, 'cache', cache );\n\treturn memoized;\n\n\t/**\n\t* Memoized function.\n\t*\n\t* @private\n\t* @param {...*} args - function arguments\n\t* @returns {*} memoized function result\n\t*/\n\tfunction memoized() {\n\t\tvar args;\n\t\tvar out;\n\t\tvar key;\n\t\tvar i;\n\t\targs = new Array( arguments.length );\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\tkey = toKey( args ).toString();\n\t\tif ( hasOwnProp( cache, key ) ) {\n\t\t\treturn cache[ key ];\n\t\t}\n\t\tout = fcn.apply( null, args );\n\t\tcache[ key ] = out;\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default memoize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'level': PINF,\n\t\t'override': true,\n\t\t'extend': true,\n\t\t'copy': true\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isObject from '@stdlib/assert/is-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport isFunction from '@stdlib/assert/is-function';\nimport typeOf from './../../type-of';\nimport deepCopy from './../../copy';\n\n\n// MAIN //\n\n/**\n* Merges a source object into a target object.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @param {number} level - merge level\n* @param {boolean} copy - indicates whether to perform a deep copy of merged values\n* @param {(boolean|Function)} override - defines the merge strategy\n* @param {boolean} extend - indicates whether new properties can be added to the target object\n*/\nfunction deepMerge( target, source, level, copy, override, extend ) {\n\tvar hasProp;\n\tvar isFunc;\n\tvar name;\n\tvar keys;\n\tvar curr;\n\tvar key;\n\tvar val;\n\tvar tmp;\n\tvar i;\n\n\t// Determine if we were provided a custom override strategy:\n\tisFunc = isFunction( override );\n\n\t// Decrement the level:\n\tlevel -= 1;\n\n\t// Loop through the source keys and implement the merge strategy...\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\thasProp = hasOwnProp( target, key );\n\n\t\t// Can we add new properties to the target?\n\t\tif ( !hasProp && !extend ) {\n\t\t\tcontinue;\n\t\t}\n\t\tval = source[ key ];\n\n\t\tif ( hasProp ) {\n\t\t\tcurr = target[ key ];\n\t\t\tname = typeOf( curr );\n\n\t\t\t// Should we recurse to perform a deep(er) merge? (only if both the current value and the proposed value are objects and the level is > 0)\n\t\t\tif (\n\t\t\t\t!isBuffer( curr ) &&\n\t\t\t\tname === 'object' &&\n\t\t\t\tisObject( val ) &&\n\t\t\t\tlevel\n\t\t\t) {\n\t\t\t\tdeepMerge( curr, val, level, copy, override, extend );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Should we apply a custom merge (override) strategy?\n\t\t\tif ( isFunc ) {\n\t\t\t\ttmp = override( curr, val, key );\n\n\t\t\t\t// WARNING: the following check does NOT prevent shared (leaky) nested references. We only check for top-level reference equality. We will assume that the user knows best, given their having provided a custom override strategy.\n\t\t\t\tif ( copy && tmp !== curr && tmp === val ) {\n\t\t\t\t\ttmp = deepCopy( tmp );\n\t\t\t\t}\n\t\t\t\ttarget[ key ] = tmp;\n\t\t\t}\n\t\t\t// Are we allowed to override an existing target value?\n\t\t\telse if ( override ) {\n\t\t\t\tif ( copy ) {\n\t\t\t\t\ttarget[ key ] = deepCopy( val );\n\t\t\t\t} else {\n\t\t\t\t\ttarget[ key ] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// New property to be added to target object. Should we deep copy the source value?\n\t\telse if ( copy ) {\n\t\t\ttarget[ key ] = deepCopy( val );\n\t\t}\n\t\t// Perform a simple assignment...\n\t\telse {\n\t\t\ttarget[ key ] = val;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default deepMerge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-object';\nimport format from '@stdlib/string/format';\nimport deepMerge from './deepmerge.js';\n\n\n// MAIN //\n\n/**\n* Returns a merge function based on provided options.\n*\n* @private\n* @param {Options} opts - function options\n* @param {number} options.level - merge level\n* @param {boolean} options.copy - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} options.override - defines the merge strategy\n* @param {boolean} options.extend - boolean indicating whether new properties can be added to the target object\n* @returns {Function} merge function\n*\n* @example\n* var merge = mergefcn({\n*     'level': Number.POSITIVE_INFINITY,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* });\n* // returns <Function>\n*/\nfunction mergefcn( opts ) {\n\treturn merge;\n\n\t/**\n\t* Merges objects into a target object. Note that the target object is mutated.\n\t*\n\t* @private\n\t* @param {Object} target - target object\n\t* @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n\t* @throws {Error} must provide a target object and one or more source objects\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} source arguments must be objects\n\t* @returns {Object} merged (target) object\n\t*\n\t* @example\n\t* var target = {\n\t*     'a': 'beep'\n\t* };\n\t* var source = {\n\t*     'a': 'boop',\n\t*     'b': 'bap'\n\t* };\n\t*\n\t* var out = merge( target, source );\n\t* // returns {'a':'boop', 'b':'bap'}\n\t*/\n\tfunction merge( target ) {\n\t\tvar nargs;\n\t\tvar arg;\n\t\tvar src;\n\t\tvar i;\n\n\t\tnargs = arguments.length - 1;\n\t\tif ( nargs < 1 ) {\n\t\t\tthrow new Error( 'insufficient arguments. Must provide both a target object and one or more source objects.' );\n\t\t}\n\t\tif ( !isObject( target ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', target ) );\n\t\t}\n\t\tsrc = new Array( nargs );\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targ = arguments[ i+1 ];\n\n\t\t\t// WARNING: this is a porous check. Buffers, Numbers, Booleans, Strings, Dates, RegExp, custom class instances,... will all pass.\n\t\t\tif ( !isObject( arg ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be objects. Index: `%u`. Value: `%s`.', i, arg ) );\n\t\t\t}\n\t\t\tsrc[ i ] = arg;\n\t\t}\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tdeepMerge( target, src[ i ], opts.level, opts.copy, opts.override, opts.extend ); // eslint-disable-line max-len\n\t\t}\n\t\treturn target;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mergefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in two input arrays while iterating from right to left and assign the results to an output array.\n*\n* @module @stdlib/utils/map2-right\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n*\n* var out = map2Right( x, y, naryFunction( add, 2 ) );\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n*\n* var out = map2Right( x, y. naryFunction( add, 2 ) );\n* // returns <ndarray>\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2Right.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n* import map2Right from '@stdlib/utils/map2-right';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2Right.assign( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport broadcast from '@stdlib/ndarray/base/maybe-broadcast-array';\nimport isReadOnly from '@stdlib/ndarray/base/assert/is-read-only';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function to elements in two input arrays while iterating from right to left and assigns the results to an output array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **v1**: element from first input array.\n*     -   **v2**: element from second input array.\n*     -   **idx**: element index.\n*     -   **arrays**: input arrays.\n*\n* @param {(ArrayLikeObject|ndarray)} x - first input array\n* @param {(ArrayLikeObject|ndarray)} y - second input array\n* @param {(ArrayLikeObject|ndarray)} out - output array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} second argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be an array-like object or an ndarray\n* @throws {TypeError} fourth argument must be a function\n* @throws {TypeError} input and output arrays must be either all array-like objects or all ndarrays\n* @throws {RangeError} input and output arrays must have the same length\n* @throws {Error} input and output ndarrays must be broadcast compatible\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {(ArrayLikeObject|ndarray)} output array\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n* var y = [ 1, 1, 1, 1, 1, 1 ];\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* map2Right( x, y, out, naryFunction( add, 2 ) );\n*\n* console.log( out );\n* // => [ 2, 3, 4, 5, 6, 7 ]\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic',\n*     'shape': [ 2, 3 ]\n* };\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n* var y = array( [ [ 1, 1, 1 ], [ 1, 1, 1 ] ], opts );\n* var out = array( opts );\n*\n* map2Right( x, y, out, naryFunction( add, 2 ) );\n*\n* var data = out.data;\n* // returns [ 2, 3, 4, 5, 6, 7 ]\n*/\nfunction map2Right( x, y, out, fcn, thisArg ) {\n\tvar isxnd;\n\tvar isynd;\n\tvar isznd;\n\tvar tmp;\n\tvar sh;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tisxnd = isndarrayLike( x );\n\tisynd = isndarrayLike( y );\n\tisznd = isndarrayLike( out );\n\tif ( isxnd ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\tif ( !isynd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an ndarray, the second input array must also be an ndarray. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( !isznd ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are ndarrays, the output array must also be an ndarray. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( isReadOnly( out ) ) {\n\t\t\tthrow new Error( 'invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.' );\n\t\t}\n\t\tout = ndarraylike2object( out );\n\t\tsh = out.shape;\n\n\t\t// Broadcast and wrap the input arrays and ensure that the `ref` properties point to the original input arrays...\n\t\ttmp = ndarraylike2object( broadcast( x, sh ) );\n\t\ttmp.ref = x;\n\t\tx = tmp;\n\n\t\ttmp = ndarraylike2object( broadcast( y, sh ) );\n\t\ttmp.ref = y;\n\t\ty = tmp;\n\n\t\tndarrayFcn( x, y, out, fcn, thisArg );\n\t\treturn out.ref;\n\t}\n\tif ( isArrayLikeObject( x ) ) {\n\t\tif ( isynd || !isArrayLikeObject( y ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the first input array is an array-like object, the second input array must also be an array-like object. Value: `%s`.', y ) );\n\t\t}\n\t\tif ( isznd || !isArrayLikeObject( out ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. If the input arrays are array-like objects, the output array must also be an array-like object. Value: `%s`.', out ) );\n\t\t}\n\t\tif ( x.length !== y.length || y.length !== out.length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Input and output arrays must have the same length.' );\n\t\t}\n\t\tarrayFcn( arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), fcn, thisArg ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nexport default map2Right;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defaults from './defaults.js';\nimport mergefcn from './mergefcn.js';\n\n\n// MAIN //\n\n/**\n* Merges objects into a target object. Note that the target object is mutated.\n*\n* @name merge\n* @type {Function}\n* @param {Object} target - target object\n* @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n* @throws {Error} must provide a target object and one or more source objects\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} source arguments must be objects\n* @returns {Object} merged (target) object\n*\n* @example\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*/\nvar merge = mergefcn( defaults() );\n\n\n// EXPORTS //\n\nexport default merge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Moves a property from one object to another object.\n*\n* @param {Object} source - source object\n* @param {string} prop - property to move\n* @param {Object} target - target object\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @returns {boolean} boolean indicating whether operation was successful\n*\n* @example\n* var obj1 = { 'a': 'b' };\n* var obj2 = {};\n*\n* var bool = moveProperty( obj1, 'a', obj2 );\n* // returns true\n*\n* @example\n* var obj1 = { 'a': 'b' };\n* var obj2 = {};\n*\n* var bool = moveProperty( obj1, 'c', obj2 );\n* // returns false\n*/\nfunction moveProperty( source, prop, target ) {\n\tvar desc;\n\tif ( typeof source !== 'object' || source === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Source argument must be an object. Value: `%s`.', source ) );\n\t}\n\tif ( typeof target !== 'object' || target === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Target argument must be an object. Value: `%s`.', target ) );\n\t}\n\t// TODO: handle case where gOPD is not supported\n\tdesc = Object.getOwnPropertyDescriptor( source, prop );\n\tif ( desc === void 0 ) {\n\t\treturn false;\n\t}\n\tdelete source[ prop ];\n\tdefineProperty( target, prop, desc );\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default moveProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies a specified number of arguments to a provided function.\n*\n* ## Notes\n*\n* -   The returned function **always** invokes the wrapped function with a specified number of arguments, even when the returned function is provided fewer arguments. The value for the missing arguments is equal to `undefined`.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeInteger} arity - number of arguments\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Function} function wrapper\n*\n* @example\n* function foo() {\n*     var s;\n*     var i;\n*\n*     s = 0;\n*     for ( i = 0; i < arguments.length; i++ ) {\n*         s += arguments[ i ];\n*     }\n*     return s;\n* }\n*\n* var bar = naryFunction( foo, 2 );\n*\n* var out = bar( 1, 2, 3, 4, 5, 6 );\n* // returns 3\n*/\nfunction naryFunction( fcn, arity, thisArg ) {\n\tvar fcns;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( arity < fcns.length ) ? fcns[ arity ] : nary;\n\n\t/**\n\t* Invokes a nullary function.\n\t*\n\t* @private\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary( x ) {\n\t\treturn fcn.call( thisArg, x );\n\t}\n\n\t/**\n\t* Invokes a binary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary( x, y ) {\n\t\treturn fcn.call( thisArg, x, y );\n\t}\n\n\t/**\n\t* Invokes a ternary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary( x, y, z ) {\n\t\treturn fcn.call( thisArg, x, y, z );\n\t}\n\n\t/**\n\t* Invokes a quaternary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary( x, y, z, w ) {\n\t\treturn fcn.call( thisArg, x, y, z, w );\n\t}\n\n\t/**\n\t* Invokes a quinary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {*} v - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary( x, y, z, w, v ) {\n\t\treturn fcn.call( thisArg, x, y, z, w, v );\n\t}\n\n\t/**\n\t* Invokes an n-ary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {*} v - input value\n\t* @param {*} t - input value\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary( x, y, z, w, v, t ) {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ x, y, z, w, v, t ];\n\t\tfor ( i = 6; i < arity; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default naryFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Merge and extend objects.\n*\n* @module @stdlib/utils/merge\n*\n* @example\n* import merge from '@stdlib/utils/merge';\n*\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*\n* @example\n* import { factory as factory } from '@stdlib/utils/merge';\n*\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\n\n// MODULES //\n\nimport setReadOnly from './../../define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport validate from './validate.js';\nimport defaults from './defaults.js';\nimport mergefcn from './mergefcn.js';\n\n\n// MAIN //\n\n/**\n* Returns a function for merging and extending objects.\n*\n* @param {Options} options - merge options\n* @param {number} [options.level=Infinity] - merge level\n* @param {boolean} [options.copy=true] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override=true] - defines the merge strategy\n* @param {boolean} [options.extend=true] - boolean indicating whether new properties can be added to the target object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which can be used to merge objects\n*\n* @example\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\nfunction factory( options ) {\n\tvar opts;\n\tvar err;\n\topts = defaults();\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn mergefcn( opts );\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {number} [options.level] - merge level\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override] - defines the merge strategy\n* @param {boolean} [options.extend] - boolean indicating whether new properties can be added to the target object\n* @returns {(Error|null)} error object or null\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'level' ) ) {\n\t\topts.level = options.level;\n\t\tif ( !isPositiveInteger( opts.level ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'level', opts.level ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'override' ) ) {\n\t\topts.override = options.override;\n\t\tif (\n\t\t\t!isBoolean( opts.override ) &&\n\t\t\t!isFunction( opts.override )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a boolean or a function. Option: `%s`.', 'override', opts.override ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'extend' ) ) {\n\t\topts.extend = options.extend;\n\t\tif ( !isBoolean( opts.extend ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'extend', opts.extend ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Adds a callback to the \"next tick queue\".\n*\n* ## Notes\n*\n* -   The queue is fully drained after the current operation on the JavaScript stack runs to completion and before the event loop is allowed to continue.\n*\n* @param {Callback} clbk - callback\n* @param {...*} [args] - arguments to provide to the callback upon invocation\n*\n* @example\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* nextTick( beep );\n*/\nfunction nextTick( clbk ) {\n\tvar args;\n\tvar i;\n\n\targs = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\tproc.nextTick( wrapper );\n\n\t/**\n\t* Callback wrapper.\n\t*\n\t* ## Notes\n\t*\n\t* -   The ability to provide additional arguments was added in Node.js v1.8.1. The wrapper provides support for earlier Node.js versions.\n\t*\n\t* @private\n\t*/\n\tfunction wrapper() {\n\t\tclbk.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nimport isBooleanArray from './../../../base/assert/is-booleanarray';\nimport arraylike2object from './../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpretBoolean from '@stdlib/strided/base/reinterpret-boolean';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether all elements in an array are falsy.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = internal( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = internal( x );\n* // returns false\n*/\nfunction internal( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( x[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array are falsy.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 0, 0 ] ) );\n*\n* var out = accessors( x );\n* // returns true\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 0, 4 ] ) );\n*\n* var out = accessors( x );\n* // returns false\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( get( data, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array are falsy.\n*\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = none( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = none( x );\n* // returns false\n*/\nfunction none( x ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and test interleaved real and imaginary components, where we consider a complex number to be falsy if both components are zero...\n\t\tif ( isComplex128Array( x ) ) {\n\t\t\treturn internal( reinterpret128( x, 0 ) );\n\t\t}\n\t\tif ( isComplex64Array( x ) ) {\n\t\t\treturn internal( reinterpret64( x, 0 ) );\n\t\t}\n\t\t// If provided a boolean array, reinterpret as a typed array and test whether all elements are false...\n\t\tif ( isBooleanArray( x ) ) {\n\t\t\treturn internal( reinterpretBoolean( x, 0 ) );\n\t\t}\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nexport default none;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport base from '@stdlib/array/base/none';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection are falsy.\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} must provide a collection\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* var arr = [ 0, 0, 0, 0, 0 ];\n*\n* var bool = none( arr );\n* // returns true\n*/\nfunction none( collection ) {\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a collection. Value: `%s`.', collection ) );\n\t}\n\treturn base( collection );\n}\n\n\n// EXPORTS //\n\nexport default none;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ -1, -2, -3, -4 ];\n*\n* var bool = noneBy( arr, isPositive );\n* // returns true\n*/\nfunction noneBy( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default noneBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `noneBy` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `noneBy()`, `[].push()` behavior is consistent with `noneByRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var arr = [ -1, -2, -3, -4 ];\n*\n* var bool = noneByRight( arr, isPositive );\n* // returns true\n*/\nfunction noneByRight( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default noneByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\nimport isNonEnumerable from '@stdlib/assert/is-nonenumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable property names and symbols\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n*\n* obj.a = 'a';\n* defineProperty( obj, 'b', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'b'\n* });\n*\n* var props = nonEnumerableProperties( obj );\n* // returns [ 'b' ]\n*/\nfunction nonEnumerableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar n;\n\tvar i;\n\n\tout = propertyNames( value );\n\tn = 0;\n\tfor ( i = 0; i < out.length; i++ ) {\n\t\tif ( isNonEnumerable( value, out[ i ] ) ) {\n\t\t\tout[ n ] = out[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tout.length = n;\n\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isNonEnumerable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isNonEnumerable from '@stdlib/assert/is-nonenumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable property names and symbols\n*\n* @example\n* var props = nonEnumerablePropertiesIn( [] );\n* // returns [...]\n*/\nfunction nonEnumerablePropertiesIn( value ) {\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting non-enumerable properties...\n\tcache = {};\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a name more than once\n\t\t\t\tisNonEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisNonEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = nonEnumerablePropertyNames( obj );\n* // returns [ 'beep' ]\n*/\nfunction nonEnumerablePropertyNames( value ) { // eslint-disable-line id-length\n\tvar names;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tnames = getOwnPropertyNames( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tif ( isNonEnumerableProperty( value, names[ i ] ) ) {\n\t\t\tnames[ n ] = names[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tnames.length = n;\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = nonEnumerablePropertyNamesIn( obj );\n* // e.g., returns [ 'beep', ... ]\n*/\nfunction nonEnumerablePropertyNamesIn( value ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting non-enumerable property names...\n\tnames = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertyNamesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable symbol properties\n*\n* @example\n* var symbols = nonEnumerablePropertySymbols( {} );\n*/\nfunction nonEnumerablePropertySymbols( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tsymbols = getOwnPropertySymbols( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tif ( isNonEnumerableProperty( value, symbols[ i ] ) ) {\n\t\t\tsymbols[ n ] = symbols[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tsymbols.length = n;\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isNonEnumerableProperty from '@stdlib/assert/is-nonenumerable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable symbol properties\n*\n* @example\n* var symbols = nonEnumerablePropertySymbolsIn( {} );\n*/\nfunction nonEnumerablePropertySymbolsIn( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all non-enumerable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default nonEnumerablePropertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\n\n\n// VARIABLES //\n\nvar RE_INTEGER_INDEX = /^[0-9]+$/;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names which are not integer indices.\n*\n* @param {ObjectLike} obj - input object\n* @returns {Array} key array\n*\n* @example\n* function Foo() {\n*     this[ 0 ] = 3.14;\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var keys = nonIndexKeys( obj );\n* // e.g., returns [ 'beep' ]\n*/\nfunction nonIndexKeys( obj ) {\n\tvar keys;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tN = len;\n\tj = 0;\n\n\t// Compress the list of keys by using a lagging index and moving non-integer indices to earlier positions in the array...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( RE_INTEGER_INDEX.test( keys[ i ] ) ) {\n\t\t\tN -= 1;\n\t\t} else {\n\t\t\tkeys[ j ] = keys[ i ];\n\t\t\tj += 1;\n\t\t}\n\t}\n\tkeys.length = N;\n\treturn keys;\n}\n\n\n// EXPORTS //\n\nexport default nonIndexKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isArray from '@stdlib/assert/is-array';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} second argument must an an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'boop'\n* });\n* // returns { 'beep': 'a', 'boop': 'b' }\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'beep'\n* });\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var out = invert( obj, {\n*     'duplicates': false\n* });\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invert( obj, opts ) {\n\tvar allowDupes = true;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'duplicates', allowDupes ) );\n\t\t\t}\n\t\t}\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = obj[ key ];\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tout[ obj[ key ] ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default invert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isArray from '@stdlib/assert/is-array';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isFunction from '@stdlib/assert/is-function';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys, according to a transform function.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} options argument must an an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* function transform( key, value ) {\n*     return key + value;\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'boop'\n* };\n* var out = invertBy( obj, transform );\n* // returns { 'abeep': 'a', 'bboop': 'b' }\n*\n* @example\n* function transform( key, value ) {\n*     return value;\n* }\n* var obj = {\n*     'a': 'beep',\n*     'b': 'beep'\n* };\n* var out = invertBy( obj, transform );\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* function transform( key, value ) {\n*     return value;\n* }\n*\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var opts = {\n*     'duplicates': false\n* };\n* var out = invertBy( obj, opts, transform );\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invertBy( obj, opts, transform ) {\n\tvar allowDupes;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar cb;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\tallowDupes = true;\n\tif ( arguments.length === 2 ) {\n\t\tcb = opts;\n\t} else {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'duplicates', allowDupes ) );\n\t\t\t}\n\t\t}\n\t\tcb = transform;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = cb( key, obj[ key ], obj );\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = cb( key, obj[ key ], obj );\n\t\t\tout[ val ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default invertBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy excluding specified keys.\n*\n* @param {Object} obj - source object\n* @param {(string|StringArray)} keys - keys to exclude\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be either a string or an array of strings\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omit( obj1, 'b' );\n* // returns { 'a': 1 }\n*/\nfunction omit( obj, keys ) {\n\tvar ownKeys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\townKeys = objectKeys( obj );\n\tout = {};\n\tif ( isString( keys ) ) {\n\t\tfor ( i = 0; i < ownKeys.length; i++ ) {\n\t\t\tkey = ownKeys[ i ];\n\t\t\tif ( key !== keys ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tif ( isStringArray( keys ) ) {\n\t\tfor ( i = 0; i < ownKeys.length; i++ ) {\n\t\t\tkey = ownKeys[ i ];\n\t\t\tif ( indexOf( keys, key ) === -1 ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Second argument must be either a string or an array of strings. Value: `%s`.', keys ) );\n}\n\n\n// EXPORTS //\n\nexport default omit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy excluding properties for which a predicate returns a truthy value.\n*\n* @param {Object} obj - source object\n* @param {Function} predicate - predicate function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omitBy( obj1, predicate );\n* // returns { 'a': 1 }\n*/\nfunction omitBy( obj, predicate ) {\n\tvar keys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tout = {};\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tif ( !predicate( key, obj[ key ] ) ) {\n\t\t\tout[ key ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default omitBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the current process is running on Darwin.\n*\n* @module @stdlib/assert/is-darwin\n* @type {boolean}\n*\n* @example\n* import PLATFORM from '@stdlib/os/platform';\n* import IS_DARWIN from '@stdlib/assert/is-darwin';\n*\n* if ( IS_DARWIN ) {\n*     console.log( 'Running on Darwin...' );\n* } else {\n*     console.log( 'Running on %s...', PLATFORM );\n* }\n*/\n\n// MODULES //\n\nimport PLATFORM from '@stdlib/os/platform';\n\n\n// MAIN //\n\n/**\n* Boolean indicating if the current process is running on Darwin.\n*\n* @constant\n* @type {boolean}\n*/\nvar IS_DARWIN = ( PLATFORM === 'darwin' );\n\n\n// EXPORTS //\n\nexport default IS_DARWIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from './../../is-string';\n\n\n// VARIABLES //\n\n/**\n* Matches parts of a URI according to RFC 3986.\n*\n* ```text\n* <scheme name> : <hierarchical part > [ ? <query> ] [ # <fragment> ]\n* ```\n*\n* Regular expression: `/(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/`\n*\n* -   `(?:([^:\\/?#]+):)`\n*\n*     -   match the scheme, including the `:`, but only capture the scheme name\n*\n* -   `?`\n*\n*     -   match the scheme zero or one times\n*\n* -   `(?:\\/\\/([^\\/?#]*))`\n*\n*     -   match the hierarchical part which is everything which is not a `/`, `#`, or `?`, but only capture whatever comes after the `//`\n*\n* -   `?`\n*\n*     -   match the hierarchical part zero or one times\n*\n* -   `([^?#]*)`\n*\n*     -   capture everything (the path) until meeting a `?` or `#`\n*\n* -   `(?:\\?[^#]*)`\n*\n*     -   match, but don't capture, a query\n*\n* -   `?`\n*\n*     -   match the query zero or one times\n*\n* -   `(?:#.*)`\n*\n*     -   match, but don't capture, a fragment\n*\n* -   `?`\n*\n*     -   match the fragment zero or one times\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/\n*/\nvar RE_URI = /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/; // eslint-disable-line no-useless-escape\n\n// Illegal characters (anything which is not in between the square brackets):\nvar RE_ILLEGALS = /[^a-z0-9:\\/?#\\[\\]@!$&'()*+,;=.\\-_~%]/i; // eslint-disable-line no-useless-escape\n\n// Incomplete HEX escapes:\nvar RE_HEX1 = /%[^0-9a-f]/i;\nvar RE_HEX2 = /%[0-9a-f](:?[^0-9a-f]|$)/i;\n\n// If authority is not present, path must not begin with '//'\nvar RE_PATH = /^\\/\\//;\n\n// Scheme must begin with a letter, then consist of letters, digits, '+', '.', or '-' => e.g., 'http', 'https', 'ftp'\nvar RE_SCHEME = /^[a-z][a-z0-9+\\-.]*$/;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a URI.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a URI\n*\n* @example\n* var bool = isURI( 'http://google.com' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://localhost/' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/path%20with%20spaces.html' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/%20' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'ftp://ftp.is.co.za/rfc/rfc1808.txt' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'ftp://ftp.is.co.za/../../../rfc/rfc1808.txt' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://www.ietf.org/rfc/rfc2396.txt' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'ldap://[2001:db8::7]/c=GB?objectClass?one' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'mailto:John.Doe@example.com' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'news:comp.infosystems.www.servers.unix' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'tel:+1-816-555-1212' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'telnet://192.0.2.16:80/' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'urn:oasis:names:specification:docbook:dtd:xml:4.1.2' );\n* // returns true\n*\n* @example\n* // No scheme:\n* var bool = isURI( '' );\n* // returns false\n*\n* @example\n* // No scheme:\n* var bool = isURI( 'foo' );\n* // returns false\n*\n* @example\n* // No scheme:\n* var bool = isURI( 'foo@bar' );\n* // returns false\n*\n* @example\n* // No scheme:\n* var bool = isURI( '://foo/' );\n* // returns false\n*\n* @example\n* // Illegal characters:\n* var bool = isURI( 'http://<foo>' );\n* // returns false\n*\n* @example\n* // Invalid path:\n* var bool = isURI( 'http:////foo.html' );\n* // returns false\n*\n* @example\n* // Incomplete hex escapes...\n* var bool = isURI( 'http://example.w3.org/%a' );\n* // returns false\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/%a/foo' );\n* // returns false\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/%at' );\n* // returns false\n*/\nfunction isURI( value ) {\n\tvar authority;\n\tvar scheme;\n\tvar parts;\n\tvar path;\n\n\tif ( !isString( value ) ) {\n\t\treturn false;\n\t}\n\t// Check for illegal characters:\n\tif ( RE_ILLEGALS.test( value ) ) {\n\t\treturn false;\n\t}\n\t// Check for incomplete HEX escapes:\n\tif (\n\t\tRE_HEX1.test( value ) ||\n\t\tRE_HEX2.test( value )\n\t) {\n\t\treturn false;\n\t}\n\t// Split the string into various URI components:\n\tparts = value.match( RE_URI );\n\tscheme = parts[ 1 ];\n\tauthority = parts[ 2 ];\n\tpath = parts[ 3 ];\n\n\t// Scheme is required and must be valid:\n\tif (\n\t\t!scheme ||\n\t\t!scheme.length ||\n\t\t!RE_SCHEME.test( scheme.toLowerCase() )\n\t) {\n\t\treturn false;\n\t}\n\t// If authority is not present, path must not begin with `//`:\n\tif (\n\t\t!authority &&\n\t\tRE_PATH.test( path )\n\t) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default isURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar spawn = require( 'child_process' ).spawn;\nimport IS_WINDOWS from '@stdlib/assert/is-windows';\nimport IS_DARWIN from '@stdlib/assert/is-darwin';\nimport format from '@stdlib/string/format';\nimport isURI from '@stdlib/assert/is-uri';\n\n\n// VARIABLES //\n\nvar ARGS;\nvar CMD;\n\n// Mac:\nif ( IS_DARWIN ) {\n\tCMD = 'open';\n\tARGS = [];\n}\n// On Windows, ideally, we would use the `start` command; however, the rules regarding argument spacing and escaping are complex. Instead, we can use `cmd /c` which has built-in logic to address these rules.\nelse if ( IS_WINDOWS ) {\n\tCMD = 'cmd';\n\n\t// `cmd /c` interprets double-quoted first parameters as window titles. To work around this, we explicitly provide an empty string for the window title.\n\tARGS = [ '/c', 'start', '\"\"' ];\n}\n// All other `*nix` flavors:\nelse {\n\tCMD = 'xdg-open';\n\tARGS = [];\n}\n\n\n// MAIN //\n\n/**\n* Opens a URL.\n*\n* @param {string} url - URL to open\n* @throws {TypeError} must provide a valid URI\n* @returns {Process} spawned process (unreferenced)\n*\n* @example\n* var proc = openURL( 'https://google.com' );\n*/\nfunction openURL( url ) {\n\tvar args;\n\tvar proc;\n\tvar i;\n\tif ( !isURI( url ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a valid URI. Value: `%s`.', url ) );\n\t}\n\targs = new Array( ARGS.length );\n\tfor ( i = 0; i < ARGS.length; i++ ) {\n\t\targs[ i ] = ARGS[ i ];\n\t}\n\tif ( IS_WINDOWS ) {\n\t\t// `&` characters must be escaped when passed to `start`:\n\t\turl = url.replace( /&/g, '^&' );\n\t}\n\targs.push( url );\n\n\t// Spawn a child process to open the URL:\n\tproc = spawn( CMD, args, {} );\n\n\t// To prevent the parent process waiting on the child process, we unreference the process to remove it from the parent's reference count:\n\tproc.unref();\n\n\treturn proc;\n}\n\n\n// EXPORTS //\n\nexport default openURL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var add2 = papply( add, 2 );\n*\n* var sum = add2( 3 );\n* // returns 5\n*/\nfunction papply( fcn ) {\n\tvar pargs;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tpargs = new Array( arguments.length-1 );\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\tpargs[ i-1 ] = arguments[ i ];\n\t}\n\treturn papplied;\n\n\t/**\n\t* Partially applied function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*} partially applied function result\n\t*/\n\tfunction papplied() {\n\t\tvar args;\n\t\tvar j;\n\t\targs = pargs.slice();\n\t\tfor ( j = 0; j < arguments.length; j++ ) {\n\t\t\targs.push( arguments[ j ] );\n\t\t}\n\t\treturn fcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default papply;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments from the right.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function say( text, name ) {\n*     return text + ', ' + name + '.';\n* }\n*\n* var toGrace = papplyRight( say, 'Grace Hopper' );\n*\n* var str = toGrace( 'Hello' );\n* // returns 'Hello, Grace Hopper.'\n*\n* str = toGrace( 'Thank you' );\n* // returns 'Thank you, Grace Hopper.'\n*/\nfunction papplyRight( fcn ) {\n\tvar pargs;\n\tvar len;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = arguments.length - 1;\n\tpargs = new Array( len );\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\tpargs[ i-1 ] = arguments[ i ];\n\t}\n\treturn pappliedRight;\n\n\t/**\n\t* Partially applied function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*} partially applied function result\n\t*/\n\tfunction pappliedRight() {\n\t\tvar nargs;\n\t\tvar args;\n\t\tvar j;\n\t\tnargs = arguments.length;\n\t\targs = new Array( len+nargs );\n\t\tfor ( j = 0; j < args.length; j++ ) {\n\t\t\tif ( j >= nargs ) {\n\t\t\t\targs[ j ] = pargs[ j-nargs ];\n\t\t\t} else {\n\t\t\t\targs[ j ] = arguments[ j ];\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default papplyRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns the current working directory of the process.\n*\n* @returns {string} current working directory of the process\n*\n* @example\n* var dir = cwd();\n* // e.g., returns '/path/to/current/working/directory'\n*/\nfunction cwd() {\n\treturn proc.cwd();\n}\n\n\n// EXPORTS //\n\nexport default cwd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar os = require( 'os' );\n\n\n// VARIABLES //\n\nvar n;\n\n\n// FUNCTIONS //\n\n/**\n* Returns the number of CPUs.\n*\n* @private\n* @returns {PositiveInteger} number of CPUs\n*\n* @example\n* var n = numCPUs();\n* // returns <number>\n*/\nfunction numCPUs() {\n\treturn os.cpus().length;\n}\n\n\n// MAIN //\n\nn = numCPUs();\n\n\n// EXPORTS //\n\nexport default n;\n","export default '/home/runner/work/utils/utils/parallel/lib/node'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* An object containing the user environment.\n*\n* @name ENV\n* @type {Object}\n*\n* @example\n* console.dir( ENV );\n*/\nvar ENV = proc.env;\n\n\n// EXPORTS //\n\nexport default ENV;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../../keys';\nimport ENV from '@stdlib/process/env';\n\n\n// FUNCTIONS //\n\n/**\n* Copies `process.env`.\n*\n* ## Notes\n*\n* -   This implementation accommodates `process.env` on older Node.js versions (<=v0.10.x), where `process.env` was object-like, but would show unexpected behavior when attempting to get own property descriptors.\n*\n* @private\n* @returns {Object} copy of `process.env`\n*/\nfunction copy() {\n\tvar keys;\n\tvar env;\n\tvar out;\n\tvar i;\n\n\tkeys = objectKeys( ENV );\n\tout = {};\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tenv = keys[ i ];\n\t\tout[ env ] = ENV[ env ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns worker environment variables.\n*\n* @private\n* @param {Options} opts - options\n* @param {string} opts.cmd - executable file/command\n* @param {boolean} opts.ordered - boolean indicating whether to preserve order of script output\n* @param {(NonNegativeInteger|null)} opts.uid - process user identity\n* @param {(NonNegativeInteger|null)} opts.gid - process group identity\n* @param {string} opts.encoding - `stdio` encoding\n* @param {NonNegativeInteger} opts.maxBuffer - max child process `stdio` buffer size\n* @returns {Object} environment variables\n*/\nfunction env( opts ) {\n\tvar out = copy();\n\n\tout.WORKER_CMD = opts.cmd;\n\tout.WORKER_ENCODING = opts.encoding;\n\tout.WORKER_MAX_BUFFER = opts.maxBuffer;\n\n\tif ( opts.ordered ) {\n\t\tout.WORKER_ORDERED = '1';\n\t}\n\tif ( opts.uid ) {\n\t\tout.WORKER_UID = opts.uid;\n\t}\n\tif ( opts.gid ) {\n\t\tout.WORKER_GID = opts.gid;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default env;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fork = require( 'child_process' ).fork;\nvar path = require( 'path' );\nvar logger = require( 'debug' );\nimport objectKeys from './../../../keys';\nimport format from '@stdlib/string/format';\nimport getOpts from './options.js';\n\n\n// VARIABLES //\n\nvar debug = logger( 'parallel:exec' );\nvar WORKER_FILEPATH = path.resolve( __dirname, './worker/index.js' );\n\n\n// MAIN //\n\n/**\n* Executes scripts in parallel.\n*\n* @private\n* @param {StringArray} files - script absolute file paths\n* @param {Options} opts - options\n* @param {PositiveInteger} opts.concurrency - number of scripts to execute concurrently\n* @param {PositiveInteger} opts.workers - number of workers\n* @param {string} opts.cmd - executable file/command\n* @param {boolean} opts.ordered - boolean indicating whether to preserve order of script output\n* @param {(NonNegativeInteger|null)} opts.uid - process user identity\n* @param {(NonNegativeInteger|null)} opts.gid - process group identity\n* @param {string} opts.encoding - `stdio` encoding\n* @param {NonNegativeInteger} opts.maxBuffer - max child process `stdio` buffer size\n* @param {Callback} clbk - callback to invoke after executing all scripts\n*/\nfunction exec( files, opts, clbk ) {\n\tvar numClosed;\n\tvar workers;\n\tvar pending;\n\tvar fopts;\n\tvar args;\n\tvar proc;\n\tvar pids;\n\tvar pid;\n\tvar idx;\n\tvar err;\n\tvar i;\n\n\tdebug( 'Options: %s.', JSON.stringify( opts ) );\n\tnumClosed = 0;\n\n\tdebug( 'Creating %d workers...', opts.workers );\n\tworkers = {};\n\targs = [];\n\tfopts = getOpts( opts );\n\tfor ( i = 0; i < opts.workers; i++ ) {\n\t\tdebug( 'Creating child process...' );\n\t\tproc = fork( WORKER_FILEPATH, args, fopts );\n\n\t\tproc.on( 'error', onError( proc ) );\n\t\tproc.on( 'close', onClose( proc ) );\n\t\tproc.on( 'exit', onExit( proc ) );\n\t\tproc.on( 'disconnect', onDisconnect( proc ) );\n\t\tproc.on( 'message', onMessage( proc ) );\n\n\t\tdebug( 'Child process created. pid: %d.', proc.pid );\n\t\tworkers[ proc.pid ] = proc;\n\t}\n\tpids = objectKeys( workers );\n\tdebug( '%d workers created.', pids.length );\n\n\tdebug( 'Running %d scripts concurrently...', opts.concurrency );\n\tpending = {};\n\tidx = -1;\n\tfor ( i = 0; i < opts.concurrency; i++ ) {\n\t\tpid = pids[ i%pids.length ];\n\t\tnext( workers[ pid ] ); // eslint-disable-line node/callback-return\n\t}\n\n\t/**\n\t* Instructs a child process to run the next script.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {void}\n\t*/\n\tfunction next( child ) {\n\t\tvar numPending;\n\t\tidx += 1;\n\t\tif ( idx >= files.length ) {\n\t\t\tnumPending = objectKeys( pending ).length;\n\t\t\tif ( numPending > 0 ) {\n\t\t\t\tdebug( '%d scripts are pending.', numPending );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdebug( 'All scripts have finished.' );\n\t\t\treturn close();\n\t\t}\n\t\tdebug( 'Instructing child process to run script: %s. pid: %d.', files[ idx ], child.pid );\n\t\tchild.send( files[ idx ] );\n\t\tpending[ files[ idx ] ] = true;\n\n\t\tdebug( '%d of %d scripts have been processed.', idx, files.length );\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon receiving a message from a child process.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onMessage( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon receiving a message from a child process.\n\t\t*\n\t\t* @private\n\t\t* @param {string} filepath - script filepath\n\t\t*/\n\t\tfunction listener( filepath ) {\n\t\t\tdebug( 'Child process message: %s. pid: %d.', filepath, child.pid );\n\n\t\t\t// Remove the script from the listing of pending scripts:\n\t\t\tdelete pending[ filepath ];\n\n\t\t\t// Indicate that the child process is ready for its next task:\n\t\t\tnext( child );\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon child process close.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onClose( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon child process close.\n\t\t*\n\t\t* @private\n\t\t* @param {(number|null)} code - exit code\n\t\t* @param {(string|null)} signal - termination signal\n\t\t*/\n\t\tfunction listener( code, signal ) {\n\t\t\tdebug( 'Child process closed. Code: %d. Signal: %s. pid: %d.', code, signal, child.pid );\n\t\t\tprocessExit( code, signal );\n\t\t\tchildClosed();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked if a child closes.\n\t*\n\t* @private\n\t*/\n\tfunction childClosed() {\n\t\tnumClosed += 1;\n\t\tdebug( '%d of %d child processes have closed.', numClosed, opts.workers );\n\t\tif ( numClosed === opts.workers ) {\n\t\t\tdone(); // eslint-disable-line node/callback-return\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon child process exit.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onExit( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon child process exit.\n\t\t*\n\t\t* @private\n\t\t* @param {(number|null)} code - exit code\n\t\t* @param {(string|null)} signal - termination signal\n\t\t*/\n\t\tfunction listener( code, signal ) {\n\t\t\tdebug( 'Child process exited. Code: %d. Signal: %s. pid: %d.', code, signal, child.pid );\n\t\t\tprocessExit( code, signal );\n\t\t}\n\t}\n\n\t/**\n\t* Closes all workers.\n\t*\n\t* @private\n\t* @param {Error} [error] - error object\n\t*/\n\tfunction close( error ) {\n\t\tvar pids;\n\t\tvar pid;\n\t\tvar i;\n\t\tif ( error && !err ) {\n\t\t\terr = error;\n\t\t}\n\t\tdebug( 'Instructing child processes to close...' );\n\t\tpids = objectKeys( workers );\n\t\tfor ( i = 0; i < pids.length; i++ ) {\n\t\t\tpid = pids[ i ];\n\t\t\tdebug( 'Instructing child process (pid: %d) to close...', pid );\n\t\t\tworkers[ pid ].send( 'close' );\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon child process disconnect.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onDisconnect( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon child process disconnect.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction listener() {\n\t\t\tdebug( 'Child process disconnected. pid: %d.', child.pid );\n\t\t}\n\t}\n\n\t/**\n\t* Returns a callback to be invoked upon encountering a child process error.\n\t*\n\t* @private\n\t* @param {Object} child - child process\n\t* @returns {Callback} callback\n\t*/\n\tfunction onError( child ) {\n\t\treturn listener;\n\n\t\t/**\n\t\t* Callback invoked upon a child process error.\n\t\t*\n\t\t* @private\n\t\t* @param {Error} error - error object\n\t\t*/\n\t\tfunction listener( error ) {\n\t\t\tdebug( 'Child process error: %s. pid: %d.', error.message, child.pid );\n\t\t\tclose( error );\n\t\t}\n\t}\n\n\t/**\n\t* Processes process exit values. If provided a non-zero exit code or termination signal, instructs the process to close.\n\t*\n\t* @private\n\t* @param {(number|null)} code - exit code\n\t* @param {(string|null)} signal - termination signal\n\t* @returns {void}\n\t*/\n\tfunction processExit( code, signal ) {\n\t\tvar error;\n\t\tif ( err ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( code !== null && code !== 0 ) {\n\t\t\terror = new Error( format( 'unexpected error. Child process failed with exit code: `%u`.', code ) );\n\t\t} else if ( signal !== null ) {\n\t\t\terror = new Error( format( 'unexpected error. Child process failed due to termination signal: `%s`.', signal ) );\n\t\t}\n\t\tif ( error ) {\n\t\t\terror.code = code;\n\t\t\terror.signal = signal;\n\t\t\treturn close( error );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once all tasks are finished.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction done() {\n\t\tif ( err ) {\n\t\t\treturn clbk( err );\n\t\t}\n\t\tclbk();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default exec;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport cwd from '@stdlib/process/cwd';\nimport env from './env.js';\n\n\n// MAIN //\n\n/**\n* Returns child process options.\n*\n* @private\n* @param {Options} options - worker options\n* @param {(NonNegativeInteger|null)} [options.uid] - process user identity\n* @param {(NonNegativeInteger|null)} [options.gid] - process group identity\n* @returns {Object} child process options\n*/\nfunction getOpts( options ) {\n\tvar opts = {\n\t\t'cwd': cwd(),\n\t\t'env': env( options ),\n\t\t'stdio': 'inherit' // Use stdio of parent process\n\t};\n\tif ( options.uid ) {\n\t\topts.uid = options.uid;\n\t}\n\tif ( options.gid ) {\n\t\topts.gid = options.gid;\n\t}\n\treturn opts;\n}\n\n\n// EXPORTS //\n\nexport default getOpts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar path = require( 'path' );\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\nimport cwd from '@stdlib/process/cwd';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport exec from './node';\n\n\n// MAIN //\n\n/**\n* Executes scripts in parallel.\n*\n* @param {StringArray} files - script file paths\n* @param {Options} [options] - function options\n* @param {string} [options.cmd='node'] - executable file/command\n* @param {PositiveInteger} [options.concurrency] - number of scripts to execute concurrently\n* @param {PositiveInteger} [options.workers] - number of workers\n* @param {boolean} [options.ordered=false] - boolean indicating whether to preserve the order of script output\n* @param {NonNegativeInteger} [options.uid] - process user identity\n* @param {NonNegativeInteger} [options.gid] - process group identity\n* @param {NonNegativeInteger} [options.maxBuffer=200*1024*1024] - max child process `stdio` buffer size\n* @param {Callback} clbk - callback to invoke after executing all scripts\n* @throws {TypeError} first argument must be an array of strings\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n*\n* @example\n* var files = [ './a.js', './b.js ' ];\n*\n* var opts = {\n*     'workers': 3,\n*     'concurrency': 3\n* };\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* parallel( files, opts, done );\n*/\nfunction parallel() {\n\tvar options;\n\tvar files;\n\tvar opts;\n\tvar clbk;\n\tvar err;\n\tvar dir;\n\tvar i;\n\n\tfiles = arguments[ 0 ];\n\tif ( !isStringArray( files ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array of strings. Value: `%s`.', files ) );\n\t}\n\tfiles = files.slice();\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\toptions = arguments[ 1 ];\n\t\tclbk = arguments[ 2 ];\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t} else {\n\t\tclbk = arguments[ 1 ];\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\t// Prevent the number of concurrent scripts exceeding the number of actual scripts to run.\n\tif ( opts.concurrency > files.length ) {\n\t\topts.concurrency = files.length;\n\t}\n\t// Prevent the number of workers exceeding the number of concurrent scripts (excess capacity), as some workers would never be allocated scripts to run and always be idle.\n\tif ( opts.workers > opts.concurrency ) {\n\t\topts.workers = opts.concurrency;\n\t}\n\t// Resolve any relative paths to absolute paths...\n\tdir = cwd();\n\tfor ( i = 0; i < files.length; i++ ) {\n\t\tfiles[ i ] = path.resolve( dir, files[ i ] );\n\t}\n\texec( files, opts, done );\n\n\t/**\n\t* Callback invoked after executing all scripts.\n\t*\n\t* @private\n\t* @param {Error} error - error object\n\t* @returns {void}\n\t*/\n\tfunction done( error ) {\n\t\tif ( error ) {\n\t\t\treturn clbk( error );\n\t\t}\n\t\tclbk();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default parallel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport numCPUs from '@stdlib/os/num-cpus';\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t// Number of workers:\n\t\t'workers': numCPUs - 1,\n\n\t\t// Number of scripts to execute concurrently:\n\t\t'concurrency': numCPUs - 1,\n\n\t\t// Executable file/command:\n\t\t'cmd': 'node',\n\n\t\t// Boolean indicating whether script output can be interleaved or must be ordered:\n\t\t'ordered': false,\n\n\t\t// Process user identity:\n\t\t'uid': null,\n\n\t\t// Process group identity:\n\t\t'gid': null,\n\n\t\t// `stdio` encoding:\n\t\t'encoding': 'buffer',\n\n\t\t// Max child process `stdio` buffer size:\n\t\t'maxBuffer': 200 * 1024 * 1024 // bytes\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.cmd] - executable file/command\n* @param {PositiveInteger} [options.concurrency] - number of scripts to execute concurrently\n* @param {PositiveInteger} [options.workers] - number of workers\n* @param {boolean} [options.ordered] - boolean indicating whether to preserve the order of script output\n* @param {NonNegativeInteger} [options.uid] - process user identity\n* @param {NonNegativeInteger} [options.gid] - process group identity\n* @param {NonNegativeInteger} [options.maxBuffer] - max child process `stdio` buffer size\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'concurrency': 4,\n*     'workers': 2\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'concurrency' ) ) {\n\t\topts.concurrency = options.concurrency;\n\t\tif ( !isPositiveInteger( opts.concurrency ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'concurrency', opts.concurrency ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'workers' ) ) {\n\t\topts.workers = options.workers;\n\t\tif ( !isPositiveInteger( opts.workers ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'workers', opts.workers ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'cmd' ) ) {\n\t\topts.cmd = options.cmd;\n\t\tif ( !isString( opts.cmd ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'cmd', opts.cmd ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'ordered' ) ) {\n\t\topts.ordered = options.ordered;\n\t\tif ( !isBoolean( opts.ordered ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'ordered', opts.ordered ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'uid' ) ) {\n\t\topts.uid = options.uid;\n\t\tif ( !isNonNegativeInteger( opts.uid ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'uid', opts.uid ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'gid' ) ) {\n\t\topts.gid = options.gid;\n\t\tif ( !isNonNegativeInteger( opts.gid ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'gid', opts.gid ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'maxBuffer' ) ) {\n\t\topts.maxBuffer = options.maxBuffer;\n\t\tif ( !isNonNegativeInteger( opts.maxBuffer ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'maxBuffer', opts.maxBuffer ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Attempts to parse a string as JSON.\n*\n* @param {string} str - string to parse\n* @param {Function} [reviver] - transformation function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} reviver must be a function\n* @returns {(*|Error)} parsed value or parse error\n*\n* @example\n* var obj = parseJSON( '{\"beep\":\"boop\"}' );\n* // returns {'beep':'boop'}\n*/\nfunction parseJSON( str, reviver ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( reviver ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Reviver argument must be a function. Value: `%s`.', reviver ) );\n\t\t}\n\t}\n\ttry {\n\t\treturn JSON.parse( str, reviver );\n\t} catch ( error ) {\n\t\treturn error;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default parseJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy containing only specified keys. If a key does not exist as an own property in a source object, the key is ignored.\n*\n* @param {Object} obj - source object\n* @param {(string|StringArray)} keys - keys to copy\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be either a string or an array of strings\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pick( obj1, 'b' );\n* // returns { 'b': 2 }\n*/\nfunction pick( obj, keys ) {\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tif ( isString( keys ) ) {\n\t\tif ( hasOwnProp( obj, keys ) ) {\n\t\t\tout[ keys ] = obj[ keys ];\n\t\t}\n\t\treturn out;\n\t}\n\tif ( isStringArray( keys ) ) {\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Second argument must be either a string or an array of strings. Value: `%s`.', keys ) );\n}\n\n\n// EXPORTS //\n\nexport default pick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies specified arguments to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeIntegerArray} indices - argument indices\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be an array of nonnegative integers\n* @returns {Function} function wrapper\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* var bar = pickArguments( foo, [ 0, 2 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction pickArguments( fcn, indices, thisArg ) {\n\tvar fcns;\n\tvar idx;\n\tvar v;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isCollection( indices ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object containing nonnegative integers. Value: `%s`.', indices ) );\n\t}\n\tidx = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tv = indices[ i ];\n\t\tif ( !isNonNegativeInteger( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object containing nonnegative integers. Value: `%s`.', indices ) );\n\t\t}\n\t\tidx.push( v );\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( idx.length < fcns.length ) ? fcns[ idx.length ] : nary;\n\n\t/**\n\t* Invokes a nullary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ] );\n\t}\n\n\t/**\n\t* Invokes a binary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ] );\n\t}\n\n\t/**\n\t* Invokes a ternary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quaternary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quinary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ], arguments[ idx[4] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes an n-ary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ idx[i] ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default pickArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy containing properties for which a predicate returns a truthy value.\n*\n* @param {Object} obj - source object\n* @param {Function} predicate - predicate function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pickBy( obj1, predicate );\n* // returns { 'b': 2 }\n*/\nfunction pickBy( obj, predicate ) {\n\tvar keys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tout = {};\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tif ( predicate( key, obj[ key ] ) ) {\n\t\t\tout[ key ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default pickBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Extracts a property value from each element of an object array.\n*\n* @param {Array} arr - source array\n* @param {*} prop - property to access\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=true] - boolean indicating whether to return a new data structure\n* @throws {TypeError} first argument must be an object array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} destination array\n*\n* @example\n* var arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* var out = pluck( arr, 'a' );\n* // returns [ 1, 0.5 ]\n*\n* @example\n* var arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* var out = pluck( arr, 'a', {'copy':false} );\n* // returns [ 1, 0.5 ]\n*\n* var bool = ( arr[ 0 ] === out[ 0 ] );\n* // returns true\n*/\nfunction pluck( arr, prop, options ) {\n\tvar opts;\n\tvar out;\n\tvar err;\n\tvar v;\n\tvar i;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array. Value: `%s`.', arr ) );\n\t}\n\topts = defaults();\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.copy ) {\n\t\tout = new Array( arr.length );\n\t} else {\n\t\tout = arr;\n\t}\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\t\tif (\n\t\t\tv !== void 0 &&\n\t\t\tv !== null &&\n\t\t\thasOwnProp( v, prop )\n\t\t) {\n\t\t\tout[ i ] = v[ prop ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default pluck;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\treturn {\n\t\t'copy': true\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {boolean} [options.copy] - boolean indicating whether to return a new data structure\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'copy': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', opts.copy ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport popObject from './pop_object.js';\nimport popTypedArray from './pop_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Removes and returns the last element of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {Array} updated collection and the removed element\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = pop( arr );\n* // returns [ [ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = pop( arr );\n* // returns [ <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*/\nfunction pop( collection ) {\n\tvar v;\n\tif ( isArray( collection ) ) {\n\t\tv = collection.pop();\n\t\treturn [ collection, v ];\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn popTypedArray( collection );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn popObject( collection );\n\t}\n\tthrow new TypeError( format( 'invalid argument. Must provide either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default pop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the last element of a typed array.\n*\n* @private\n* @param {TypedArray} arr - input array\n* @returns {Array} input array and the removed element\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = pop( arr );\n* // returns [ <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*/\nfunction pop( arr ) {\n\tvar view;\n\tvar len;\n\tvar v;\n\tif ( arr.length === 0 ) {\n\t\treturn [ arr, void 0 ];\n\t}\n\tlen = arr.length - 1;\n\tv = arr[ len ];\n\tview = new arr.constructor( arr.buffer, arr.byteOffset, len );\n\treturn [ view, v ];\n}\n\n\n// EXPORTS //\n\nexport default pop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the last element of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @returns {Array} input object and the removed element\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* var out = pop( obj );\n* // returns [ { 'length': 1, '0': 1.0 }, 2.0 ]\n*/\nfunction pop( obj ) {\n\tvar len;\n\tvar v;\n\tif ( obj.length === 0 ) {\n\t\treturn [ obj, void 0 ];\n\t}\n\tlen = obj.length - 1;\n\tv = obj[ len ];\n\tdelete obj[ len ];\n\tobj.length = len;\n\treturn [ obj, v ];\n}\n\n\n// EXPORTS //\n\nexport default pop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport prependArray from './prepend_array.js';\nimport prependObject from './prepend_object.js';\nimport prependTypedArray from './prepend_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds elements from one collection to the beginning of another collection.\n*\n* @param {Collection} collection1 - collection\n* @param {Collection} collection2 - collection containing elements to add\n* @throws {TypeError} first argument must be either an array, typed array, or an array-like object\n* @throws {TypeError} second argument must be an array-like object\n* @returns {Collection} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( collection1, collection2 ) {\n\tif ( !isCollection( collection2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', collection2 ) );\n\t}\n\tif ( isArray( collection1 ) ) {\n\t\treturn prependArray( collection1, collection2 );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection1 ) ) {\n\t\treturn prependTypedArray( collection1, collection2 );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection1 !== null &&\n\t\ttypeof collection1 === 'object' &&\n\t\ttypeof collection1.length === 'number' &&\n\t\tisInteger( collection1.length ) &&\n\t\tcollection1.length >= 0\n\t) {\n\t\treturn prependObject( collection1, collection2 );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection1 ) );\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( arr, items ) {\n\tvar i;\n\tfor ( i = items.length-1; i >= 0; i-- ) {\n\t\tarr.unshift( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is preceded by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar offset;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\toffset = arr.byteOffset;\n\n\tif ( offset < ibytes ) {\n\t\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\t\ttotal = nbytes + ibytes + offset;\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\toffset = buf.byteLength - nbytes - ibytes;\n\t\tv = new arr.constructor( buf, offset, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i+n ] = arr[ i ];\n\t\t}\n\t} else {\n\t\toffset -= ibytes;\n\t\tv = new arr.constructor( arr.buffer, offset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {ArrayLike} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = prepend( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 3.0, '1': 4.0, '2': 1.0, '3': 2.0 }\n*/\nfunction prepend( obj, items ) {\n\tvar len;\n\tvar n;\n\tvar i;\n\n\tlen = obj.length;\n\tn = items.length;\n\n\t// Shift all existing elements to the right...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tobj[ i+n ] = obj[ i ];\n\t}\n\t// Add new elements...\n\tfor ( i = 0; i < n; i++ ) {\n\t\tobj[ i ] = items[ i ];\n\t}\n\tobj.length = len + n;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default prepend;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = properties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction properties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tout = propertyNames( value );\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tout.push( tmp[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default properties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport Object from '@stdlib/object/ctor';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited property names and symbols\n*\n* @example\n* var props = propertiesIn( [] );\n* // returns [...]\n*/\nfunction propertiesIn( value ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all properties...\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default propertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyDescriptor from './../../property-descriptor';\nimport getPrototypeOf from './../../get-prototype-of';\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own or inherited property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = propertyDescriptorIn( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction propertyDescriptorIn( value, property ) {\n\tvar desc;\n\tvar obj;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain in search of a specified property...\n\tdo {\n\t\tdesc = getOwnPropertyDescriptor( obj, property );\n\t\tif ( desc ) {\n\t\t\treturn desc;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default propertyDescriptorIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyDescriptors from './../../property-descriptors';\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport objectKeys from './../../keys';\nimport defineProperty from './../../define-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an object's own and inherited property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @returns {Object} own and inherited property descriptors\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = propertyDescriptorsIn( obj );\n* // returns { 'beep': {...}, 'foo': {...}, ... }\n*/\nfunction propertyDescriptorsIn( value ) {\n\tvar desc;\n\tvar keys;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn {};\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all property descriptors...\n\tdesc = {};\n\tdo {\n\t\ttmp = getOwnPropertyDescriptors( obj );\n\t\tkeys = objectKeys( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a property name always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tkeys = getOwnPropertySymbols( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a symbol property always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn desc;\n}\n\n\n// EXPORTS //\n\nexport default propertyDescriptorsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport Object from '@stdlib/object/ctor';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = propertyNamesIn( obj );\n* // e.g., returns [ 'beep', 'foo', ... ]\n*/\nfunction propertyNamesIn( value ) {\n\tvar names;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all enumerable and non-enumerable property names...\n\tnames = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( names, tmp[ i ] ) === false ) {\n\t\t\t\tnames.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default propertyNamesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport Object from '@stdlib/object/ctor';\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited symbol properties.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertySymbols()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited symbol properties\n*\n* @example\n* var symbols = propertySymbolsIn( [] );\n*/\nfunction propertySymbolsIn( value ) {\n\tvar symbols;\n\tvar obj;\n\tvar tmp;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all symbol properties...\n\tsymbols = [];\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( symbols, tmp[ i ] ) === false ) {\n\t\t\t\tsymbols.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default propertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport pushArray from './push_array.js';\nimport pushObject from './push_object.js';\nimport pushTypedArray from './push_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @param {...*} items - items to add\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {(Array|TypedArray|Object)} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( collection ) {\n\tvar items;\n\tvar i;\n\titems = [];\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\titems.push( arguments[ i+1 ] );\n\t}\n\tif ( isArray( collection ) ) {\n\t\treturn pushArray( collection, items );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn pushTypedArray( collection, items );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn pushObject( collection, items );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = push( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( arr, items ) {\n\tvar i;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tarr.push( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is followed by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {Array} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\ttotal = nbytes + ibytes + arr.byteOffset;\n\n\tif ( arr.buffer.byteLength < total ) {\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\tv = new arr.constructor( buf, 0, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i ] = arr[ i ];\n\t\t}\n\t} else {\n\t\tv = new arr.constructor( arr.buffer, arr.byteOffset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ len+i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {Array} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = push( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 1.0, '1': 2.0, '2': 3.0, '3': 4.0 }\n*/\nfunction push( obj, items ) {\n\tvar len;\n\tvar i;\n\tlen = obj.length;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tobj[ len+i ] = items[ i ];\n\t}\n\tobj.length = len + items.length;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/max';\nimport FLOAT32 from '@stdlib/constants/float32/max';\nimport FLOAT64 from '@stdlib/constants/float64/max';\n\n\n// MAIN //\n\n/**\n* Returns the maximum finite value capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} maximum finite value\n*\n* @example\n* var m = realmax( 'float64' );\n* // returns 1.7976931348623157e+308\n*\n* @example\n* var m = realmax( 'float16' );\n* // returns 65504.0\n*\n* @example\n* var m = realmax( 'float32' );\n* // returns 3.4028234663852886e+38\n*/\nfunction realmax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default realmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum single-precision floating-point number.\n*\n* @module @stdlib/constants/float32/max\n* @type {number}\n*\n* @example\n* import FLOAT32_MAX from '@stdlib/constants/float32/max';\n* // returns 3.4028234663852886e+38\n*/\n\n\n// MAIN //\n\n/**\n* Maximum single-precision floating-point number.\n*\n* ## Notes\n*\n* The maximum is given by\n*\n* ```tex\n* 2^{127} (2 - 2^{-23})\n* ```\n*\n* @constant\n* @type {number}\n* @default 3.4028234663852886e+38\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_MAX = 3.4028234663852886e+38;\n\n\n// EXPORTS //\n\nexport default FLOAT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum half-precision floating-point number.\n*\n* @module @stdlib/constants/float16/max\n* @type {number}\n*\n* @example\n* import FLOAT16_MAX from '@stdlib/constants/float16/max';\n* // returns 65504.0\n*/\n\n\n// MAIN //\n\n/**\n* The maximum half-precision floating-point number.\n*\n* ## Notes\n*\n* The maximum is given by\n*\n* ```tex\n* 2^{15} (2 - 2^{-10})\n* ```\n*\n* @constant\n* @type {number}\n* @default 65504.0\n* @see [half-precision floating-point form]{@link https://en.wikipedia.org/wiki/Half-precision_floating-point_format}\n*/\nvar FLOAT16_MAX = 65504.0;\n\n\n// EXPORTS //\n\nexport default FLOAT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/smallest-normal';\nimport FLOAT32 from '@stdlib/constants/float32/smallest-normal';\nimport FLOAT64 from '@stdlib/constants/float64/smallest-normal';\n\n\n// MAIN //\n\n/**\n* Returns the smallest positive normal value capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} smallest positive normal value\n*\n* @example\n* var m = realmin( 'float64' );\n* // returns 2.2250738585072014e-308\n*\n* @example\n* var m = realmin( 'float16' );\n* // returns 0.00006103515625\n*\n* @example\n* var m = realmin( 'float32' );\n* // returns 1.1754943508222875e-38\n*/\nfunction realmin( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default realmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive single-precision floating-point normal number.\n*\n* @module @stdlib/constants/float32/smallest-normal\n* @type {number}\n*\n* @example\n* import FLOAT32_SMALLEST_NORMAL from '@stdlib/constants/float32/smallest-normal';\n* // returns 1.1754943508222875e-38\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive single-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{127-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000001 00000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.1754943508222875e-38\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_SMALLEST_NORMAL = 1.1754943508222875e-38;\n\n\n// EXPORTS //\n\nexport default FLOAT32_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive half-precision floating-point normal number.\n*\n* @module @stdlib/constants/float16/smallest-normal\n* @type {number}\n*\n* @example\n* import FLOAT16_SMALLEST_NORMAL from '@stdlib/constants/float16/smallest-normal';\n* // returns 6.103515625e-5\n*/\n\n\n// MAIN //\n\n/**\n* Smallest positive half-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{15-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00001 0000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 6.103515625e-5\n* @see [Half-precision floating-point format]{@link https://en.wikipedia.org/wiki/Half-precision_floating-point_format}\n*/\nvar FLOAT16_SMALLEST_NORMAL = 6.103515625e-5;\n\n\n// EXPORTS //\n\nexport default FLOAT16_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = reduce( x, new Complex64( 0.0, 0.0 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 16.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction reduce( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn fcn.call( thisArg, initial, get( xbuf, ox ), 0, ref );\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, ix ), i, ref );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} reducer - reduction function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = reduce( arr, 0, sum );\n* // returns 10\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n*\n* var out = reduce( arr, 0, naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction reduce( arr, initial, reducer, thisArg ) {\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, reducer, thisArg );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default reduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum:\n* var out = reduce( x, 0, sum );\n* // returns 10\n*/\nfunction reduce( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = 0; i < xbuf.length; i++ ) {\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, i ), i, xbuf );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduce;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input ndarray meta data\n* @param {string} x.ref - reference to original input ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeInteger} x.length - number of elements\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @param {Array<Function>} x.accessors - accessors for accessing data buffer elements\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import realf from '@stdlib/complex/float32/real';\n* import imagf from '@stdlib/complex/float32/imag';\n* import cadd from '@stdlib/complex/float64/base/add';\n* import naryFunction from '@stdlib/utils/nary-function';\n*\n* // Create a data buffer:\n* var xbuf = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n*\n* // Define the shape of the input array:\n* var shape = [ 2, 2 ];\n*\n* // Define the array strides:\n* var sx = [ 2, 1 ];\n*\n* // Define the index offset:\n* var ox = 0;\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf.get( idx );\n* }\n*\n* // Create the input ndarray-like object:\n* var x = {\n*     'ref': null,\n*     'dtype': 'complex64',\n*     'data': xbuf,\n*     'length': 4,\n*     'shape': shape,\n*     'strides': sx,\n*     'offset': ox,\n*     'order': 'row-major',\n*     'accessors': [ getter ]\n* };\n* x.ref = x;\n*\n* // Compute the sum:\n* var v = reduceRight( x, new Complex64( 0.0, 0.0 ), naryFunction( cadd, 2 ) );\n*\n* var re = realf( v );\n* // returns 16.0\n*\n* var im = imagf( v );\n* // returns 20.0\n*/\nfunction reduceRight( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar ordx;\n\tvar acc;\n\tvar len;\n\tvar get;\n\tvar ref;\n\tvar shx;\n\tvar sx;\n\tvar ox;\n\tvar ix;\n\tvar i;\n\n\t// Cache the total number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Cache the input array shape:\n\tshx = x.shape;\n\n\t// Cache reference to the input ndarray data buffer:\n\txbuf = x.data;\n\n\t// Cache reference to the stride array:\n\tsx = x.strides;\n\n\t// Cache the index of the first indexed element:\n\tox = x.offset;\n\n\t// Cache the array order:\n\tordx = x.order;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Cache the reference to the original input array:\n\tref = x.ref;\n\n\t// Check for a zero-dimensional array...\n\tif ( shx.length === 0 ) {\n\t\treturn fcn.call( thisArg, initial, get( xbuf, ox ), 0, ref );\n\t}\n\t// Iterate over each element based on the linear **view** index, regardless as to how the data is stored in memory (note: this has negative performance implications for non-contiguous ndarrays due to a lack of data locality)...\n\tacc = initial;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tix = vind2bind( shx, sx, ox, ordx, i, MODE );\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, ix ), i, ref );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isndarrayLike from '@stdlib/assert/is-ndarray-like';\nimport isFunction from '@stdlib/assert/is-function';\nimport ndarraylike2object from '@stdlib/ndarray/base/ndarraylike2object';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\nimport ndarrayFcn from './ndarray.js';\nimport arrayFcn from './array.js';\n\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array while iterating from right to left and returns the accumulated result.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: array element.\n*     -   **index**: element index.\n*     -   **arr**: input array.\n*\n* @param {(ArrayLikeObject|ndarray)} arr - input array\n* @param {*} initial - initial value\n* @param {Function} reducer - reduction function\n* @param {*} [thisArg] - reduction function execution context\n* @throws {TypeError} first argument must be an array-like object or an ndarray\n* @throws {TypeError} third argument must be a function\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var out = reduceRight( arr, 0, sum );\n* // returns 10\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n* import array from '@stdlib/ndarray/array';\n*\n* var opts = {\n*     'dtype': 'generic'\n* };\n* var arr = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ], opts );\n*\n* var out = reduceRight( arr, 0, naryFunction( add, 2 ) );\n* // returns 21\n*/\nfunction reduceRight( arr, initial, reducer, thisArg ) {\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tif ( isndarrayLike( arr ) ) { // note: assertion order matters here, as an ndarray-like object is also array-like\n\t\treturn ndarrayFcn( ndarraylike2object( arr ), initial, reducer, thisArg ); // eslint-disable-line max-len\n\t}\n\tif ( isArrayLikeObject( arr ) ) {\n\t\treturn arrayFcn( arraylike2object( arr ), initial, reducer, thisArg );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.', arr ) );\n}\n\n\n// EXPORTS //\n\nexport default reduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function against an accumulator and each element in an array while iterating from right to left and returns the accumulated result.\n*\n* @private\n* @param {Object} x - object containing input array data\n* @param {ArrayLikeObject} x.data - input array data\n* @param {Array<Function>} x.accessors - input array accessors\n* @param {*} initial - initial value\n* @param {Function} fcn - function to apply\n* @param {*} thisArg - function execution context\n* @returns {*} accumulated result\n*\n* @example\n* function sum( acc, value ) {\n*     return acc + value;\n* }\n*\n* // Define a getter:\n* function getter( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* // Create the input array object:\n* var x = {\n*     'data': [ 1, 2, 3, 4 ],\n*     'accessors': [ getter ]\n* };\n*\n* // Compute the sum:\n* var out = reduceRight( x, 0, sum );\n* // returns 10\n*/\nfunction reduceRight( x, initial, fcn, thisArg ) {\n\tvar xbuf;\n\tvar get;\n\tvar acc;\n\tvar i;\n\n\t// Cache reference to the input data:\n\txbuf = x.data;\n\n\t// Cache the element accessor:\n\tget = x.accessors[ 0 ];\n\n\t// Iterate over each element...\n\tacc = initial;\n\tfor ( i = xbuf.length-1; i >= 0; i-- ) {\n\t\tacc = fcn.call( thisArg, acc, get( xbuf, i ), i, xbuf );\n\t}\n\treturn acc;\n}\n\n\n// EXPORTS //\n\nexport default reduceRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Reduces the number of dimensions by one of a two-dimensional nested array by applying a function against an accumulator and each element along the innermost dimension and returning the accumulation results as a one-dimensional array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<Collection>} arr - array of arrays\n* @param {ArrayLikeObject} initial - initial values\n* @param {Function} reducer - reduction function\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array of arrays\n* @throws {TypeError} second argument must be an array-like object\n* @throws {RangeError} second argument must have a length equal to the size of the outermost input array dimension\n* @throws {TypeError} third argument must be a function\n* @returns {Array} results\n*\n* @example\n* import naryFunction from '@stdlib/utils/nary-function';\n* import add from '@stdlib/number/float64/base/add';\n*\n* var arr = [\n*     [ 1, 2, 3 ],\n*     [ 4, 5, 6 ]\n* ];\n*\n* var out = reduce2d( arr, [ 0, 0 ], naryFunction( add, 2 ) );\n* // returns [ 6, 15 ]\n*/\nfunction reduce2d( arr, initial, reducer, thisArg ) {\n\tvar out;\n\tvar acc;\n\tvar M;\n\tvar N;\n\tvar a;\n\tvar i;\n\tvar j;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isArrayLikeObject( initial ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', initial ) );\n\t}\n\tif ( initial.length !== arr.length ) {\n\t\tthrow new RangeError( 'invalid argument. Second argument must have a length equal to the size of the outermost input array dimension.' );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', reducer ) );\n\t}\n\tM = arr.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( !isCollection( a ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object containing array-like objects. Index: `%u`. Value: `%s`.', i, a ) );\n\t\t}\n\t\tN = a.length;\n\t\tacc = initial[ i ];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tacc = reducer.call( thisArg, acc, a[ j ], [ i, j ], arr );\n\t\t}\n\t\tout.push( acc );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default reduce2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function according to a predicate function.\n*\n* ## Notes\n*\n-   The predicate function is provided the following arguments:\n*\n*     -   **value**: argument value.\n*     -   **index**: argument index.\n*\n* -   Only those arguments in which the predicate function returns a falsy value are applied to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} wrapped function\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* function predicate( v ) {\n*     return ( v === 2 );\n* }\n*\n* var bar = rejectArguments( foo, predicate );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction rejectArguments( fcn, predicate, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\treturn wrap;\n\n\t/**\n\t* Invokes a function according to a predicate function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction wrap() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( !predicate( v, i ) ) {\n\t\t\t\targs.push( v );\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default rejectArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isNonNegativeIntegerArray from '@stdlib/assert/is-nonnegative-integer-array';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that invokes a provided function with reordered arguments.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeIntegerArray} indices - argument indices\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be an array of nonnegative integers\n* @returns {Function} function with reordered arguments\n*\n* @example\n* function foo( a, b, c ) {\n*     return [ a, b, c ];\n* }\n*\n* var bar = reorderArguments( foo, [ 2, 0, 1 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 3, 1, 2 ]\n*/\nfunction reorderArguments( fcn, indices, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeIntegerArray( indices ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array containing only nonnegative integers. Value: `%s`.', indices ) );\n\t}\n\treturn reordered;\n\n\t/**\n\t* Invokes a function with reordered arguments.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @throws {Error} must provide expected number of input arguments\n\t* @returns {*} return value\n\t*/\n\tfunction reordered() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\tif ( len !== indices.length ) {\n\t\t\tthrow new Error( format( 'invalid invocation. Unexpected number of input arguments. Expected: `%u`. Actual: `%u`.', indices.length, len ) );\n\t\t}\n\t\targs = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs.push( arguments[ indices[i] ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default reorderArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function that invokes a provided function with arguments in reverse order.\n*\n* @param {Function} fcn - input function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @returns {Function} reverse arguments function\n*\n* @example\n* function foo( a, b, c ) {\n*     return [ a, b, c ];\n* }\n*\n* var bar = reverseArguments( foo );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 3, 2, 1 ]\n*/\nfunction reverseArguments( fcn, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\treturn reversed;\n\n\t/**\n\t* Invokes a function with arguments in reverse order.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction reversed() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ len-1-i ] = arguments[ i ];\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default reverseArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/max-safe-integer';\nimport FLOAT32 from '@stdlib/constants/float32/max-safe-integer';\nimport FLOAT64 from '@stdlib/constants/float64/max-safe-integer';\n\n\n// MAIN //\n\n/**\n* Returns the maximum safe integer capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {integer} maximum safe integer\n*\n* @example\n* var m = safeintmax( 'float64' );\n* // returns 9007199254740991\n*\n* @example\n* var m = safeintmax( 'float16' );\n* // returns 2047\n*\n* @example\n* var m = safeintmax( 'float32' );\n* // returns 16777215\n*/\nfunction safeintmax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default safeintmax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum safe single-precision floating-point integer.\n*\n* @module @stdlib/constants/float32/max-safe-integer\n* @type {number}\n*\n* @example\n* import FLOAT32_MAX_SAFE_INTEGER from '@stdlib/constants/float32/max-safe-integer';\n* // returns 16777215\n*/\n\n\n// MAIN //\n\n/**\n* Maximum safe single-precision floating-point integer.\n*\n* ## Notes\n*\n* The maximum safe integer is given by\n*\n* ```tex\n* 2^{24} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 16777215\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_MAX_SAFE_INTEGER = 16777215;\n\n\n// EXPORTS //\n\nexport default FLOAT32_MAX_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum safe half-precision floating-point integer.\n*\n* @module @stdlib/constants/float16/max-safe-integer\n* @type {number}\n*\n* @example\n* import FLOAT16_MAX_SAFE_INTEGER from '@stdlib/constants/float16/max-safe-integer';\n* // returns 2047\n*/\n\n\n// MAIN //\n\n/**\n* The maximum safe half-precision floating-point integer.\n*\n* ## Notes\n*\n* The maximum is equal to\n*\n* ```tex\n* 2^{11} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 2047\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [Half-precision floating-point format]{@link https://en.wikipedia.org/wiki/Half-precision_floating-point_format}\n*/\nvar FLOAT16_MAX_SAFE_INTEGER = 2047;\n\n\n// EXPORTS //\n\nexport default FLOAT16_MAX_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport FLOAT16 from '@stdlib/constants/float16/min-safe-integer';\nimport FLOAT32 from '@stdlib/constants/float32/min-safe-integer';\nimport FLOAT64 from '@stdlib/constants/float64/min-safe-integer';\n\n\n// MAIN //\n\n/**\n* Returns the minimum safe integer capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {integer} minimum safe integer\n*\n* @example\n* var m = safeintmin( 'float64' );\n* // returns -9007199254740991\n*\n* @example\n* var m = safeintmin( 'float16' );\n* // returns -2047\n*\n* @example\n* var m = safeintmin( 'float32' );\n* // returns -16777215\n*/\nfunction safeintmin( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default safeintmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum safe double-precision floating-point integer.\n*\n* @module @stdlib/constants/float64/min-safe-integer\n* @type {number}\n*\n* @example\n* import FLOAT64_MIN_SAFE_INTEGER from '@stdlib/constants/float64/min-safe-integer';\n* // returns -9007199254740991\n*/\n\n\n// MAIN //\n\n/**\n* Minimum safe double-precision floating-point integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{53} - 1)\n* ```\n*\n* @constant\n* @type {number}\n* @default -9007199254740991\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_SAFE_INTEGER = -9007199254740991;\n\n\n// EXPORTS //\n\nexport default FLOAT64_MIN_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum safe single-precision floating-point integer.\n*\n* @module @stdlib/constants/float32/min-safe-integer\n* @type {number}\n*\n* @example\n* import FLOAT32_MIN_SAFE_INTEGER from '@stdlib/constants/float32/min-safe-integer';\n* // returns -16777215\n*/\n\n\n// MAIN //\n\n/**\n* Minimum safe single-precision floating-point integer.\n*\n* ## Notes\n*\n* The minimum safe integer is given by\n*\n* ```tex\n* -(2^{24} - 1)\n* ```\n*\n* @constant\n* @type {number}\n* @default -16777215\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_MIN_SAFE_INTEGER = -16777215;\n\n\n// EXPORTS //\n\nexport default FLOAT32_MIN_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum safe half-precision floating-point integer.\n*\n* @module @stdlib/constants/float16/min-safe-integer\n* @type {number}\n*\n* @example\n* import FLOAT16_MIN_SAFE_INTEGER from '@stdlib/constants/float16/min-safe-integer';\n* // returns -2047\n*/\n\n\n// MAIN //\n\n/**\n* The minimum safe half-precision floating-point integer.\n*\n* ## Notes\n*\n* The minimum is equal to\n*\n* ```tex\n* -(2^{11} - 1)\n* ```\n*\n* @constant\n* @type {number}\n* @default -2047\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [Half-precision floating-point format]{@link https://en.wikipedia.org/wiki/Half-precision_floating-point_format}\n*/\nvar FLOAT16_MIN_SAFE_INTEGER = -2047;\n\n\n// EXPORTS //\n\nexport default FLOAT16_MIN_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport shiftObject from './shift_object.js';\nimport shiftTypedArray from './shift_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Removes and returns the first element of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {Array} updated collection and the removed element\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = shift( arr );\n* // returns [ [ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = shift( arr );\n* // returns [ <Float64Array>[ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*/\nfunction shift( collection ) {\n\tvar v;\n\tif ( isArray( collection ) ) {\n\t\tv = collection.shift();\n\t\treturn [ collection, v ];\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn shiftTypedArray( collection );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn shiftObject( collection );\n\t}\n\tthrow new TypeError( format( 'invalid argument. Must provide either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default shift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the first element of a typed array.\n*\n* @private\n* @param {TypedArray} arr - input array\n* @returns {Array} input array and the removed element\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = shift( arr );\n* // returns [ <Float64Array>[ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*/\nfunction shift( arr ) {\n\tvar offset;\n\tvar view;\n\tvar v;\n\tif ( arr.length === 0 ) {\n\t\treturn [ arr, void 0 ];\n\t}\n\tv = arr[ 0 ];\n\toffset = arr.byteOffset + arr.BYTES_PER_ELEMENT;\n\tview = new arr.constructor( arr.buffer, offset, arr.length-1 );\n\treturn [ view, v ];\n}\n\n\n// EXPORTS //\n\nexport default shift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the first element of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @returns {Array} input object and the removed element\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* var out = shift( obj );\n* // returns [ { 'length': 1, '0': 2.0 }, 1.0 ]\n*/\nfunction shift( obj ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tif ( obj.length === 0 ) {\n\t\treturn [ obj, void 0 ];\n\t}\n\tlen = obj.length - 1;\n\tv = obj[ 0 ];\n\n\t// Shift all elements down...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tobj[ i ] = obj[ i+1 ];\n\t}\n\tdelete obj[ len ];\n\tobj.length = len;\n\treturn [ obj, v ];\n}\n\n\n// EXPORTS //\n\nexport default shift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport INT8 from '@stdlib/constants/int8/num-bytes';\nimport UINT8 from '@stdlib/constants/uint8/num-bytes';\nimport INT16 from '@stdlib/constants/int16/num-bytes';\nimport UINT16 from '@stdlib/constants/uint16/num-bytes';\nimport INT32 from '@stdlib/constants/int32/num-bytes';\nimport UINT32 from '@stdlib/constants/uint32/num-bytes';\nimport FLOAT16 from '@stdlib/constants/float16/num-bytes';\nimport FLOAT32 from '@stdlib/constants/float32/num-bytes';\nimport FLOAT64 from '@stdlib/constants/float64/num-bytes';\nimport COMPLEX64 from '@stdlib/constants/complex64/num-bytes';\nimport COMPLEX128 from '@stdlib/constants/complex128/num-bytes';\n\n\n// MAIN //\n\n/**\n* Returns the size (in bytes) of the canonical binary representation of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {integer} size in bytes\n*\n* @example\n* var s = sizeOf( 'int8' );\n* // returns 1\n*\n* @example\n* var s = sizeOf( 'uint8' );\n* // returns 1\n*\n* @example\n* var s = sizeOf( 'int16' );\n* // returns 2\n*/\nfunction sizeOf( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'uint32':\n\t\treturn UINT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'uint8':\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn UINT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'uint16':\n\t\treturn UINT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tcase 'complex128':\n\t\treturn COMPLEX128;\n\tcase 'complex64':\n\t\treturn COMPLEX64;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default sizeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Size (in bytes) of a 64-bit complex number.\n*\n* @module @stdlib/constants/complex64/num-bytes\n* @type {integer32}\n*\n* @example\n* import COMPLEX64_NUM_BYTES from '@stdlib/constants/complex64/num-bytes';\n* // returns 8\n*/\n\n\n// MAIN //\n\n/**\n* Size (in bytes) of a 64-bit complex number.\n*\n* @constant\n* @type {integer32}\n* @default 8\n*/\nvar COMPLEX64_NUM_BYTES = 8|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default COMPLEX64_NUM_BYTES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Size (in bytes) of a single-precision floating-point number.\n*\n* @module @stdlib/constants/float32/num-bytes\n* @type {integer32}\n*\n* @example\n* import FLOAT32_NUM_BYTES from '@stdlib/constants/float32/num-bytes';\n* // returns 4\n*/\n\n\n// MAIN //\n\n/**\n* Size (in bytes) of a single-precision floating-point number.\n*\n* @constant\n* @type {integer32}\n* @default 4\n*/\nvar FLOAT32_NUM_BYTES = 4|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT32_NUM_BYTES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Size (in bytes) of an 8-bit unsigned integer.\n*\n* @module @stdlib/constants/uint8/num-bytes\n* @type {integer32}\n*\n* @example\n* import UINT8_NUM_BYTES from '@stdlib/constants/uint8/num-bytes';\n* // returns 1\n*/\n\n\n// MAIN //\n\n/**\n* Size (in bytes) of an 8-bit unsigned integer.\n*\n* @constant\n* @type {integer32}\n* @default 1\n*/\nvar UINT8_NUM_BYTES = 1|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UINT8_NUM_BYTES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Size (in bytes) of a half-precision floating-point number.\n*\n* @module @stdlib/constants/float16/num-bytes\n* @type {integer32}\n*\n* @example\n* import FLOAT16_NUM_BYTES from '@stdlib/constants/float16/num-bytes';\n* // returns 2\n*/\n\n\n// MAIN //\n\n/**\n* Size (in bytes) of a half-precision floating-point number.\n*\n* @constant\n* @type {integer32}\n* @default 2\n*/\nvar FLOAT16_NUM_BYTES = 2|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT16_NUM_BYTES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Size (in bytes) of a 128-bit complex number.\n*\n* @module @stdlib/constants/complex128/num-bytes\n* @type {integer32}\n*\n* @example\n* import COMPLEX128_NUM_BYTES from '@stdlib/constants/complex128/num-bytes';\n* // returns 16\n*/\n\n\n// MAIN //\n\n/**\n* Size (in bytes) of a 128-bit complex number.\n*\n* @constant\n* @type {integer32}\n* @default 16\n*/\nvar COMPLEX128_NUM_BYTES = 16|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default COMPLEX128_NUM_BYTES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which are truthy.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which are truthy\n*\n* @example\n* var arr = [ 0, 0, 1, 2, 3 ];\n*\n* var bool = some( arr, 3 );\n* // returns true\n*/\nfunction some( collection, n ) {\n\tvar count;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( collection[ i ] ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default some;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which pass a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ 1, 2, -3, 4, -1 ];\n*\n* var bool = someBy( arr, 2, isNegative );\n* // returns true\n*/\nfunction someBy( collection, n, predicate, thisArg ) {\n\tvar count;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default someBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which pass a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ -1, 1, -2, 3, 4 ];\n*\n* var bool = someByRight( arr, 2, isNegative );\n* // returns true\n*/\nfunction someByRight( collection, n, predicate, thisArg ) {\n\tvar count;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default someByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Generates a frequency table.\n*\n* ## Notes\n*\n* -   The output is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Collection} collection - input collection\n* @throws {TypeError} first argument must be a collection\n* @returns {(Array<Array>|Array)} frequency table\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'beep' ];\n*\n* var out = tabulate( arr );\n* // returns [ [ 'beep', 2, 0.5 ], [ 'boop', 1, 0.25 ], [ 'foo', 1, 0.25 ] ]\n*/\nfunction tabulate( collection ) {\n\tvar count;\n\tvar tmp;\n\tvar len;\n\tvar out;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tcount = 0;\n\ttmp = [];\n\tout = [];\n\n\t// For each collection element, determine if we've seen the element before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = collection[ i ];\n\t\tcount += 1;\n\t\tj = indexOf( tmp, v );\n\t\tif ( j === -1 ) {\n\t\t\ttmp.push( v );\n\t\t\tout.push( [ v, 1, 0 ] );\n\t\t} else {\n\t\t\tout[ j ][ 1 ] += 1;\n\t\t}\n\t}\n\t// Compute percentages...\n\tlen = out.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default tabulate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport indexOf from './../../index-of';\nimport format from '@stdlib/string/format';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Generates a frequency table according to a provided function.\n*\n* ## Notes\n*\n* -   The output is an array of arrays. Each sub-array corresponds to a unique value in the input collection and is structured as follows:\n*\n*     -   0: unique value\n*     -   1: value count\n*     -   2: frequency percentage\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {*} [options.thisArg] - execution context\n* @param {Function} indicator - function whose return values are used to populate the output frequency table\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} must provide valid options\n* @returns {(Array<Array>|Array)} frequency table\n*\n* @example\n* function indicator( value ) {\n*     return value[ 0 ];\n* }\n*\n* var arr = [ 'beep', 'boop', 'foo', 'beep' ];\n*\n* var out = tabulateBy( arr, indicator );\n* // returns [ [ 'b', 3, 0.75 ], [ 'f', 1, 0.25 ] ]\n*/\nfunction tabulateBy( collection, options, indicator ) {\n\tvar thisArg;\n\tvar count;\n\tvar opts;\n\tvar tmp;\n\tvar len;\n\tvar out;\n\tvar err;\n\tvar cb;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {};\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tcb = indicator;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tthisArg = opts.thisArg;\n\tcount = 0;\n\ttmp = [];\n\tout = [];\n\n\t// For each collection element, determine if we've seen the element before. If not, cache a reference which points to its location in the output array; otherwise, update the running count.\n\tlen = collection.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = cb.call( thisArg, collection[ i ], i );\n\t\tcount += 1;\n\t\tj = indexOf( tmp, v );\n\t\tif ( j === -1 ) {\n\t\t\ttmp.push( v );\n\t\t\tout.push( [ v, 1, 0 ] );\n\t\t} else {\n\t\t\tout[ j ][ 1 ] += 1;\n\t\t}\n\t}\n\t// Compute percentages...\n\tlen = out.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ][ 2 ] = out[ i ][ 1 ] / count;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default tabulateBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {*} [options.thisArg] - execution context\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'thisArg': {}\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'thisArg' ) ) {\n\t\topts.thisArg = options.thisArg;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setNonEnumerableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Object} y - output array object\n* @param {Collection} y.data - output array data\n* @param {Array<Function>} y.accessors - array element accessors\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Object} output array object\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32/ctor';\n* import reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\n*\n* function setter( data, idx, value ) {\n*     data.set( value, idx );\n* }\n*\n* function getter( data, idx ) {\n*     return data.get( idx );\n* }\n*\n* var x = {\n*     'data': new Complex64Array( [ 1.0, 2.0, 3.0, 4.0 ] ),\n*     'accessors': [ getter, setter ]\n* };\n*\n* var y = {\n*     'data': new Complex64Array( [ 5.0, 6.0, 7.0, 8.0 ] ),\n*     'accessors': [ getter, setter ]\n* };\n*\n* gcopy( x.data.length, x, 1, 0, y, 1, 0 );\n*\n* var view = reinterpret64( y.data, 0 );\n* // view => <Float32Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar set;\n\tvar get;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache references to array data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache a reference to the element accessors:\n\tget = x.accessors[ 0 ];\n\tset = y.accessors[ 1 ];\n\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tset( ybuf, iy, get( xbuf, ix ) );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nexport default gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport accessors from './accessors.js';\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Collection} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, y, strideY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessorProtocol || oy.accessorProtocol ) {\n\t\tif ( strideX < 0 ) {\n\t\t\tix = (1-N) * strideX;\n\t\t} else {\n\t\t\tix = 0;\n\t\t}\n\t\tif ( strideY < 0 ) {\n\t\t\tiy = (1-N) * strideY;\n\t\t} else {\n\t\t\tiy = 0;\n\t\t}\n\t\taccessors( N, ox, strideX, ix, oy, strideY, iy );\n\t\treturn oy.data;\n\t}\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ i ] = x[ i ];\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ i ] = x[ i ];\n\t\t\ty[ i+1 ] = x[ i+1 ];\n\t\t\ty[ i+2 ] = x[ i+2 ];\n\t\t\ty[ i+3 ] = x[ i+3 ];\n\t\t\ty[ i+4 ] = x[ i+4 ];\n\t\t\ty[ i+5 ] = x[ i+5 ];\n\t\t\ty[ i+6 ] = x[ i+6 ];\n\t\t\ty[ i+7 ] = x[ i+7 ];\n\t\t}\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to copy values from `x` into `y`.\n*\n* @module @stdlib/blas/base/gcopy\n*\n* @example\n* import gcopy from '@stdlib/blas/base/gcopy';\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* import gcopy from '@stdlib/blas/base/gcopy';\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy.ndarray( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport accessors from './accessors.js';\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Collection} y - output array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessorProtocol || oy.accessorProtocol ) {\n\t\taccessors( N, ox, strideX, offsetX, oy, strideY, offsetY );\n\t\treturn oy.data;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ iy ] = x[ ix ];\n\t\t\t\tix += strideX;\n\t\t\t\tiy += strideY;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ iy ] = x[ ix ];\n\t\t\ty[ iy+1 ] = x[ ix+1 ];\n\t\t\ty[ iy+2 ] = x[ ix+2 ];\n\t\t\ty[ iy+3 ] = x[ ix+3 ];\n\t\t\ty[ iy+4 ] = x[ ix+4 ];\n\t\t\ty[ iy+5 ] = x[ ix+5 ];\n\t\t\ty[ iy+6 ] = x[ ix+6 ];\n\t\t\ty[ iy+7 ] = x[ ix+7 ];\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn y;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport hasFunctionNameSupport from '@stdlib/assert/has-function-name-support';\nimport format from '@stdlib/string/format';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\n\n\n// VARIABLES //\n\nvar isFunctionNameSupported = hasFunctionNameSupport();\n\n\n// MAIN //\n\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/\nfunction functionName( fcn ) {\n\t// TODO: add support for generator functions?\n\tif ( isFunction( fcn ) === false ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( isFunctionNameSupported ) {\n\t\treturn fcn.name;\n\t}\n\treturn RE.exec( fcn.toString() )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default functionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array/int8';\nimport Uint8Array from '@stdlib/array/uint8';\nimport Uint8ClampedArray from '@stdlib/array/uint8c';\nimport Int16Array from '@stdlib/array/int16';\nimport Uint16Array from '@stdlib/array/uint16';\nimport Int32Array from '@stdlib/array/int32';\nimport Uint32Array from '@stdlib/array/uint32';\nimport Float32Array from '@stdlib/array/float32';\nimport Float64Array from '@stdlib/array/float64';\n\n\n// MAIN //\n\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils/constructor-name';\nimport fcnName from '@stdlib/utils/function-name';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport hasFloat64ArraySupport from './../../has-float64array-support';\nimport Float64Array from '@stdlib/array/float64';\nimport CTORS from './ctors.js';\nimport NAMES from './names.json';\n\n\n// VARIABLES //\n\n// Abstract `TypedArray` class:\nvar TypedArray = ( hasFloat64ArraySupport() ) ? getPrototypeOf( Float64Array ) : Dummy; // eslint-disable-line max-len\n\n// Ensure abstract typed array class has expected name:\nTypedArray = ( fcnName( TypedArray ) === 'TypedArray' ) ? TypedArray : Dummy;\n\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Dummy() {} // eslint-disable-line no-empty-function\n\n\n// MAIN //\n\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\nfunction isTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for the abstract class...\n\tif ( value instanceof TypedArray ) {\n\t\treturn true;\n\t}\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex64Array from '@stdlib/array/complex64';\nimport Complex128Array from '@stdlib/array/complex128';\n\n\n// MAIN //\n\nvar CTORS = [\n\tComplex128Array,\n\tComplex64Array\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Tests whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @param {*} value - value to test\n* @param {Function} constructor - constructor to test against\n* @throws {TypeError} constructor must be callable\n* @returns {boolean} boolean indicating whether a value is an instance of a provided constructor\n*\n* @example\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* @example\n* var bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* @example\n* var bool = instanceOf( 'beep', String );\n* // returns false\n*\n* @example\n* var bool = instanceOf( null, Object );\n* // returns false\n*\n* @example\n* var bool = instanceOf( 5, Object );\n* // returns false\n*/\nfunction instanceOf( value, constructor ) {\n\t// TODO: replace with `isCallable` check\n\tif ( typeof constructor !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be callable. Value: `%s`.', constructor ) );\n\t}\n\treturn ( value instanceof constructor );\n}\n\n\n// EXPORTS //\n\nexport default instanceOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from './../../int8';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Int16Array from './../../int16';\nimport Uint16Array from './../../uint16';\nimport Int32Array from './../../int32';\nimport Uint32Array from './../../uint32';\nimport Float32Array from './../../float32';\nimport Float64Array from './../../float64';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\nimport BooleanArray from './../../bool';\n\n\n// MAIN //\n\nvar CTORS = [\n\t[ Float64Array, 'Float64Array' ],\n\t[ Float32Array, 'Float32Array' ],\n\t[ Int32Array, 'Int32Array' ],\n\t[ Uint32Array, 'Uint32Array' ],\n\t[ Int16Array, 'Int16Array' ],\n\t[ Uint16Array, 'Uint16Array' ],\n\t[ Int8Array, 'Int8Array' ],\n\t[ Uint8Array, 'Uint8Array' ],\n\t[ Uint8ClampedArray, 'Uint8ClampedArray' ],\n\t[ Complex64Array, 'Complex64Array' ],\n\t[ Complex128Array, 'Complex128Array' ],\n\t[ BooleanArray, 'BooleanArray' ]\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport instanceOf from '@stdlib/assert/instance-of';\nimport ctorName from '@stdlib/utils/constructor-name';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport CTORS from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/\nfunction typeName( arr ) {\n\tvar v;\n\tvar i;\n\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( arr, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( arr ) {\n\t\tv = ctorName( arr );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\tarr = getPrototypeOf( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isTypedArray from '@stdlib/assert/is-typed-array';\nimport isComplexTypedArray from '@stdlib/assert/is-complex-typed-array';\nimport isBooleanArray from '@stdlib/assert/is-booleanarray';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpretBoolean from '@stdlib/strided/base/reinterpret-boolean';\nimport format from '@stdlib/string/format';\nimport typeName from './type.js';\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = typedarray2json( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\nfunction typedarray2json( arr ) {\n\tvar data;\n\tvar out;\n\tvar i;\n\n\tif ( isTypedArray( arr ) ) {\n\t\tdata = arr;\n\t} else if ( isComplexTypedArray( arr ) ) {\n\t\tif ( arr.BYTES_PER_ELEMENT === 8 ) {\n\t\t\tdata = reinterpret64( arr, 0 );\n\t\t} else { // arr.BYTES_PER_ELEMENT === 16\n\t\t\tdata = reinterpret128( arr, 0 );\n\t\t}\n\t} else if ( isBooleanArray( arr ) ) {\n\t\tdata = reinterpretBoolean( arr, 0 );\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a typed array. Value: `%s`.', arr ) );\n\t}\n\tout = {\n\t\t'type': typeName( arr ),\n\t\t'data': []\n\t};\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tout.data.push( data[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default typedarray2json;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport BooleanArray from '@stdlib/array/bool';\nimport constructorName from '@stdlib/utils/constructor-name';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a BooleanArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a BooleanArray\n*\n* @example\n* import BooleanArray from '@stdlib/array/bool';\n*\n* var bool = isBooleanArray( new BooleanArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isBooleanArray( [] );\n* // returns false\n*/\nfunction isBooleanArray( value ) {\n\treturn (\n\t\tvalue instanceof BooleanArray ||\n\t\tconstructorName( value ) === 'BooleanArray'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBooleanArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils/constructor-name';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport CTORS from './ctors.js';\nimport NAMES from './names.json';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/\nfunction isComplexTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for complex typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isComplexTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math/base/assert/is-nan';\n\n\n// VARIABLES //\n\nvar NUM_WARMUPS = 8;\n\n\n// MAIN //\n\n/**\n* Initializes a shuffle table.\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {Int32Array} table - table\n* @param {PositiveInteger} N - table size\n* @throws {Error} PRNG returned `NaN`\n* @returns {NumberArray} shuffle table\n*/\nfunction createTable( rand, table, N ) {\n\tvar v;\n\tvar i;\n\n\t// \"warm-up\" the PRNG...\n\tfor ( i = 0; i < NUM_WARMUPS; i++ ) {\n\t\tv = rand();\n\n\t\t// Prevent the above loop from being discarded by the compiler...\n\t\tif ( isnan( v ) ) {\n\t\t\tthrow new Error( 'unexpected error. PRNG returned NaN.' );\n\t\t}\n\t}\n\t// Initialize the shuffle table...\n\tfor ( i = N-1; i >= 0; i-- ) {\n\t\ttable[ i ] = rand();\n\t}\n\treturn table;\n}\n\n\n// EXPORTS //\n\nexport default createTable;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport INT32_MAX from '@stdlib/constants/int32/max';\nimport floor from '@stdlib/math/base/special/floor';\n\n\n// VARIABLES //\n\nvar MAX = INT32_MAX - 1;\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom integer on the interval \\\\([1, 2^{31}-1)\\\\).\n*\n* @private\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = randint32();\n* // returns <number>\n*/\nfunction randint32() {\n\tvar v = floor( 1.0 + (MAX*Math.random()) ); // eslint-disable-line stdlib/no-builtin-math\n\treturn v|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default randint32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport setReadWriteAccessor from '@stdlib/utils/define-nonenumerable-read-write-accessor';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport isInt32Array from '@stdlib/assert/is-int32array';\nimport gcopy from '@stdlib/blas/base/gcopy';\nimport floor from '@stdlib/math/base/special/floor';\nimport Int32Array from '@stdlib/array/int32';\nimport INT32_MAX from '@stdlib/constants/int32/max';\nimport typedarray2json from '@stdlib/array/to-json';\nimport format from '@stdlib/string/format';\nimport createTable from './create_table.js';\nimport randint32 from './rand_int32.js';\n\n\n// VARIABLES //\n\nvar NORMALIZATION_CONSTANT = (INT32_MAX - 1)|0; // asm type annotation\nvar MAX_SEED = (INT32_MAX - 1)|0; // asm type annotation\nvar A = 16807|0; // asm type annotation\n\n// Define the number of elements in the shuffle table:\nvar TABLE_LENGTH = 32;\n\n// Define the state array schema version:\nvar STATE_ARRAY_VERSION = 1; // NOTE: anytime the state array schema changes, this value should be incremented!!!\n\n// Define the number of sections in the state array:\nvar NUM_STATE_SECTIONS = 3; // table, other, seed\n\n// Define the index offset of the \"table\" section in the state array:\nvar TABLE_SECTION_OFFSET = 2; // | version | num_sections | table_length | ...table | other_length | shuffle_state | prng_state | seed_length | ...seed |\n\n// Define the index offset of the \"state\" section in the state array:\nvar STATE_SECTION_OFFSET = TABLE_LENGTH + 3; // | version | num_sections | table_length | ...table | state_length | shuffle_state | prng_state | seed_length | ...seed |\n\n// Define the index offset of the seed section in the state array:\nvar SEED_SECTION_OFFSET = TABLE_LENGTH + 6; // | version | num_sections | table_length | ...table | state_length | shuffle_state | prng_state | seed_length | ...seed |\n\n// Define the length of the \"fixed\" length portion of the state array:\nvar STATE_FIXED_LENGTH = TABLE_LENGTH + 7; // 1 (version) + 1 (num_sections) + 1 (table_length) + TABLE_LENGTH (table) + 1 (state_length) + 1 (shuffle_state) + 1 (prng_state) + 1 (seed_length)\n\n// Define the indices for the shuffle table and PRNG states:\nvar SHUFFLE_STATE = STATE_SECTION_OFFSET + 1;\nvar PRNG_STATE = STATE_SECTION_OFFSET + 2;\n\n\n// FUNCTIONS //\n\n/**\n* Verifies state array integrity.\n*\n* @private\n* @param {Int32Array} state - state array\n* @param {boolean} FLG - flag indicating whether the state array was provided as an option (true) or an argument (false)\n* @returns {(Error|null)} an error or `null`\n*/\nfunction verifyState( state, FLG ) {\n\tvar s1;\n\tif ( FLG ) {\n\t\ts1 = 'option';\n\t} else {\n\t\ts1 = 'argument';\n\t}\n\t// The state array must have a minimum length...\n\tif ( state.length < STATE_FIXED_LENGTH+1 ) {\n\t\treturn new RangeError( format( 'invalid %s. State array has insufficient length.', s1 ) );\n\t}\n\t// The first element of the state array must equal the supported state array schema version...\n\tif ( state[ 0 ] !== STATE_ARRAY_VERSION ) {\n\t\treturn new RangeError( format( 'invalid %s. State array has an incompatible schema version. Expected: `%s`. Actual: `%s`.', s1, STATE_ARRAY_VERSION, state[ 0 ] ) );\n\t}\n\t// The second element of the state array must contain the number of sections...\n\tif ( state[ 1 ] !== NUM_STATE_SECTIONS ) {\n\t\treturn new RangeError( format( 'invalid %s. State array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.', s1, NUM_STATE_SECTIONS, state[ 1 ] ) );\n\t}\n\t// The length of the \"table\" section must equal `TABLE_LENGTH`...\n\tif ( state[ TABLE_SECTION_OFFSET ] !== TABLE_LENGTH ) {\n\t\treturn new RangeError( format( 'invalid %s. State array has an incompatible table length. Expected: `%s`. Actual: `%s`.', s1, TABLE_LENGTH, state[ TABLE_SECTION_OFFSET ] ) );\n\t}\n\t// The length of the \"state\" section must equal `2`...\n\tif ( state[ STATE_SECTION_OFFSET ] !== 2 ) {\n\t\treturn new RangeError( format( 'invalid %s. State array has an incompatible state length. Expected: `%u`. Actual: `%u`.', s1, 2, state[ STATE_SECTION_OFFSET ] ) );\n\t}\n\t// The length of the \"seed\" section much match the empirical length...\n\tif ( state[ SEED_SECTION_OFFSET ] !== state.length-STATE_FIXED_LENGTH ) {\n\t\treturn new RangeError( format( 'invalid %s. State array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.', s1, state.length-STATE_FIXED_LENGTH, state[ SEED_SECTION_OFFSET ] ) );\n\t}\n\treturn null;\n}\n\n\n// MAIN //\n\n/**\n* Returns a linear congruential pseudorandom number generator (LCG) whose output is shuffled.\n*\n* @param {Options} [options] - options\n* @param {PRNGSeedMINSTD} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMINSTD} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} a seed must be either a positive integer less than the maximum signed 32-bit integer or an array-like object containing integers less than the maximum signed 32-bit integer\n* @throws {RangeError} a numeric seed must be a positive integer less than the maximum signed 32-bit integer\n* @throws {TypeError} state must be an `Int32Array`\n* @throws {Error} must provide a valid state\n* @throws {TypeError} `copy` option must be a boolean\n* @returns {PRNG} shuffled LCG PRNG\n*\n* @example\n* var minstd = factory();\n*\n* var v = minstd();\n* // returns <number>\n*\n* @example\n* // Return a seeded LCG:\n* var minstd = factory({\n*     'seed': 1234\n* });\n*\n* var v = minstd();\n* // returns 1421600654\n*/\nfunction factory( options ) {\n\tvar STATE;\n\tvar state;\n\tvar opts;\n\tvar seed;\n\tvar slen;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'copy', options.copy ) );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'state' ) ) {\n\t\t\tstate = options.state;\n\t\t\topts.state = true;\n\t\t\tif ( !isInt32Array( state ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be an Int32Array. Option: `%s`.', 'state', state ) );\n\t\t\t}\n\t\t\terr = verifyState( state, true );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tif ( opts.copy === false ) {\n\t\t\t\tSTATE = state;\n\t\t\t} else {\n\t\t\t\tSTATE = new Int32Array( state.length );\n\t\t\t\tgcopy( state.length, state, 1, STATE, 1 );\n\t\t\t}\n\t\t\t// Create a state (table) \"view\":\n\t\t\tstate = new Int32Array( STATE.buffer, STATE.byteOffset+((TABLE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), TABLE_LENGTH );\n\n\t\t\t// Create a seed \"view\":\n\t\t\tseed = new Int32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), state[ SEED_SECTION_OFFSET ] );\n\t\t}\n\t\t// If provided a PRNG state, we ignore the `seed` option...\n\t\tif ( seed === void 0 ) {\n\t\t\tif ( hasOwnProp( options, 'seed' ) ) {\n\t\t\t\tseed = options.seed;\n\t\t\t\topts.seed = true;\n\t\t\t\tif ( isPositiveInteger( seed ) ) {\n\t\t\t\t\tif ( seed > MAX_SEED ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a positive integer less than the maximum signed 32-bit integer. Option: `%u`.', 'seed', seed ) );\n\t\t\t\t\t}\n\t\t\t\t\tseed |= 0; // asm type annotation\n\t\t\t\t} else if ( isCollection( seed ) && seed.length > 0 ) {\n\t\t\t\t\tslen = seed.length;\n\t\t\t\t\tSTATE = new Int32Array( STATE_FIXED_LENGTH+slen );\n\n\t\t\t\t\t// Initialize sections:\n\t\t\t\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\t\t\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\t\t\t\tSTATE[ TABLE_SECTION_OFFSET ] = TABLE_LENGTH;\n\t\t\t\t\tSTATE[ STATE_SECTION_OFFSET ] = 2;\n\t\t\t\t\tSTATE[ PRNG_STATE ] = seed[ 0 ];\n\t\t\t\t\tSTATE[ SEED_SECTION_OFFSET ] = slen;\n\n\t\t\t\t\t// Copy the provided seed array to prevent external mutation, as mutation would lead to an inability to reproduce PRNG values according to the PRNG's stated seed:\n\t\t\t\t\tgcopy.ndarray( slen, seed, 1, 0, STATE, 1, SEED_SECTION_OFFSET+1 );\n\n\t\t\t\t\t// Create a state (table) \"view\":\n\t\t\t\t\tstate = new Int32Array( STATE.buffer, STATE.byteOffset+((TABLE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), TABLE_LENGTH );\n\n\t\t\t\t\t// Create a seed \"view\":\n\t\t\t\t\tseed = new Int32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), slen );\n\n\t\t\t\t\t// Initialize the internal PRNG state:\n\t\t\t\t\tstate = createTable( minstd, state, TABLE_LENGTH );\n\t\t\t\t\tSTATE[ SHUFFLE_STATE ] = state[ 0 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either a positive integer less than the maximum signed 32-bit integer or an array-like object containing integer values less than the maximum signed 32-bit integer. Option: `%s`.', 'seed', seed ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tseed = randint32()|0; // asm type annotation\n\t\t\t}\n\t\t}\n\t} else {\n\t\tseed = randint32()|0; // asm type annotation\n\t}\n\tif ( state === void 0 ) {\n\t\tSTATE = new Int32Array( STATE_FIXED_LENGTH+1 );\n\n\t\t// Initialize sections:\n\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\tSTATE[ TABLE_SECTION_OFFSET ] = TABLE_LENGTH;\n\t\tSTATE[ STATE_SECTION_OFFSET ] = 2;\n\t\tSTATE[ PRNG_STATE ] = seed;\n\t\tSTATE[ SEED_SECTION_OFFSET ] = 1;\n\t\tSTATE[ SEED_SECTION_OFFSET+1 ] = seed;\n\n\t\t// Create a state (table) \"view\":\n\t\tstate = new Int32Array( STATE.buffer, STATE.byteOffset+((TABLE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), TABLE_LENGTH );\n\n\t\t// Create a seed \"view\":\n\t\tseed = new Int32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), 1 );\n\n\t\t// Initialize the internal PRNG state:\n\t\tstate = createTable( minstd, state, TABLE_LENGTH );\n\t\tSTATE[ SHUFFLE_STATE ] = state[ 0 ];\n\t}\n\tsetReadOnly( minstdShuffle, 'NAME', 'minstd-shuffle' );\n\tsetReadOnlyAccessor( minstdShuffle, 'seed', getSeed );\n\tsetReadOnlyAccessor( minstdShuffle, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( minstdShuffle, 'state', getState, setState );\n\tsetReadOnlyAccessor( minstdShuffle, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( minstdShuffle, 'byteLength', getStateSize );\n\tsetReadOnly( minstdShuffle, 'toJSON', toJSON );\n\tsetReadOnly( minstdShuffle, 'MIN', 1 );\n\tsetReadOnly( minstdShuffle, 'MAX', INT32_MAX-1 );\n\tsetReadOnly( minstdShuffle, 'normalized', normalized );\n\n\tsetReadOnly( normalized, 'NAME', minstdShuffle.NAME );\n\tsetReadOnlyAccessor( normalized, 'seed', getSeed );\n\tsetReadOnlyAccessor( normalized, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( normalized, 'state', getState, setState );\n\tsetReadOnlyAccessor( normalized, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( normalized, 'byteLength', getStateSize );\n\tsetReadOnly( normalized, 'toJSON', toJSON );\n\tsetReadOnly( normalized, 'MIN', (minstdShuffle.MIN-1.0) / NORMALIZATION_CONSTANT );\n\tsetReadOnly( normalized, 'MAX', (minstdShuffle.MAX-1.0) / NORMALIZATION_CONSTANT );\n\n\treturn minstdShuffle;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMINSTD} seed\n\t*/\n\tfunction getSeed() {\n\t\tvar len = STATE[ SEED_SECTION_OFFSET ];\n\t\treturn gcopy( len, seed, 1, new Int32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn STATE[ SEED_SECTION_OFFSET ];\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn STATE.length;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn STATE.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   The PRNG state array is comprised of a preamble followed by `3` sections:\n\t*\n\t*     0.  preamble (version + number of sections)\n\t*     1.  shuffle table\n\t*     2.  internal PRNG state\n\t*     3.  PRNG seed\n\t*\n\t* -   The first element of the PRNG state array preamble is the state array schema version.\n\t*\n\t* -   The second element of the PRNG state array preamble is the number of state array sections (i.e., `3`).\n\t*\n\t* -   The first element of each section following the preamble specifies the section length. The remaining section elements comprise the section contents.\n\t*\n\t* @private\n\t* @returns {PRNGStateMINSTD} current state\n\t*/\n\tfunction getState() {\n\t\tvar len = STATE.length;\n\t\treturn gcopy( len, STATE, 1, new Int32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   If PRNG state is \"shared\" (meaning a state array was provided during PRNG creation and **not** copied) and one sets the generator state to a state array having a different length, the PRNG does **not** update the existing shared state and, instead, points to the newly provided state array. In order to synchronize PRNG output according to the new shared state array, the state array for **each** relevant PRNG must be **explicitly** set.\n\t* -   If PRNG state is \"shared\" and one sets the generator state to a state array of the same length, the PRNG state is updated (along with the state of all other PRNGs sharing the PRNG's state array).\n\t*\n\t* @private\n\t* @param {PRNGStateMINSTD} s - generator state\n\t* @throws {TypeError} must provide an `Int32Array`\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\tvar err;\n\t\tif ( !isInt32Array( s ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an Int32Array. Value: `%s`.', s ) );\n\t\t}\n\t\terr = verifyState( s, false );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.copy === false ) {\n\t\t\tif ( opts.state && s.length === STATE.length ) {\n\t\t\t\tgcopy( s.length, s, 1, STATE, 1 ); // update current shared state\n\t\t\t} else {\n\t\t\t\tSTATE = s; // point to new shared state\n\t\t\t\topts.state = true; // setting this flag allows updating a shared state even if a state array was not provided at PRNG creation\n\t\t\t}\n\t\t} else {\n\t\t\t// Check if we can reuse allocated memory...\n\t\t\tif ( s.length !== STATE.length ) {\n\t\t\t\tSTATE = new Int32Array( s.length ); // reallocate\n\t\t\t}\n\t\t\tgcopy( s.length, s, 1, STATE, 1 );\n\t\t}\n\t\t// Create a new state (table) \"view\":\n\t\tstate = new Int32Array( STATE.buffer, STATE.byteOffset+((TABLE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), TABLE_LENGTH );\n\n\t\t// Create a new seed \"view\":\n\t\tseed = new Int32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), STATE[ SEED_SECTION_OFFSET ] );\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = minstdShuffle.NAME;\n\t\tout.state = typedarray2json( STATE );\n\t\tout.params = [];\n\t\treturn out;\n\t}\n\n\t/**\n\t* Generates a pseudorandom integer on the interval \\\\( [1,2^{31}-1) \\\\).\n\t*\n\t* @private\n\t* @returns {integer32} pseudorandom integer\n\t*/\n\tfunction minstd() {\n\t\tvar s = STATE[ PRNG_STATE ]|0; // asm type annotation\n\t\ts = ( (A*s)%INT32_MAX )|0; // asm type annotation\n\t\tSTATE[ PRNG_STATE ] = s;\n\t\treturn s|0; // asm type annotation\n\t}\n\n\t/**\n\t* Generates a pseudorandom integer on the interval \\\\( [1,2^{31}-1) \\\\).\n\t*\n\t* @private\n\t* @returns {integer32} pseudorandom integer\n\t*\n\t* @example\n\t* var v = minstd();\n\t* // returns <number>\n\t*/\n\tfunction minstdShuffle() {\n\t\tvar s;\n\t\tvar i;\n\n\t\ts = STATE[ SHUFFLE_STATE ];\n\t\ti = floor( TABLE_LENGTH * (s/INT32_MAX) );\n\n\t\t// Pull a state from the table:\n\t\ts = state[ i ];\n\n\t\t// Update the PRNG state:\n\t\tSTATE[ SHUFFLE_STATE ] = s;\n\n\t\t// Replace the pulled state:\n\t\tstate[ i ] = minstd();\n\n\t\treturn s;\n\t}\n\n\t/**\n\t* Generates a pseudorandom number on the interval \\\\( [0,1) \\\\).\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = normalized();\n\t* // returns <number>\n\t*/\n\tfunction normalized() {\n\t\treturn (minstdShuffle()-1) / NORMALIZATION_CONSTANT;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\nimport randint32 from './rand_int32.js';\n\n\n// MAIN //\n\n/**\n* Generates a pseudorandom integer on the interval \\\\( [1,2^{31}-1) \\\\).\n*\n* ## Method\n*\n* Linear congruential generators (LCGs) use the recurrence relation\n*\n* ```tex\n* X_{n+1} = ( a \\cdot X_n + c ) \\operatorname{mod}(m)\n* ```\n*\n* where the modulus \\\\( m \\\\) is a prime number or power of a prime number and \\\\( a \\\\) is a primitive root modulo \\\\( m \\\\).\n*\n* <!-- <note> -->\n*\n* For an LCG to be a Lehmer RNG, the seed \\\\( X_0 \\\\) must be coprime to \\\\( m \\\\).\n*\n* <!-- </note> -->\n*\n* In this implementation, the constants \\\\( a \\\\), \\\\( c \\\\), and \\\\( m \\\\) have the values\n*\n* ```tex\n* \\begin{align*}\n* a &= 7^5 = 16807 \\\\\n* c &= 0 \\\\\n* m &= 2^{31} - 1 = 2147483647\n* \\end{align*}\n* ```\n*\n* <!-- <note> -->\n*\n* The constant \\\\( m \\\\) is a Mersenne prime (modulo \\\\(31\\\\)).\n*\n* <!-- </note> -->\n*\n* <!-- <note> -->\n*\n* The constant \\\\( a \\\\) is a primitive root (modulo \\\\(31\\\\)).\n*\n* <!-- </note> -->\n*\n* Accordingly, the maximum possible product is\n*\n* ```tex\n* 16807 \\cdot (m - 1) \\approx 2^{46}\n* ```\n*\n* The values for \\\\( a \\\\), \\\\( c \\\\), and \\\\( m \\\\) are taken from Park and Miller, \"Random Number Generators: Good Ones Are Hard To Find\". Park's and Miller's article is also the basis for a recipe in the second edition of _Numerical Recipes in C_.\n*\n* This implementation subsequently shuffles the output of a linear congruential pseudorandom number generator (LCG) using a shuffle table in accordance with the Bays-Durham algorithm.\n*\n* ## Notes\n*\n* -   The generator has a period of approximately \\\\(2.1\\mbox{e}9\\\\) (see [Numerical Recipes in C, 2nd Edition](#references), p. 279).\n*\n* ## References\n*\n* -   Bays, Carter, and S. D. Durham. 1976. \"Improving a Poor Random Number Generator.\" _ACM Transactions on Mathematical Software_ 2 (1). New York, NY, USA: ACM: 59–64. doi:[10.1145/355666.355670](http://dx.doi.org/10.1145/355666.355670).\n* -   Herzog, T.N., and G. Lord. 2002. _Applications of Monte Carlo Methods to Finance and Insurance_. ACTEX Publications. [https://books.google.com/books?id=vC7I\\\\\\_gdX-A0C](https://books.google.com/books?id=vC7I\\_gdX-A0C).\n* -   Press, William H., Brian P. Flannery, Saul A. Teukolsky, and William T. Vetterling. 1992. _Numerical Recipes in C: The Art of Scientific Computing, Second Edition_. Cambridge University Press.\n*\n* @function minstd\n* @type {PRNG}\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = minstd();\n* // returns <number>\n*/\nvar minstd = factory({\n\t'seed': randint32()\n});\n\n\n// EXPORTS //\n\nexport default minstd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A linear congruential pseudorandom number generator (LCG) whose output is shuffled.\n*\n* @module @stdlib/random/base/minstd-shuffle\n*\n* @example\n* import minstd from '@stdlib/random/base/minstd-shuffle';\n*\n* var v = minstd();\n* // returns <number>\n*\n* @example\n* import { factory as factory } from '@stdlib/random/base/minstd-shuffle';\n*\n* var minstd = factory({\n*     'seed': 1234\n* });\n*\n* var v = minstd();\n* // returns 1421600654\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns a high-resolution time.\n*\n* ## Notes\n*\n* -   Output format: `[seconds, nanoseconds]`.\n*\n* @returns {NumberArray} high resolution time\n*\n* @example\n* var t = tic();\n* // returns [<number>,<number>]\n*/\nfunction tic() {\n\treturn proc.hrtime();\n}\n\n\n// EXPORTS //\n\nexport default tic;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { primitives as isNonNegativeIntegerArray } from '@stdlib/assert/is-nonnegative-integer-array';\nimport format from '@stdlib/string/format';\nimport tic from './../../tic';\n\n\n// MAIN //\n\n/**\n* Returns a high-resolution time difference.\n*\n* ## Notes\n*\n* -   Output format: `[seconds, nanoseconds]`.\n*\n* @param {NonNegativeIntegerArray} time - high-resolution time\n* @throws {TypeError} must provide a nonnegative integer array\n* @throws {RangeError} input array must have length `2`\n* @returns {NumberArray} high resolution time difference\n*\n* @example\n* import tic from '@stdlib/time/tic';\n*\n* var start = tic();\n* var delta = toc( start );\n* // returns [<number>,<number>]\n*/\nfunction toc( time ) {\n\tvar now = tic();\n\tvar sec;\n\tvar ns;\n\tif ( !isNonNegativeIntegerArray( time ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array of nonnegative integers. Value: `%s`.', time ) );\n\t}\n\tif ( time.length !== 2 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Input array must contain two elements. Value: `%s`.', time ) );\n\t}\n\tsec = now[ 0 ] - time[ 0 ];\n\tns = now[ 1 ] - time[ 1 ];\n\tif ( sec > 0 && ns < 0 ) {\n\t\tsec -= 1;\n\t\tns += 1e9;\n\t}\n\telse if ( sec < 0 && ns > 0 ) {\n\t\tsec += 1;\n\t\tns -= 1e9;\n\t}\n\treturn [ sec, ns ];\n}\n\n\n// EXPORTS //\n\nexport default toc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar noop = 'next();';\n\n\n// MAIN //\n\n/**\n* Generates a source code body for asynchronous execution.\n*\n* ## Notes\n*\n* -   Example output:\n*\n*     ```javascript\n*     \"use strict\";\n*\n*     var ctx = this;\n*     var state1 = {};\n*     var t1, d1, i1;\n*\n*     function before( state, next ) {\n*         // {{before}}\n*     }\n*\n*     function cb1( error ) {\n*         if ( error ) {\n*             return ctx.done( error );\n*         }\n*         i1 = 0;\n*         t1 = ctx.tic();\n*         main( state1, cb2 );\n*     }\n*\n*     function main( state, next ) {\n*         // {{code}}\n*     }\n*\n*     function cb2( error ) {\n*         if ( error ) {\n*             return ctx.done( error );\n*         }\n*         i1 += 1;\n*         if ( i1 < 1e6 ) {\n*             return main( state1, cb2 );\n*         }\n*         d1 = ctx.toc( t1 );\n*         after( state1, cb3 );\n*     }\n*\n*     function after( state, next ) {\n*         // {{after}}\n*     }\n*\n*     function cb3( error ) {\n*         if ( error ) {\n*             return ctx.done( error );\n*         }\n*         ctx.done( null, d1 );\n*     }\n*\n*     before( state1, cb1 );\n*\n*     return 1;\n*     ```\n*\n* @private\n* @param {number} id - id\n* @param {string} code - code to time\n* @param {Options} opts - function options\n* @param {string} opts.before - setup code\n* @param {string} opts.after - cleanup code\n* @param {PositiveInteger} opts.iterations - number of iterations\n* @returns {string} source code body\n*/\nfunction body( id, code, opts ) {\n\tvar before;\n\tvar after;\n\tvar state;\n\tvar main;\n\tvar src;\n\tvar cb1;\n\tvar cb2;\n\tvar cb3;\n\tvar ctx;\n\tvar t;\n\tvar d;\n\tvar i;\n\n\tsrc = '\"use strict\";';\n\n\t// Define identifiers:\n\tbefore = '__before$'+id+'__';\n\tafter = '__after$'+id+'__';\n\tstate = '__state$'+id+'__';\n\tmain = '__main$'+id+'__';\n\tcb1 = '__cb1$'+id+'__';\n\tcb2 = '__cb2$'+id+'__';\n\tcb3 = '__cb3$'+id+'__';\n\tctx = '__ctx$'+id+'__';\n\ti = '__i$'+id+'__';\n\tt = '__t$'+id+'__';\n\td = '__d$'+id+'__';\n\n\t// Declare variables:\n\tsrc += 'var '+ctx+' = this;';\n\tsrc += 'var '+state+' = {};';\n\tsrc += 'var '+i+','+t+','+d+';';\n\n\t// Insert the setup code:\n\tsrc += 'function '+before+'( state, next ) {';\n\tsrc += '  '+(opts.before||noop)+';';\n\tsrc += '}';\n\n\t// Insert the setup callback:\n\tsrc += 'function '+cb1+'( error ) {';\n\tsrc += '  if ( error ) {';\n\tsrc += '    return '+ctx+'.done( error );';\n\tsrc += '  }';\n\tsrc += '  '+i+' = 0;';\n\tsrc += '  '+t+' = '+ctx+'.tic();'; // start the timer\n\tsrc += '  '+main+'( '+state+','+cb2+' );';\n\tsrc += '}';\n\n\t// Wrap the code to time in a function:\n\tsrc += 'function '+main+'( state, next ) {';\n\tsrc += '  '+(code||noop)+';';\n\tsrc += '}';\n\n\t// Insert the main callback:\n\tsrc += 'function '+cb2+'( error ) {';\n\tsrc += '  if ( error ) {';\n\tsrc += '    return '+ctx+'.done( error );';\n\tsrc += '  }';\n\tsrc += '  '+i+' += 1;';\n\tsrc += '  if ( '+i+' < '+opts.iterations+' ) {';\n\tsrc += '    return '+main+'( '+state+','+cb2+' );';\n\tsrc += '  }';\n\tsrc += '  '+d+' = '+ctx+'.toc( '+t+' );'; // stop the timer\n\tsrc += '  '+after+'( '+state+','+cb3+' );';\n\tsrc += '}';\n\n\t// Insert the cleanup code:\n\tsrc += 'function '+after+'( state, next ) {';\n\tsrc += '  '+(opts.after||noop)+';';\n\tsrc += '}';\n\n\t// Insert the cleanup callback:\n\tsrc += 'function '+cb3+'( error ) {';\n\tsrc += '  if ( error ) {';\n\tsrc += '    return '+ctx+'.done( error );';\n\tsrc += '  }';\n\tsrc += '  '+ctx+'.done( null,'+d+' );'; // return results\n\tsrc += '}';\n\n\t// Invoke the setup function to begin the execution sequence:\n\tsrc += before+'( '+state+','+cb1+' );';\n\n\t// Return a value:\n\tsrc += 'return '+id+';';\n\n\treturn src;\n}\n\n\n// EXPORTS //\n\nexport default body;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar vm = require( 'vm' );\nimport wrap from './wrap.js';\n\n\n// MAIN //\n\n/**\n* Compiles JavaScript source code for execution within a V8 virtual machine context.\n*\n* @private\n* @param {string} filename - filename to associate with compiled source code\n* @param {string} code - source code to compile\n* @returns {Function} compiled source code wrapped within a function\n*/\nfunction compile( filename, code ) {\n\tvar script;\n\tvar opts;\n\n\t// Wrap the source code similar to `require`:\n\tcode = wrap( code );\n\n\t// Compile the source code:\n\topts = {\n\t\t'filename': filename,\n\t\t'lineOffset': 0\n\t};\n\tscript = new vm.Script( code, opts );\n\n\t// Run the compiled code in the current V8 context:\n\topts = {\n\t\t'displayErrors': true\n\t};\n\treturn script.runInThisContext( opts );\n}\n\n\n// EXPORTS //\n\nexport default compile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport minstd from '@stdlib/random/base/minstd-shuffle';\nimport createContext from './context.js';\nimport asyncSource from './async.js';\nimport syncSource from './sync.js';\nimport compile from './vm_compile.js';\n\n\n// MAIN //\n\n/**\n* Evaluates source code within a V8 virtual machine context.\n*\n* @private\n* @param {string} src - source code\n* @param {Object} opts - options\n* @param {string} filename - filename\n* @param {string} dirname - directory name\n* @param {Callback} clbk - callback to invoke upon completion\n* @returns {void}\n*/\nfunction evaluate( src, opts, filename, dirname, clbk ) {\n\tvar context;\n\tvar tmp;\n\tvar fcn;\n\tvar err;\n\tvar id;\n\n\t// Create an id:\n\tid = minstd();\n\n\t// Create an execution context:\n\tcontext = createContext( done );\n\n\t// Generate the source code to evaluate...\n\tif ( opts.asynchronous ) {\n\t\tsrc = asyncSource( id, src, opts );\n\t} else {\n\t\tsrc = syncSource( id, src, opts );\n\t}\n\t// Compile the source code:\n\tfcn = compile( filename, src );\n\n\t// Execute the source code:\n\ttmp = fcn.call( context, require, filename, dirname );\n\n\t// Check that the snippet did not prematurely return...\n\tif ( tmp !== id ) {\n\t\terr = new Error( 'evaluation error. Unable to retrieve evaluation results. Ensure that the provided snippet does not return prematurely.' );\n\t\treturn done( err );\n\t}\n\t/**\n\t* Callback invoked upon executing source code.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {NonNegativeIntegerArray} results - results\n\t* @returns {void}\n\t*/\n\tfunction done( error, results ) {\n\t\tif ( error ) {\n\t\t\treturn clbk( error );\n\t\t}\n\t\treturn clbk( null, results );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default evaluate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\nimport tic from '@stdlib/time/tic';\nimport toc from '@stdlib/time/toc';\n\n\n// MAIN //\n\n/**\n* Returns a context.\n*\n* @private\n* @param {Callback} done - callback to be invoked within snippet execution context\n* @returns {Object} context\n*/\nfunction context( done ) {\n\tvar ctx = {};\n\n\tdefineProperty( ctx, 'tic', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': tic\n\t});\n\tdefineProperty( ctx, 'toc', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': toc\n\t});\n\tdefineProperty( ctx, 'done', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': done\n\t});\n\treturn {\n\t\t'tic': tic,\n\t\t'toc': toc,\n\t\t'done': done\n\t};\n}\n\n\n// EXPORTS //\n\nexport default context;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a source code body for synchronous execution.\n*\n* ## Notes\n*\n* -   Example output:\n*\n*     ```javascript\n*     \"use strict\";\n*\n*     var ctx = this;\n*     var t1, d1, i1;\n*\n*     // {{before}}\n*\n*     t1 = ctx.tic();\n*     for ( i1 = 0; i1 < 1e6; i1++ ) {\n*         // {{code}}\n*     }\n*     d1 = ctx.toc( t1 );\n*\n*     // {{after}}\n*\n*     ctx.done( null, d1 );\n*\n*     return 1;\n*     ```\n*\n* @private\n* @param {number} id - id\n* @param {string} code - code to time\n* @param {Options} opts - function options\n* @param {string} opts.before - setup code\n* @param {string} opts.after - cleanup code\n* @param {PositiveInteger} opts.iterations - number of iterations\n* @returns {string} source code body\n*/\nfunction generate( id, code, opts ) {\n\tvar src;\n\tvar ctx;\n\tvar t;\n\tvar d;\n\tvar i;\n\n\tsrc = '\"use strict\";';\n\n\t// Declare variables:\n\tctx = '__ctx$'+id+'__';\n\ti = '__i$'+id+'__';\n\tt = '__t$'+id+'__';\n\td = '__d$'+id+'__';\n\n\tsrc += 'var '+ctx+' = this;';\n\tsrc += 'var '+t+','+d+','+i+';';\n\n\t// Insert the setup code:\n\tsrc += opts.before+';';\n\n\t// Start the timer:\n\tsrc += t+' = '+ctx+'.tic();';\n\n\t// Create the loop:\n\tsrc += 'for ( '+i+'= 0; '+i+' < '+opts.iterations+'; '+i+'++ ) {';\n\n\t// Insert the loop body:\n\tsrc += code+';';\n\n\t// Close the loop:\n\tsrc += '}';\n\n\t// Stop the timer:\n\tsrc += d+' = '+ctx+'.toc( '+t+' );';\n\n\t// Insert the cleanup code:\n\tsrc += opts.after+';';\n\n\t// Return results:\n\tsrc += ctx+'.done( null, '+d+' );';\n\n\t// Return a value:\n\tsrc += 'return '+id+';';\n\n\treturn src;\n}\n\n\n// EXPORTS //\n\nexport default generate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Wraps a source code string similar to `require`.\n*\n* @private\n* @param {string} src - source code\n* @returns {string} wrapped code\n*/\nfunction wrap( src ) {\n\tvar out = '';\n\tout += '(function(require,__filename,__dirname){';\n\tout += src;\n\tout += '});';\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport isArray from '@stdlib/assert/is-array';\nimport copy from './../../copy';\nimport cwd from '@stdlib/process/cwd';\nimport format from '@stdlib/string/format';\nimport nextTick from './../../next-tick';\nimport defaults from './defaults.json';\nimport validate from './validate.js';\nimport evaluate from './vm_evaluate.js';\nimport transform from './transform.js';\n\n\n// VARIABLES //\n\nvar FILENAME = 'timeit.js';\nvar MIN_TIME = 0.1; // seconds\nvar ITERATIONS = 10; // 10^1\nvar MAX_ITERATIONS = 10000000000; // 10^10\n\n\n// MAIN //\n\n/**\n* Times a snippet.\n*\n* @param {string} code - snippet to time\n* @param {Options} [options] - function options\n* @param {string} [options.before=\"\"] - setup code\n* @param {string} [options.after=\"\"] - cleanup code\n* @param {(PositiveInteger|null)} [options.iterations=1e6] - number of iterations\n* @param {PositiveInteger} [options.repeats=3] - number of repeats\n* @param {boolean} [options.asynchronous=false] - boolean indicating whether a snippet is asynchronous\n* @param {Callback} clbk - callback to invoke upon completion\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {void}\n*\n* @example\n* var code = '';\n* code += 'var x = Math.pow( Math.random(), 3 );';\n* code += 'if ( x !== x ) {';\n* code += 'throw new Error( \\'Something went wrong.\\' );';\n* code += '}';\n*\n* timeit( code, done );\n*\n* function done( error, results ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.dir( results );\n* }\n*/\nfunction timeit( code, options, clbk ) {\n\tvar results;\n\tvar opts;\n\tvar dir;\n\tvar err;\n\tvar idx;\n\tvar cb;\n\n\tif ( !isString( code ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', code ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length === 2 ) {\n\t\tcb = options;\n\t} else {\n\t\tcb = clbk;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', cb ) );\n\t}\n\tresults = new Array( opts.repeats );\n\tdir = cwd();\n\tidx = 0;\n\n\t// Pretest to check for early returns and/or errors...\n\ttry {\n\t\tevaluate( code, opts, FILENAME, dir, onTest );\n\t} catch ( error ) {\n\t\terr = new Error( format( 'evaluation error. Encountered an error when evaluating snippet. %s', error.message ) );\n\t\treturn done( err );\n\t}\n\n\t/**\n\t* Evaluates a code snippet on the next turn of the event loop. Waiting until the next turn avoids the current turn being bogged down by a long running queue.\n\t*\n\t* @private\n\t* @param {Callback} clbk - callback\n\t*/\n\tfunction next( clbk ) {\n\t\tnextTick( onTick );\n\n\t\t/**\n\t\t* Callback invoked upon next turn of event loop.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onTick() {\n\t\t\tevaluate( code, opts, FILENAME, dir, clbk );\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked after completing pretest.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {NonNegativeIntegerArray} time - results\n\t* @returns {void}\n\t*/\n\tfunction onTest( error, time ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !isArray( time ) || time.length !== 2 ) {\n\t\t\t// This should only happen if someone is a bad actor and attempts to call the `done` callback without providing timing results.\n\t\t\terror = new Error( 'evaluation error. Did not receive timing results.' );\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( opts.iterations === null ) {\n\t\t\topts.iterations = ITERATIONS;\n\t\t\treturn next( onRun );\n\t\t}\n\t\t// Begin timing the snippet...\n\t\treturn next( onFinish );\n\t}\n\n\t/**\n\t* Callback invoked upon running a pre-run to determine the number of iterations.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {NonNegativeIntegerArray} time - results\n\t* @returns {void}\n\t*/\n\tfunction onRun( error, time ) {\n\t\tvar t;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tt = time[ 0 ] + ( time[ 1 ]/1e9 );\n\t\tif (\n\t\t\tt < MIN_TIME &&\n\t\t\topts.iterations < MAX_ITERATIONS\n\t\t) {\n\t\t\topts.iterations *= 10;\n\t\t\treturn next( onRun );\n\t\t}\n\t\t// Begin timing the snippet...\n\t\treturn next( onFinish );\n\t}\n\n\t/**\n\t* Callback invoked upon executing code.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {NonNegativeIntegerArray} time - results\n\t* @returns {void}\n\t*/\n\tfunction onFinish( error, time ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tresults[ idx ] = time;\n\t\tidx += 1;\n\t\tif ( idx < opts.repeats ) {\n\t\t\treturn next( onFinish );\n\t\t}\n\t\tdone( null, results );\n\t}\n\n\t/**\n\t* Callback invoked upon completion.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {ArrayArray} results - raw results\n\t*/\n\tfunction done( error, results ) {\n\t\tvar out;\n\t\tif ( !error ) {\n\t\t\tout = transform( results, opts.iterations );\n\t\t}\n\t\t// Avoid releasing the zalgo:\n\t\tnextTick( onTick );\n\n\t\t/**\n\t\t* Callback invoked upon the next tick.\n\t\t*\n\t\t* @private\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction onTick() {\n\t\t\tif ( error ) {\n\t\t\t\treturn cb( error );\n\t\t\t}\n\t\t\tcb( null, out );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default timeit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isNull from '@stdlib/assert/is-null';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.before] - setup code\n* @param {string} [options.after] - cleanup code\n* @param {(PositiveInteger|null)} [options.iterations] - number of iterations\n* @param {PositiveInteger} [options.repeats] - number of repeats\n* @param {boolean} [options.asynchronous] - boolean indicating whether a snippet is asynchronous\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iterations': 1e7,\n*     'repeats': 5\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'iterations' ) ) {\n\t\topts.iterations = options.iterations;\n\t\tif (\n\t\t\t!isPositiveInteger( opts.iterations ) &&\n\t\t\t!isNull( opts.iterations )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer or null. Option: `%s`.', 'iterations', opts.iterations ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'repeats' ) ) {\n\t\topts.repeats = options.repeats;\n\t\tif ( !isPositiveInteger( opts.repeats ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'repeats', opts.repeats ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'before' ) ) {\n\t\topts.before = options.before;\n\t\tif ( !isString( opts.before ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'before', opts.before ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'after' ) ) {\n\t\topts.after = options.after;\n\t\tif ( !isString( opts.after ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'after', opts.after ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'asynchronous' ) ) {\n\t\topts.asynchronous = options.asynchronous;\n\t\tif ( !isBoolean( opts.asynchronous ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'asynchronous', opts.asynchronous ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is `null`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is null\n*\n* @example\n* var bool = isNull( null );\n* // returns true\n*\n* bool = isNull( true );\n* // returns false\n*/\nfunction isNull( value ) {\n\treturn value === null;\n}\n\n\n// EXPORTS //\n\nexport default isNull;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport min from './min_time.js';\n\n\n// MAIN //\n\n/**\n* Transforms raw results.\n*\n* @private\n* @param {ArrayArray} raw - raw results\n* @param {PositiveInteger} iterations - number of iterations\n* @returns {Object} transformed results\n*/\nfunction transform( raw, iterations ) {\n\tvar secs;\n\tvar rate;\n\tvar out;\n\tvar m;\n\n\tm = min( raw );\n\tsecs = m[ 0 ] + ( m[ 1 ]/1e9 );\n\trate = iterations / secs;\n\n\tout = {\n\t\t'iterations': iterations,\n\t\t'repeats': raw.length,\n\t\t'min': m,\n\t\t'elapsed': secs,\n\t\t'rate': rate,\n\t\t'times': raw\n\t};\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default transform;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the minimum time.\n*\n* @private\n* @param {ArrayArray} times - times\n* @returns {NonNegativeIntegerArray} minimum time\n*/\nfunction min( times ) {\n\tvar out;\n\tvar t;\n\tvar i;\n\n\tout = times[ 0 ];\n\tfor ( i = 1; i < times.length; i++ ) {\n\t\tt = times[ i ];\n\t\tif (\n\t\t\tt[ 0 ] < out[ 0 ] ||\n\t\t\t(\n\t\t\t\tt[ 0 ] === out[ 0 ] &&\n\t\t\t\tt[ 1 ] < out[ 1 ]\n\t\t\t)\n\t\t) {\n\t\t\tout = t;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default min;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not throw, returns the function return value; otherwise, returns `y`.\n*\n* @param {Function} x - function to try invoking\n* @param {*} y - value to return if a function throws\n* @throws {TypeError} first argument must be a function\n* @returns {*} either the return value of `x` or the provided argument `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x() {\n*     if ( randu() < 0.5 ) {\n*         throw new Error( 'beep' );\n*     }\n*     return 1.0;\n* }\n* var z = trycatch( x, -1.0 );\n* // returns <number>\n*/\nfunction trycatch( x, y ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\ttry {\n\t\treturn x();\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn y;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trycatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isError from '@stdlib/assert/is-error';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Wraps a function in a try/catch block.\n*\n* @param {Function} fcn - function to wrap\n* @param {*} [thisArg] - function context\n* @throws {TypeError} must provide a function\n* @returns {Function} wrapped function\n*\n* @example\n* function fcn() {\n*     throw new Error( 'beep boop' );\n* }\n*\n* var f = wrap( fcn );\n*\n* var out = f();\n* if ( out instanceof Error ) {\n*     console.error( out.message );\n*     // => 'beep boop'\n* }\n*/\nfunction wrap( fcn, thisArg ) {\n\tvar ctx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tctx = thisArg;\n\t} else {\n\t\tctx = null;\n\t}\n\treturn wrapped;\n\n\t/**\n\t* Wrapped function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*|Error} returned value or an error object\n\t*/\n\tfunction wrapped() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\ttry {\n\t\t\treturn fcn.apply( ctx, args );\n\t\t} catch ( error ) {\n\t\t\tif ( isError( error ) ) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t\t// Handle thrown literals...\n\t\t\tif ( typeof error === 'object' ) {\n\t\t\t\treturn new Error( JSON.stringify( error ) );\n\t\t\t}\n\t\t\treturn new Error( error.toString() );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isError from '@stdlib/assert/is-error';\n\n\n// MAIN //\n\n/**\n* Wraps `require` in a try/catch block.\n*\n* @param {string} id - module id\n* @returns {*|Error} `module.exports` of the resolved module or an error\n*\n* @example\n* var out = tryRequire( 'beepboop' );\n*\n* if ( out instanceof Error ) {\n*     console.error( out.message );\n* }\n*/\nfunction tryRequire( id ) {\n\ttry {\n\t\treturn require( id ); // eslint-disable-line stdlib/no-dynamic-require\n\t} catch ( error ) {\n\t\tif ( isError( error ) ) {\n\t\t\treturn error;\n\t\t}\n\t\t// Handle case where a literal is thrown...\n\t\tif ( typeof error === 'object' ) {\n\t\t\treturn new Error( JSON.stringify( error ) );\n\t\t}\n\t\treturn new Error( error.toString() );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default tryRequire;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* If a function does not throw, returns the function return value; otherwise, returns the return value of a second function `y`.\n*\n* @param {Function} x - function to try invoking\n* @param {Function} y - function to invoke if a function throws\n* @throws {TypeError} first argument must be a function\n* @returns {*} the return value of either `x` or `y`\n*\n* @example\n* import randu from '@stdlib/random/base/randu';\n*\n* function x() {\n*     if ( randu() < 0.5 ) {\n*         throw new Error( 'beep' );\n*     }\n*     return 1.0;\n* }\n*\n* function y() {\n*     return randu();\n* }\n*\n* var z = trythen( x, y );\n* // returns <number>\n*/\nfunction trythen( x, y ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', x ) );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', y ) );\n\t}\n\ttry {\n\t\treturn x();\n\t} catch ( error ) {\n\t\treturn y( error );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default trythen;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Half-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float16/pinf\n* @type {number}\n*\n* @example\n* import FLOAT16_PINF from '@stdlib/constants/float16/pinf';\n* // returns +infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n/**\n* Half-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Half-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111 0000000000\n* ```\n*\n* This bit sequence corresponds to the unsigned 16-bit integer `31744` and to the HEX value `0x7c00`.\n*\n* @constant\n* @type {number}\n* @default infinity\n* @see [half-precision floating-point format]{@link https://en.wikipedia.org/wiki/Half-precision_floating-point_format}\n*/\nvar FLOAT16_PINF = Number.POSITIVE_INFINITY; // TODO: if, and when, float16 is natively available, assign the true constant; otherwise, fall back to float64\n\n\n// EXPORTS //\n\nexport default FLOAT16_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Single-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float32/pinf\n* @type {number}\n*\n* @example\n* import FLOAT32_PINF from '@stdlib/constants/float32/pinf';\n* // returns +infinity\n*/\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\nimport Uint32Array from '@stdlib/array/uint32';\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT32_VIEW.buffer );\nvar v;\n\n\n// MAIN //\n\n/**\n* Single-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Single-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111 00000000000000000000000\n* ```\n*\n* This bit sequence corresponds to the unsigned 32-bit integer `2139095040` and to the HEX value `0x7f800000`.\n*\n* @constant\n* @type {number}\n* @default 0x7f800000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_PINF = 0x7f800000;\n\n// Set the ArrayBuffer bit sequence:\nUINT32_VIEW[ 0 ] = FLOAT32_PINF;\n\nv = FLOAT32_VIEW[ 0 ];\n\n\n// EXPORTS //\n\nexport default v;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest-decimal-point */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport INT8 from '@stdlib/constants/int8/max';\nimport UINT8 from '@stdlib/constants/uint8/max';\nimport INT16 from '@stdlib/constants/int16/max';\nimport UINT16 from '@stdlib/constants/uint16/max';\nimport INT32 from '@stdlib/constants/int32/max';\nimport UINT32 from '@stdlib/constants/uint32/max';\nimport FLOAT16 from '@stdlib/constants/float16/pinf';\nimport FLOAT32 from '@stdlib/constants/float32/pinf';\nimport FLOAT64 from '@stdlib/constants/float64/pinf';\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} maximum value\n*\n* @example\n* var m = typemax( 'int8' );\n* // returns 127\n*\n* @example\n* var m = typemax( 'uint8' );\n* // returns 255\n*\n* @example\n* var m = typemax( 'int16' );\n* // returns 32767\n*/\nfunction typemax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'uint32':\n\t\treturn UINT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'uint8':\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn UINT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'uint16':\n\t\treturn UINT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typemax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Half-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float16/ninf\n* @type {number}\n*\n* @example\n* import FLOAT16_NINF from '@stdlib/constants/float16/ninf';\n* // returns -infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n/**\n* Half-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Half-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111 0000000000\n* ```\n*\n* This bit sequence corresponds to the unsigned 16-bit integer `64512` and to the HEX value `0xfc00`.\n*\n* @constant\n* @type {number}\n* @default -infinity\n* @see [half-precision floating-point format]{@link https://en.wikipedia.org/wiki/Half-precision_floating-point_format}\n*/\nvar FLOAT16_NINF = Number.NEGATIVE_INFINITY; // TODO: if, and when, float16 is natively available, assign the true constant; otherwise, fall back to float64\n\n\n// EXPORTS //\n\nexport default FLOAT16_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Single-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float32/ninf\n* @type {number}\n*\n* @example\n* import FLOAT32_NINF from '@stdlib/constants/float32/ninf';\n* // returns -infinity\n*/\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\nimport Uint32Array from '@stdlib/array/uint32';\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT32_VIEW.buffer );\nvar v;\n\n\n// MAIN //\n\n/**\n* Single-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Single-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111 00000000000000000000000\n* ```\n*\n* This bit sequence corresponds to the unsigned 32-bit integer `4286578688` and to the HEX value `0xff800000`.\n*\n* @constant\n* @type {number}\n* @default 0xff800000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_NINF = 0xff800000;\n\n// Set the ArrayBuffer bit sequence:\nUINT32_VIEW[ 0 ] = FLOAT32_NINF;\n\nv = FLOAT32_VIEW[ 0 ];\n\n\n// EXPORTS //\n\nexport default v;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest-decimal-point */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport INT8 from '@stdlib/constants/int8/min';\nimport INT16 from '@stdlib/constants/int16/min';\nimport INT32 from '@stdlib/constants/int32/min';\nimport FLOAT16 from '@stdlib/constants/float16/ninf';\nimport FLOAT32 from '@stdlib/constants/float32/ninf';\nimport FLOAT64 from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\n/**\n* Returns the minimum value of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} minimum value\n*\n* @example\n* var m = typemin( 'int8' );\n* // returns -128\n*\n* @example\n* var m = typemin( 'uint8' );\n* // returns 0\n*\n* @example\n* var m = typemin( 'int16' );\n* // returns -32768\n*/\nfunction typemin( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tcase 'uint32':\n\t\t// Fall-through..\n\tcase 'uint16': // eslint-disable-line no-fallthrough\n\t\t// Fall-through..\n\tcase 'uint8': // eslint-disable-line no-fallthrough\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn 0;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typemin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts the first letter of each object key to lowercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'AA': 1,\n*     'BB': 2\n* };\n*\n* var obj2 = uncapitalizeKeys( obj1 );\n* // returns { 'aA': 1, 'bB': 2 }\n*/\nfunction uncapitalizeKeys( obj ) {\n\tvar out;\n\tvar key;\n\tvar k;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tif ( key === '' ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t} else {\n\t\t\t\tk = key.charAt( 0 ).toLowerCase() + key.slice( 1 );\n\t\t\t\tout[ k ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default uncapitalizeKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a curried function into a function invoked with multiple arguments.\n*\n* @param {Function} fcn - curried function\n* @param {PositiveInteger} [arity] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} uncurried function\n*\n* @example\n* function addX( x ) {\n*     return function addY( y ) {\n*         return x + y;\n*     };\n* }\n*\n* var add = uncurry( addX );\n*\n* var sum = add( 2, 3 );\n* // returns 5\n*/\nfunction uncurry( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = null;\n\t}\n\telse if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t}\n\telse if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t}\n\telse {\n\t\tlen = null;\n\t\tcontext = arity;\n\t}\n\treturn uncurried;\n\n\t/**\n\t* Uncurried function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @throws {Error} if arity is set, must provide expected number of input arguments\n\t* @throws {Error} configured arity must be compatible with curried function\n\t* @throws {Error} if arity is not set, number of arguments must be compatible with curried function\n\t* @returns {*} function result\n\t*/\n\tfunction uncurried() {\n\t\tvar f;\n\t\tvar i;\n\n\t\tf = fcn;\n\t\tif ( len ) {\n\t\t\tif ( len > arguments.length ) {\n\t\t\t\tthrow new Error( format( 'insufficient arguments. Expected %u argument(s) and only received %u argument(s).', len, arguments.length ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( isFunction( f ) ) {\n\t\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( format( 'invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', len, i ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f;\n\t\t}\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tif ( isFunction( f ) ) {\n\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t} else {\n\t\t\t\tthrow new Error( format( 'invalid invocation. Number of arguments exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', arguments.length, i ) );\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default uncurry;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a curried function into a function invoked with multiple arguments.\n*\n* @param {Function} fcn - curried function\n* @param {PositiveInteger} [arity] - number of parameters\n* @param {*} [thisArg] - evaluation context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} `arity` argument must be a positive integer\n* @returns {Function} uncurried function\n*\n* @example\n* function addX( x ) {\n*     return function addY( y ) {\n*         return x + y;\n*     };\n* }\n*\n* var add = uncurryRight( addX );\n*\n* var sum = add( 3, 2 );\n* // returns 5\n*/\nfunction uncurryRight( fcn, arity, thisArg ) {\n\tvar context;\n\tvar len;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tlen = null;\n\t}\n\telse if ( arguments.length > 2 ) {\n\t\tlen = arity;\n\t\tcontext = thisArg;\n\t\tif ( !isPositiveInteger( len ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Arity argument must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t}\n\telse if ( isPositiveInteger( arity ) ) {\n\t\tlen = arity;\n\t}\n\telse {\n\t\tlen = null;\n\t\tcontext = arity;\n\t}\n\treturn uncurried;\n\n\t/**\n\t* Uncurried function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @throws {Error} if arity is set, must provide expected number of input arguments\n\t* @throws {Error} configured arity must be compatible with curried function\n\t* @throws {Error} if arity is not set, number of arguments must be compatible with curried function\n\t* @returns {*} function result\n\t*/\n\tfunction uncurried() {\n\t\tvar f;\n\t\tvar i;\n\n\t\tf = fcn;\n\t\tif ( len ) {\n\t\t\tif ( len > arguments.length ) {\n\t\t\t\tthrow new Error( format( 'insufficient arguments. Expected %u argument(s) and only received %u argument(s).', len, arguments.length ) );\n\t\t\t}\n\t\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\t\tif ( isFunction( f ) ) {\n\t\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( format( 'invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', len, i ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f;\n\t\t}\n\t\tfor ( i = arguments.length-1; i >= 0; i-- ) {\n\t\t\tif ( isFunction( f ) ) {\n\t\t\t\tf = f.call( context, arguments[ i ] );\n\t\t\t} else {\n\t\t\t\tthrow new Error( format( 'invalid invocation. Number of arguments exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.', arguments.length, i ) );\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default uncurryRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isInteger from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\nimport unshiftArray from './unshift_array.js';\nimport unshiftObject from './unshift_object.js';\nimport unshiftTypedArray from './unshift_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @param {...*} items - items to add\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {(Array|TypedArray|Object)} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = unshift( arr, 6.0, 7.0 );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = unshift( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction unshift( collection ) {\n\tvar items;\n\tvar i;\n\titems = new Array( arguments.length-1 );\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\titems[ i ] = arguments[ i+1 ];\n\t}\n\tif ( isArray( collection ) ) {\n\t\treturn unshiftArray( collection, items );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn unshiftTypedArray( collection, items );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn unshiftObject( collection, items );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection ) );\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = unshift( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction unshift( arr, items ) {\n\tvar i;\n\tfor ( i = items.length-1; i >= 0; i-- ) {\n\t\tarr.unshift( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array/buffer';\nimport ceil2 from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is preceded by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {Array} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = unshift( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction unshift( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar offset;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\toffset = arr.byteOffset;\n\n\tif ( offset < ibytes ) {\n\t\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\t\ttotal = nbytes + ibytes + offset;\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\toffset = buf.byteLength - nbytes - ibytes;\n\t\tv = new arr.constructor( buf, offset, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i+n ] = arr[ i ];\n\t\t}\n\t} else {\n\t\toffset -= ibytes;\n\t\tv = new arr.constructor( arr.buffer, offset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the beginning of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {Array} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = unshift( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 3.0, '1': 4.0, '2': 1.0, '3': 2.0 }\n*/\nfunction unshift( obj, items ) {\n\tvar len;\n\tvar n;\n\tvar i;\n\n\tlen = obj.length;\n\tn = items.length;\n\n\t// Shift all existing elements to the right...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tobj[ i+n ] = obj[ i ];\n\t}\n\t// Add new elements...\n\tfor ( i = 0; i < n; i++ ) {\n\t\tobj[ i ] = items[ i ];\n\t}\n\tobj.length = len + n;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default unshift;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to stop invoking a function\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i >= 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* until( predicate, beep );\n*/\nfunction until( predicate, fcn, thisArg ) {\n\tvar i;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = 0;\n\twhile ( !predicate( i ) ) {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default until;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, key, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, key, collection ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* untilEach( arr, predicate, log );\n*/\nfunction untilEach( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = 0;\n\twhile (\n\t\ti < len &&\n\t\t!predicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default untilEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Until a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `untilEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `untilEach()`, `[].push()` behavior is consistent with `untilEachRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to stop iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v !== v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* untilEachRight( arr, predicate, log );\n*/\nfunction untilEachRight( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = len - 1;\n\twhile (\n\t\ti >= 0 &&\n\t\t!predicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default untilEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/assert/is-integer';\nimport isArray from '@stdlib/assert/is-array';\n\n\n// MAIN //\n\n/**\n* Unzips a zipped array (i.e., a nested array of tuples).\n*\n* @param {Array} arr - zipped array\n* @param {Array} [idx] - array of indices specifying which tuple elements to unzip\n* @throws {TypeError} first argument must be a zipped array\n* @throws {TypeError} second argument must be an array of integer indices\n* @throws {Error} indices must be on the interval from zero to the tuple length\n* @returns {Array} array of unzipped arrays\n*\n* @example\n* var arr = [ [ 1, 'a', 3 ], [ 2, 'b', 4 ] ];\n*\n* var out = unzip( arr );\n* // returns [ [ 1, 2 ], [ 'a', 'b' ], [ 3, 4 ] ]\n*\n* @example\n* var arr = [ [ 1, 'a', 3 ], [ 2, 'b', 4 ] ];\n*\n* var out = unzip( arr, [ 0, 2 ] );\n* // returns [ [ 1, 2 ], [ 3, 4 ] ]\n*/\nfunction unzip( arr, idx ) {\n\tvar numVals;\n\tvar len;\n\tvar out;\n\tvar tmp;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a zipped array.' );\n\t}\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !isArray( arr[i] ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Array must only contain arrays.' );\n\t\t}\n\t}\n\t// Assume that the first tuple is representative of all tuples...\n\tnumVals = arr[ 0 ].length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isArray( idx ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Indices must be specified as an array.' );\n\t\t}\n\t\tfor ( i = 0; i < idx.length; i++ ) {\n\t\t\tk = idx[ i ];\n\t\t\tif ( !isInteger( k ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. All indices must be integers.' );\n\t\t\t}\n\t\t\tif ( k < 0 || k > numVals ) {\n\t\t\t\tthrow new Error( 'invalid argument. Must provide valid indices (i.e., must be a nonnegative integer less than or equal to the tuple length).' );\n\t\t\t}\n\t\t}\n\t\tnumVals = idx.length;\n\t} else {\n\t\tidx = [];\n\t\tfor ( i = 0; i < numVals; i++ ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\tout = [];\n\tfor ( j = 0; j < numVals; j++ ) {\n\t\ttmp = [];\n\t\tk = idx[ j ];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ttmp.push( arr[ i ][ k ] );\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default unzip;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts each object key to uppercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = uppercaseKeys( obj1 );\n* // returns { 'A': 1, 'B': 2 }\n*/\nfunction uppercaseKeys( obj ) {\n\tvar out;\n\tvar key;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tout[ key.toUpperCase() ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default uppercaseKeys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property values.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} value array\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 'bar'\n* };\n*\n* var vals = objectValues( obj );\n* // e.g., returns [ 'boop', 'bar' ]\n*/\nfunction objectValues( obj ) {\n\tvar keys;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = obj[ keys[i] ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable property values.\n*\n* @param {ObjectLike} obj - input object\n* @throws {TypeError} must provide an object-like value\n* @returns {Array} value array\n*\n* @example\n* function Foo() {\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var values = objectValuesIn( obj );\n* // e.g., returns [ 'boop', 'bar' ]\n*/\nfunction objectValuesIn( obj ) {\n\tvar out;\n\tvar key;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an object (except null). Value: `%s`.', obj ) );\n\t}\n\tout = [];\n\tfor ( key in obj ) { // eslint-disable-line guard-for-in\n\t\tout.push( obj[ key ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default objectValuesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Invokes a function while a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n*\n* @example\n* function predicate( i ) {\n*     return ( i < 5 );\n* }\n*\n* function beep( i ) {\n*     console.log( 'beep: %d', i );\n* }\n*\n* whilst( predicate, beep );\n*/\nfunction whilst( predicate, fcn, thisArg ) {\n\tvar i;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = 0;\n\twhile ( predicate( i ) ) {\n\t\tfcn.call( thisArg, i );\n\t\ti += 1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default whilst;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, 2, 3, 4, NaN, 5 ];\n*\n* whileEach( arr, predicate, log );\n*/\nfunction whileEach( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = 0;\n\twhile (\n\t\ti < len &&\n\t\tpredicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\t\ti += 1;\n\t\tlen = collection.length; // ...account for dynamically resizing a collection\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default whileEach;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* While a test condition is true, invokes a function once for each element in a collection, iterating from right to left.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with `whileEach` (iterating from left to right) is when elements are pushed onto the beginning (end) of an array. In other words, for `whileEach()`, `[].push()` behavior is consistent with `whileEachRight()` `[].unshift()` behavior.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - function which indicates whether to continue iterating over a collection\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context for the applied function\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Collection} input collection\n*\n* @example\n* function predicate( v, index, collection ) {\n*     return ( v === v );\n* }\n*\n* function log( v, index, collection ) {\n*     console.log( '%s: %d', index, v );\n* }\n*\n* var arr = [ 1, NaN, 2, 3, 4, 5 ];\n*\n* whileEachRight( arr, predicate, log );\n*/\nfunction whileEachRight( collection, predicate, fcn, thisArg ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tlen = collection.length;\n\ti = len - 1;\n\twhile (\n\t\ti >= 0 &&\n\t\tpredicate( collection[ i ], i, collection )\n\t) {\n\t\tfcn.call( thisArg, collection[ i ], i, collection );\n\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t\ti -= 1;\n\t}\n\treturn collection;\n}\n\n\n// EXPORTS //\n\nexport default whileEachRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport propertyNames from './../../property-names';\nimport propertySymbols from './../../property-symbols';\nimport isWritable from '@stdlib/assert/is-writable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own writable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property writable names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = writableProperties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction writableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar n;\n\tvar i;\n\n\tout = propertyNames( value );\n\tn = 0;\n\tfor ( i = 0; i < out.length; i++ ) {\n\t\tif ( isWritable( value, out[ i ] ) ) {\n\t\t\tout[ n ] = out[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tout.length = n;\n\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isWritable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default writableProperties;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isWritable from '@stdlib/assert/is-writable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited writable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited writable property names and symbols\n*\n* @example\n* var props = writablePropertiesIn( [] );\n* // returns [...]\n*/\nfunction writablePropertiesIn( value ) {\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting writable properties...\n\tcache = {};\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a name more than once\n\t\t\t\tisWritable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisWritable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertiesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport Object from '@stdlib/object/ctor';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own writable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own writable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = { 'a': 'b' };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = writablePropertyNames( obj );\n* // returns [ 'a' ]\n*/\nfunction writablePropertyNames( value ) {\n\tvar names;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tnames = getOwnPropertyNames( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tif ( isWritableProperty( value, names[ i ] ) ) {\n\t\t\tnames[ n ] = names[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tnames.length = n;\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertyNames from './../../property-names';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited writable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited writable property names\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = { 'a': 'b' };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = writablePropertyNamesIn( obj );\n* // e.g., returns [ 'a', ... ]\n*/\nfunction writablePropertyNamesIn( value ) {\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting writable property names...\n\tnames = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn names;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertyNamesIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own writable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own writable symbol properties\n*\n* @example\n* var symbols = writablePropertySymbols( {} );\n*/\nfunction writablePropertySymbols( value ) {\n\tvar symbols;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tsymbols = getOwnPropertySymbols( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < symbols.length; i++ ) {\n\t\tif ( isWritableProperty( value, symbols[ i ] ) ) {\n\t\t\tsymbols[ n ] = symbols[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tsymbols.length = n;\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertySymbols;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from './../../property-symbols';\nimport getPrototypeOf from './../../get-prototype-of';\nimport isWritableProperty from '@stdlib/assert/is-writable-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited writable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited writable symbol properties\n*\n* @example\n* var symbols = writablePropertySymbolsIn( {} );\n*/\nfunction writablePropertySymbolsIn( value ) {\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all writable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default writablePropertySymbolsIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport isArray from '@stdlib/assert/is-array';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Generates array tuples from input arrays.\n*\n* @param {...Array} arr - input arrays to be zipped\n* @param {Object} [opts] - function options\n* @param {boolean} [opts.trunc=true] - boolean indicating whether to truncate arrays longer than the shortest input array\n* @param {*} [opts.fill=null] - fill value used for arrays of unequal length\n* @param {boolean} [opts.arrays=false] - boolean indicating whether an input array should be interpreted as an array of arrays to be zipped\n* @throws {TypeError} must provide array arguments\n* @throws {Error} must provide at least one array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} output array of arrays\n*\n* @example\n* var zipped = zip( [ 1, 2 ], [ 'a', 'b' ] );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ] ]\n*\n* @example\n* var zipped = zip( [ 1, 2, 3 ], [ 'a', 'b' ] );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ] ]\n*\n* @example\n* var opts = {\n*     'trunc': false\n* };\n*\n* var zipped = zip( [ 1, 2, 3 ], [ 'a', 'b' ], opts );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ], [ 3, null ] ]\n*\n* @example\n* var opts = {\n*     'trunc': false,\n*     'fill': ''\n* };\n*\n* var zipped = zip( [ 1, 2, 3 ], [ 'a', 'b' ], opts );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ], [ 3, '' ] ]\n*\n* @example\n* var arr = [ [ 1, 2 ], [ 'a', 'b' ] ];\n*\n* // Default behavior:\n* var zipped = zip( arr );\n* // returns [ [ [ 1, 2 ] ], [ [ 'a', 'b' ] ] ]\n*\n* // Array of arrays:\n* zipped = zip( arr, { 'arrays': true } );\n* // returns [ [ 1, 'a' ], [ 2, 'b' ] ]\n*/\nfunction zip() {\n\tvar nargs;\n\tvar args;\n\tvar fill;\n\tvar opts;\n\tvar arg;\n\tvar flg;\n\tvar len;\n\tvar arr;\n\tvar out;\n\tvar val;\n\tvar i;\n\tvar j;\n\n\topts = {};\n\tfill = null;\n\targs = Array.prototype.slice.call( arguments );\n\tnargs = args.length;\n\n\tfor ( i = 0; i < nargs-1; i++ ) {\n\t\tif ( !isArray( args[i] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide array arguments. Value: `%s`.', args[i] ) );\n\t\t}\n\t}\n\targ = args[ nargs-1 ];\n\tflg = isObject( arg );\n\tif ( !flg && !isArray( arg ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be either an array or an options object. Value: `%s`.', arg ) );\n\t}\n\tif ( flg ) {\n\t\topts = args.pop();\n\t}\n\tnargs = args.length;\n\tif ( nargs === 0 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least one array.' );\n\t}\n\tif ( hasOwnProp( opts, 'trunc' ) ) {\n\t\tif ( !isBoolean( opts.trunc ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'trunc', opts.trunc ) );\n\t\t}\n\t} else {\n\t\topts.trunc = true;\n\t}\n\tif ( hasOwnProp( opts, 'fill' ) ) {\n\t\tfill = opts.fill;\n\t}\n\tif ( hasOwnProp( opts, 'arrays' ) ) {\n\t\tif ( !isBoolean( opts.arrays ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'arrays', opts.arrays ) );\n\t\t}\n\t} else {\n\t\topts.arrays = false;\n\t}\n\tif ( nargs === 1 && opts.arrays ) {\n\t\t// Treat the lone array argument as an array of arrays to be zipped...\n\t\targs = args[ 0 ];\n\t\tnargs = args.length;\n\t}\n\tlen = args[ 0 ].length;\n\tif ( opts.trunc ) {\n\t\t// Find the min array length...\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tval = args[ i ].length;\n\t\t\tif ( val < len ) {\n\t\t\t\tlen = val;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Find the max array length...\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tval = args[ i ].length;\n\t\t\tif ( val > len ) {\n\t\t\t\tlen = val;\n\t\t\t}\n\t\t}\n\t}\n\tout = new Array( len );\n\tfor ( j = 0; j < len; j++ ) {\n\t\t// Temporary array to store tuples...\n\t\tarr = new Array( nargs );\n\n\t\t// Create the tuples...\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targ = args[ i ];\n\n\t\t\t// If an array is too short, use a fill value...\n\t\t\tif ( arg.length <= j ) {\n\t\t\t\tarr[ i ] = fill;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tarr[ i ] = arg[ j ];\n\t\t}\n\t\tout[ j ] = arr;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default zip;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: library-manifest\n*/\n\n// MODULES //\n\nimport setReadOnly from './../define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace utils\n*/\nvar utils = {};\n\n/**\n* @name any\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any}\n*/\nimport any from './../any';\nsetReadOnly( utils, 'any', any );\n\n/**\n* @name anyBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any-by}\n*/\nimport anyBy from './../any-by';\nsetReadOnly( utils, 'anyBy', anyBy );\n\n/**\n* @name anyByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/any-by-right}\n*/\nimport anyByRight from './../any-by-right';\nsetReadOnly( utils, 'anyByRight', anyByRight );\n\n/**\n* @name append\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/append}\n*/\nimport append from './../append';\nsetReadOnly( utils, 'append', append );\n\n/**\n* @name argumentFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/argument-function}\n*/\nimport argumentFunction from './../argument-function';\nsetReadOnly( utils, 'argumentFunction', argumentFunction );\n\n/**\n* @name async\n* @memberof utils\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/utils/async}\n*/\nimport async from './../async';\nsetReadOnly( utils, 'async', async );\n\n/**\n* @name bifurcate\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate}\n*/\nimport bifurcate from './../bifurcate';\nsetReadOnly( utils, 'bifurcate', bifurcate );\n\n/**\n* @name bifurcateBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate-by}\n*/\nimport bifurcateBy from './../bifurcate-by';\nsetReadOnly( utils, 'bifurcateBy', bifurcateBy );\n\n/**\n* @name bifurcateIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate-in}\n*/\nimport bifurcateIn from './../bifurcate-in';\nsetReadOnly( utils, 'bifurcateIn', bifurcateIn );\n\n/**\n* @name bifurcateOwn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/bifurcate-own}\n*/\nimport bifurcateOwn from './../bifurcate-own';\nsetReadOnly( utils, 'bifurcateOwn', bifurcateOwn );\n\n/**\n* @name capitalizeKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/capitalize-keys}\n*/\nimport capitalizeKeys from './../capitalize-keys';\nsetReadOnly( utils, 'capitalizeKeys', capitalizeKeys );\n\n/**\n* @name commonKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/common-keys}\n*/\nimport commonKeys from './../common-keys';\nsetReadOnly( utils, 'commonKeys', commonKeys );\n\n/**\n* @name commonKeysIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/common-keys-in}\n*/\nimport commonKeysIn from './../common-keys-in';\nsetReadOnly( utils, 'commonKeysIn', commonKeysIn );\n\n/**\n* @name compose\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/compose}\n*/\nimport compose from './../compose';\nsetReadOnly( utils, 'compose', compose );\n\n/**\n* @name constantFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/constant-function}\n*/\nimport constantFunction from './../constant-function';\nsetReadOnly( utils, 'constantFunction', constantFunction );\n\n/**\n* @name constructorName\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/constructor-name}\n*/\nimport constructorName from './../constructor-name';\nsetReadOnly( utils, 'constructorName', constructorName );\n\n/**\n* @name convertPath\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/convert-path}\n*/\nimport convertPath from './../convert-path';\nsetReadOnly( utils, 'convertPath', convertPath );\n\n/**\n* @name copy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/copy}\n*/\nimport copy from './../copy';\nsetReadOnly( utils, 'copy', copy );\n\n/**\n* @name countBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/count-by}\n*/\nimport countBy from './../count-by';\nsetReadOnly( utils, 'countBy', countBy );\n\n/**\n* @name curry\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/curry}\n*/\nimport curry from './../curry';\nsetReadOnly( utils, 'curry', curry );\n\n/**\n* @name curryRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/curry-right}\n*/\nimport curryRight from './../curry-right';\nsetReadOnly( utils, 'curryRight', curryRight );\n\n/**\n* @name decorateAfter\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/decorate-after}\n*/\nimport decorateAfter from './../decorate-after';\nsetReadOnly( utils, 'decorateAfter', decorateAfter );\n\n/**\n* @name deepGet\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/deep-get}\n*/\nimport deepGet from './../deep-get';\nsetReadOnly( utils, 'deepGet', deepGet );\n\n/**\n* @name deepPluck\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/deep-pluck}\n*/\nimport deepPluck from './../deep-pluck';\nsetReadOnly( utils, 'deepPluck', deepPluck );\n\n/**\n* @name deepSet\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/deep-set}\n*/\nimport deepSet from './../deep-set';\nsetReadOnly( utils, 'deepSet', deepSet );\n\n/**\n* @name setConfigurableReadOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-read-only-accessor}\n*/\nimport setConfigurableReadOnlyAccessor from './../define-configurable-read-only-accessor';\nsetReadOnly( utils, 'setConfigurableReadOnlyAccessor', setConfigurableReadOnlyAccessor );\n\n/**\n* @name setConfigurableReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-read-only-property}\n*/\nimport setConfigurableReadOnly from './../define-configurable-read-only-property';\nsetReadOnly( utils, 'setConfigurableReadOnly', setConfigurableReadOnly );\n\n/**\n* @name setConfigurableReadWriteAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-read-write-accessor}\n*/\nimport setConfigurableReadWriteAccessor from './../define-configurable-read-write-accessor';\nsetReadOnly( utils, 'setConfigurableReadWriteAccessor', setConfigurableReadWriteAccessor );\n\n/**\n* @name setConfigurableWriteOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-configurable-write-only-accessor}\n*/\nimport setConfigurableWriteOnlyAccessor from './../define-configurable-write-only-accessor';\nsetReadOnly( utils, 'setConfigurableWriteOnlyAccessor', setConfigurableWriteOnlyAccessor );\n\n/**\n* @name setMemoizedConfigurableReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-memoized-configurable-read-only-property}\n*/\nimport setMemoizedConfigurableReadOnly from './../define-memoized-configurable-read-only-property';\nsetReadOnly( utils, 'setMemoizedConfigurableReadOnly', setMemoizedConfigurableReadOnly );\n\n/**\n* @name defineMemoizedProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-memoized-property}\n*/\nimport defineMemoizedProperty from './../define-memoized-property';\nsetReadOnly( utils, 'defineMemoizedProperty', defineMemoizedProperty );\n\n/**\n* @name setMemoizedReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-memoized-read-only-property}\n*/\nimport setMemoizedReadOnly from './../define-memoized-read-only-property';\nsetReadOnly( utils, 'setMemoizedReadOnly', setMemoizedReadOnly );\n\n/**\n* @name setNonEnumerableProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-property}\n*/\nimport setNonEnumerableProperty from './../define-nonenumerable-property';\nsetReadOnly( utils, 'setNonEnumerableProperty', setNonEnumerableProperty );\n\n/**\n* @name setNonEnumerableReadOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-read-only-accessor}\n*/\nimport setNonEnumerableReadOnlyAccessor from './../define-nonenumerable-read-only-accessor';\nsetReadOnly( utils, 'setNonEnumerableReadOnlyAccessor', setNonEnumerableReadOnlyAccessor );\n\n/**\n* @name setNonEnumerableReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-read-only-property}\n*/\nimport setNonEnumerableReadOnly from './../define-nonenumerable-read-only-property';\nsetReadOnly( utils, 'setNonEnumerableReadOnly', setNonEnumerableReadOnly );\n\n/**\n* @name setNonEnumerableReadWriteAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-read-write-accessor}\n*/\nimport setNonEnumerableReadWriteAccessor from './../define-nonenumerable-read-write-accessor';\nsetReadOnly( utils, 'setNonEnumerableReadWriteAccessor', setNonEnumerableReadWriteAccessor );\n\n/**\n* @name setNonEnumerableWriteOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-nonenumerable-write-only-accessor}\n*/\nimport setNonEnumerableWriteOnlyAccessor from './../define-nonenumerable-write-only-accessor';\nsetReadOnly( utils, 'setNonEnumerableWriteOnlyAccessor', setNonEnumerableWriteOnlyAccessor );\n\n/**\n* @name defineProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-properties}\n*/\nimport defineProperties from './../define-properties';\nsetReadOnly( utils, 'defineProperties', defineProperties );\n\n/**\n* @name defineProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-property}\n*/\nimport defineProperty from './../define-property';\nsetReadOnly( utils, 'defineProperty', defineProperty );\n\n/**\n* @name setReadOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-read-only-accessor}\n*/\nimport setReadOnlyAccessor from './../define-read-only-accessor';\nsetReadOnly( utils, 'setReadOnlyAccessor', setReadOnlyAccessor );\n\n/**\n* @name setReadOnly\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-read-only-property}\n*/\n\nsetReadOnly( utils, 'setReadOnly', setReadOnly );\n\n/**\n* @name setReadWriteAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-read-write-accessor}\n*/\nimport setReadWriteAccessor from './../define-read-write-accessor';\nsetReadOnly( utils, 'setReadWriteAccessor', setReadWriteAccessor );\n\n/**\n* @name setWriteOnlyAccessor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/define-write-only-accessor}\n*/\nimport setWriteOnlyAccessor from './../define-write-only-accessor';\nsetReadOnly( utils, 'setWriteOnlyAccessor', setWriteOnlyAccessor );\n\n/**\n* @name dirname\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/dirname}\n*/\nimport dirname from './../dirname';\nsetReadOnly( utils, 'dirname', dirname );\n\n/**\n* @name doUntil\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-until}\n*/\nimport doUntil from './../do-until';\nsetReadOnly( utils, 'doUntil', doUntil );\n\n/**\n* @name doUntilEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-until-each}\n*/\nimport doUntilEach from './../do-until-each';\nsetReadOnly( utils, 'doUntilEach', doUntilEach );\n\n/**\n* @name doUntilEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-until-each-right}\n*/\nimport doUntilEachRight from './../do-until-each-right';\nsetReadOnly( utils, 'doUntilEachRight', doUntilEachRight );\n\n/**\n* @name doWhile\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-while}\n*/\nimport doWhile from './../do-while';\nsetReadOnly( utils, 'doWhile', doWhile );\n\n/**\n* @name doWhileEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-while-each}\n*/\nimport doWhileEach from './../do-while-each';\nsetReadOnly( utils, 'doWhileEach', doWhileEach );\n\n/**\n* @name doWhileEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/do-while-each-right}\n*/\nimport doWhileEachRight from './../do-while-each-right';\nsetReadOnly( utils, 'doWhileEachRight', doWhileEachRight );\n\n/**\n* @name dsv\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/dsv}\n*/\nimport dsv from './../dsv';\nsetReadOnly( utils, 'dsv', dsv );\n\n/**\n* @name objectEntries\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/entries}\n*/\nimport objectEntries from './../entries';\nsetReadOnly( utils, 'objectEntries', objectEntries );\n\n/**\n* @name objectEntriesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/entries-in}\n*/\nimport objectEntriesIn from './../entries-in';\nsetReadOnly( utils, 'objectEntriesIn', objectEntriesIn );\n\n/**\n* @name enumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-properties}\n*/\nimport enumerableProperties from './../enumerable-properties';\nsetReadOnly( utils, 'enumerableProperties', enumerableProperties );\n\n/**\n* @name enumerablePropertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-properties-in}\n*/\nimport enumerablePropertiesIn from './../enumerable-properties-in';\nsetReadOnly( utils, 'enumerablePropertiesIn', enumerablePropertiesIn );\n\n/**\n* @name enumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-property-symbols}\n*/\nimport enumerablePropertySymbols from './../enumerable-property-symbols';\nsetReadOnly( utils, 'enumerablePropertySymbols', enumerablePropertySymbols );\n\n/**\n* @name enumerablePropertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/enumerable-property-symbols-in}\n*/\nimport enumerablePropertySymbolsIn from './../enumerable-property-symbols-in';\nsetReadOnly( utils, 'enumerablePropertySymbolsIn', enumerablePropertySymbolsIn );\n\n/**\n* @name rescape\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/escape-regexp-string}\n*/\nimport rescape from './../escape-regexp-string';\nsetReadOnly( utils, 'rescape', rescape );\n\n/**\n* @name evil\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/eval}\n*/\nimport evil from './../eval';\nsetReadOnly( utils, 'evil', evil );\n\n/**\n* @name every\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/every}\n*/\nimport every from './../every';\nsetReadOnly( utils, 'every', every );\n\n/**\n* @name everyBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/every-by}\n*/\nimport everyBy from './../every-by';\nsetReadOnly( utils, 'everyBy', everyBy );\n\n/**\n* @name everyByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/every-by-right}\n*/\nimport everyByRight from './../every-by-right';\nsetReadOnly( utils, 'everyByRight', everyByRight );\n\n/**\n* @name extname\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/extname}\n*/\nimport extname from './../extname';\nsetReadOnly( utils, 'extname', extname );\n\n/**\n* @name filterArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/filter-arguments}\n*/\nimport filterArguments from './../filter-arguments';\nsetReadOnly( utils, 'filterArguments', filterArguments );\n\n/**\n* @name find\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/find}\n*/\nimport find from './../find';\nsetReadOnly( utils, 'find', find );\n\n/**\n* @name flattenArray\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/flatten-array}\n*/\nimport flattenArray from './../flatten-array';\nsetReadOnly( utils, 'flattenArray', flattenArray );\n\n/**\n* @name flattenObject\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/flatten-object}\n*/\nimport flattenObject from './../flatten-object';\nsetReadOnly( utils, 'flattenObject', flattenObject );\n\n/**\n* @name forEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-each}\n*/\nimport forEach from './../for-each';\nsetReadOnly( utils, 'forEach', forEach );\n\n/**\n* @name forEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-each-right}\n*/\nimport forEachRight from './../for-each-right';\nsetReadOnly( utils, 'forEachRight', forEachRight );\n\n/**\n* @name forIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-in}\n*/\nimport forIn from './../for-in';\nsetReadOnly( utils, 'forIn', forIn );\n\n/**\n* @name forOwn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/for-own}\n*/\nimport forOwn from './../for-own';\nsetReadOnly( utils, 'forOwn', forOwn );\n\n/**\n* @name objectFromEntries\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/from-entries}\n*/\nimport objectFromEntries from './../from-entries';\nsetReadOnly( utils, 'objectFromEntries', objectFromEntries );\n\n/**\n* @name functionName\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/function-name}\n*/\nimport functionName from './../function-name';\nsetReadOnly( utils, 'functionName', functionName );\n\n/**\n* @name functionSequence\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/function-sequence}\n*/\nimport functionSequence from './../function-sequence';\nsetReadOnly( utils, 'functionSequence', functionSequence );\n\n/**\n* @name getPrototypeOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/get-prototype-of}\n*/\nimport getPrototypeOf from './../get-prototype-of';\nsetReadOnly( utils, 'getPrototypeOf', getPrototypeOf );\n\n/**\n* @name getGlobal\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/global}\n*/\nimport getGlobal from './../global';\nsetReadOnly( utils, 'getGlobal', getGlobal );\n\n/**\n* @name group\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group}\n*/\nimport group from './../group';\nsetReadOnly( utils, 'group', group );\n\n/**\n* @name groupBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group-by}\n*/\nimport groupBy from './../group-by';\nsetReadOnly( utils, 'groupBy', groupBy );\n\n/**\n* @name groupIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group-in}\n*/\nimport groupIn from './../group-in';\nsetReadOnly( utils, 'groupIn', groupIn );\n\n/**\n* @name groupOwn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/group-own}\n*/\nimport groupOwn from './../group-own';\nsetReadOnly( utils, 'groupOwn', groupOwn );\n\n/**\n* @name identity\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/identity-function}\n*/\nimport identity from './../identity-function';\nsetReadOnly( utils, 'identity', identity );\n\n/**\n* @name ifelse\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/if-else}\n*/\nimport ifelse from './../if-else';\nsetReadOnly( utils, 'ifelse', ifelse );\n\n/**\n* @name ifthen\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/if-then}\n*/\nimport ifthen from './../if-then';\nsetReadOnly( utils, 'ifthen', ifthen );\n\n/**\n* @name indexOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/index-of}\n*/\nimport indexOf from './../index-of';\nsetReadOnly( utils, 'indexOf', indexOf );\n\n/**\n* @name inherit\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherit}\n*/\nimport inherit from './../inherit';\nsetReadOnly( utils, 'inherit', inherit );\n\n/**\n* @name inheritedEnumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-enumerable-properties}\n*/\nimport inheritedEnumerableProperties from './../inherited-enumerable-properties';\nsetReadOnly( utils, 'inheritedEnumerableProperties', inheritedEnumerableProperties );\n\n/**\n* @name inheritedEnumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-enumerable-property-symbols}\n*/\nimport inheritedEnumerablePropertySymbols from './../inherited-enumerable-property-symbols';\nsetReadOnly( utils, 'inheritedEnumerablePropertySymbols', inheritedEnumerablePropertySymbols );\n\n/**\n* @name inheritedKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-keys}\n*/\nimport inheritedKeys from './../inherited-keys';\nsetReadOnly( utils, 'inheritedKeys', inheritedKeys );\n\n/**\n* @name inheritedNonEnumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-nonenumerable-properties}\n*/\nimport inheritedNonEnumerableProperties from './../inherited-nonenumerable-properties';\nsetReadOnly( utils, 'inheritedNonEnumerableProperties', inheritedNonEnumerableProperties );\n\n/**\n* @name inheritedNonEnumerablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-nonenumerable-property-names}\n*/\nimport inheritedNonEnumerablePropertyNames from './../inherited-nonenumerable-property-names';\nsetReadOnly( utils, 'inheritedNonEnumerablePropertyNames', inheritedNonEnumerablePropertyNames );\n\n/**\n* @name inheritedNonEnumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-nonenumerable-property-symbols}\n*/\nimport inheritedNonEnumerablePropertySymbols from './../inherited-nonenumerable-property-symbols';\nsetReadOnly( utils, 'inheritedNonEnumerablePropertySymbols', inheritedNonEnumerablePropertySymbols );\n\n/**\n* @name inheritedProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-properties}\n*/\nimport inheritedProperties from './../inherited-properties';\nsetReadOnly( utils, 'inheritedProperties', inheritedProperties );\n\n/**\n* @name inheritedPropertyDescriptor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-descriptor}\n*/\nimport inheritedPropertyDescriptor from './../inherited-property-descriptor';\nsetReadOnly( utils, 'inheritedPropertyDescriptor', inheritedPropertyDescriptor );\n\n/**\n* @name inheritedPropertyDescriptors\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-descriptors}\n*/\nimport inheritedPropertyDescriptors from './../inherited-property-descriptors';\nsetReadOnly( utils, 'inheritedPropertyDescriptors', inheritedPropertyDescriptors );\n\n/**\n* @name inheritedPropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-names}\n*/\nimport inheritedPropertyNames from './../inherited-property-names';\nsetReadOnly( utils, 'inheritedPropertyNames', inheritedPropertyNames );\n\n/**\n* @name inheritedPropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-property-symbols}\n*/\nimport inheritedPropertySymbols from './../inherited-property-symbols';\nsetReadOnly( utils, 'inheritedPropertySymbols', inheritedPropertySymbols );\n\n/**\n* @name inheritedWritableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-writable-properties}\n*/\nimport inheritedWritableProperties from './../inherited-writable-properties';\nsetReadOnly( utils, 'inheritedWritableProperties', inheritedWritableProperties );\n\n/**\n* @name inheritedWritablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-writable-property-names}\n*/\nimport inheritedWritablePropertyNames from './../inherited-writable-property-names';\nsetReadOnly( utils, 'inheritedWritablePropertyNames', inheritedWritablePropertyNames );\n\n/**\n* @name inheritedWritablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inherited-writable-property-symbols}\n*/\nimport inheritedWritablePropertySymbols from './../inherited-writable-property-symbols';\nsetReadOnly( utils, 'inheritedWritablePropertySymbols', inheritedWritablePropertySymbols );\n\n/**\n* @name inmap\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inmap}\n*/\nimport inmap from './../inmap';\nsetReadOnly( utils, 'inmap', inmap );\n\n/**\n* @name inmapRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/inmap-right}\n*/\nimport inmapRight from './../inmap-right';\nsetReadOnly( utils, 'inmapRight', inmapRight );\n\n/**\n* @name keyBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/key-by}\n*/\nimport keyBy from './../key-by';\nsetReadOnly( utils, 'keyBy', keyBy );\n\n/**\n* @name keyByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/key-by-right}\n*/\nimport keyByRight from './../key-by-right';\nsetReadOnly( utils, 'keyByRight', keyByRight );\n\n/**\n* @name objectKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/keys}\n*/\nimport objectKeys from './../keys';\nsetReadOnly( utils, 'objectKeys', objectKeys );\n\n/**\n* @name keysIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/keys-in}\n*/\nimport keysIn from './../keys-in';\nsetReadOnly( utils, 'keysIn', keysIn );\n\n/**\n* @name lowercaseKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/lowercase-keys}\n*/\nimport lowercaseKeys from './../lowercase-keys';\nsetReadOnly( utils, 'lowercaseKeys', lowercaseKeys );\n\n/**\n* @name map\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map}\n*/\nimport map from './../map';\nsetReadOnly( utils, 'map', map );\n\n/**\n* @name mapArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-arguments}\n*/\nimport mapArguments from './../map-arguments';\nsetReadOnly( utils, 'mapArguments', mapArguments );\n\n/**\n* @name mapFun\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-function}\n*/\nimport mapFun from './../map-function';\nsetReadOnly( utils, 'mapFun', mapFun );\n\n/**\n* @name mapKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-keys}\n*/\nimport mapKeys from './../map-keys';\nsetReadOnly( utils, 'mapKeys', mapKeys );\n\n/**\n* @name mapReduce\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-reduce}\n*/\nimport mapReduce from './../map-reduce';\nsetReadOnly( utils, 'mapReduce', mapReduce );\n\n/**\n* @name mapReduceRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-reduce-right}\n*/\nimport mapReduceRight from './../map-reduce-right';\nsetReadOnly( utils, 'mapReduceRight', mapReduceRight );\n\n/**\n* @name mapRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-right}\n*/\nimport mapRight from './../map-right';\nsetReadOnly( utils, 'mapRight', mapRight );\n\n/**\n* @name mapValues\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map-values}\n*/\nimport mapValues from './../map-values';\nsetReadOnly( utils, 'mapValues', mapValues );\n\n/**\n* @name map2\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map2}\n*/\nimport map2 from './../map2';\nsetReadOnly( utils, 'map2', map2 );\n\n/**\n* @name map2Right\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map2-right}\n*/\nimport map2Right from './../map2-right';\nsetReadOnly( utils, 'map2Right', map2Right );\n\n/**\n* @name map2d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map2d}\n*/\nimport map2d from './../map2d';\nsetReadOnly( utils, 'map2d', map2d );\n\n/**\n* @name map3d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map3d}\n*/\nimport map3d from './../map3d';\nsetReadOnly( utils, 'map3d', map3d );\n\n/**\n* @name map4d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map4d}\n*/\nimport map4d from './../map4d';\nsetReadOnly( utils, 'map4d', map4d );\n\n/**\n* @name map5d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/map5d}\n*/\nimport map5d from './../map5d';\nsetReadOnly( utils, 'map5d', map5d );\n\n/**\n* @name maskArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/mask-arguments}\n*/\nimport maskArguments from './../mask-arguments';\nsetReadOnly( utils, 'maskArguments', maskArguments );\n\n/**\n* @name memoize\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/memoize}\n*/\nimport memoize from './../memoize';\nsetReadOnly( utils, 'memoize', memoize );\n\n/**\n* @name merge\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/merge}\n*/\nimport merge from './../merge';\nsetReadOnly( utils, 'merge', merge );\n\n/**\n* @name moveProperty\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/move-property}\n*/\nimport moveProperty from './../move-property';\nsetReadOnly( utils, 'moveProperty', moveProperty );\n\n/**\n* @name naryFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nary-function}\n*/\nimport naryFunction from './../nary-function';\nsetReadOnly( utils, 'naryFunction', naryFunction );\n\n/**\n* @name nativeClass\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/native-class}\n*/\nimport nativeClass from './../native-class';\nsetReadOnly( utils, 'nativeClass', nativeClass );\n\n/**\n* @name nextTick\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/next-tick}\n*/\nimport nextTick from './../next-tick';\nsetReadOnly( utils, 'nextTick', nextTick );\n\n/**\n* @name none\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/none}\n*/\nimport none from './../none';\nsetReadOnly( utils, 'none', none );\n\n/**\n* @name noneBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/none-by}\n*/\nimport noneBy from './../none-by';\nsetReadOnly( utils, 'noneBy', noneBy );\n\n/**\n* @name noneByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/none-by-right}\n*/\nimport noneByRight from './../none-by-right';\nsetReadOnly( utils, 'noneByRight', noneByRight );\n\n/**\n* @name nonEnumerableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-properties}\n*/\nimport nonEnumerableProperties from './../nonenumerable-properties';\nsetReadOnly( utils, 'nonEnumerableProperties', nonEnumerableProperties );\n\n/**\n* @name nonEnumerablePropertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-properties-in}\n*/\nimport nonEnumerablePropertiesIn from './../nonenumerable-properties-in';\nsetReadOnly( utils, 'nonEnumerablePropertiesIn', nonEnumerablePropertiesIn );\n\n/**\n* @name nonEnumerablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-names}\n*/\nimport nonEnumerablePropertyNames from './../nonenumerable-property-names';\nsetReadOnly( utils, 'nonEnumerablePropertyNames', nonEnumerablePropertyNames );\n\n/**\n* @name nonEnumerablePropertyNamesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-names-in}\n*/\nimport nonEnumerablePropertyNamesIn from './../nonenumerable-property-names-in';\nsetReadOnly( utils, 'nonEnumerablePropertyNamesIn', nonEnumerablePropertyNamesIn );\n\n/**\n* @name nonEnumerablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-symbols}\n*/\nimport nonEnumerablePropertySymbols from './../nonenumerable-property-symbols';\nsetReadOnly( utils, 'nonEnumerablePropertySymbols', nonEnumerablePropertySymbols );\n\n/**\n* @name nonEnumerablePropertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonenumerable-property-symbols-in}\n*/\nimport nonEnumerablePropertySymbolsIn from './../nonenumerable-property-symbols-in';\nsetReadOnly( utils, 'nonEnumerablePropertySymbolsIn', nonEnumerablePropertySymbolsIn );\n\n/**\n* @name nonIndexKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/nonindex-keys}\n*/\nimport nonIndexKeys from './../nonindex-keys';\nsetReadOnly( utils, 'nonIndexKeys', nonIndexKeys );\n\n/**\n* @name noop\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/noop}\n*/\nimport noop from './../noop';\nsetReadOnly( utils, 'noop', noop );\n\n/**\n* @name objectInverse\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/object-inverse}\n*/\nimport objectInverse from './../object-inverse';\nsetReadOnly( utils, 'objectInverse', objectInverse );\n\n/**\n* @name objectInverseBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/object-inverse-by}\n*/\nimport objectInverseBy from './../object-inverse-by';\nsetReadOnly( utils, 'objectInverseBy', objectInverseBy );\n\n/**\n* @name omit\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/omit}\n*/\nimport omit from './../omit';\nsetReadOnly( utils, 'omit', omit );\n\n/**\n* @name omitBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/omit-by}\n*/\nimport omitBy from './../omit-by';\nsetReadOnly( utils, 'omitBy', omitBy );\n\n/**\n* @name openURL\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/open-url}\n*/\nimport openURL from './../open-url';\nsetReadOnly( utils, 'openURL', openURL );\n\n/**\n* @name papply\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/papply}\n*/\nimport papply from './../papply';\nsetReadOnly( utils, 'papply', papply );\n\n/**\n* @name papplyRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/papply-right}\n*/\nimport papplyRight from './../papply-right';\nsetReadOnly( utils, 'papplyRight', papplyRight );\n\n/**\n* @name parallel\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/parallel}\n*/\nimport parallel from './../parallel';\nsetReadOnly( utils, 'parallel', parallel );\n\n/**\n* @name parseJSON\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/parse-json}\n*/\nimport parseJSON from './../parse-json';\nsetReadOnly( utils, 'parseJSON', parseJSON );\n\n/**\n* @name pick\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pick}\n*/\nimport pick from './../pick';\nsetReadOnly( utils, 'pick', pick );\n\n/**\n* @name pickArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pick-arguments}\n*/\nimport pickArguments from './../pick-arguments';\nsetReadOnly( utils, 'pickArguments', pickArguments );\n\n/**\n* @name pickBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pick-by}\n*/\nimport pickBy from './../pick-by';\nsetReadOnly( utils, 'pickBy', pickBy );\n\n/**\n* @name pluck\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pluck}\n*/\nimport pluck from './../pluck';\nsetReadOnly( utils, 'pluck', pluck );\n\n/**\n* @name pop\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/pop}\n*/\nimport pop from './../pop';\nsetReadOnly( utils, 'pop', pop );\n\n/**\n* @name prepend\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/prepend}\n*/\nimport prepend from './../prepend';\nsetReadOnly( utils, 'prepend', prepend );\n\n/**\n* @name properties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/properties}\n*/\nimport properties from './../properties';\nsetReadOnly( utils, 'properties', properties );\n\n/**\n* @name propertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/properties-in}\n*/\nimport propertiesIn from './../properties-in';\nsetReadOnly( utils, 'propertiesIn', propertiesIn );\n\n/**\n* @name propertyDescriptor\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptor}\n*/\nimport propertyDescriptor from './../property-descriptor';\nsetReadOnly( utils, 'propertyDescriptor', propertyDescriptor );\n\n/**\n* @name propertyDescriptorIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptor-in}\n*/\nimport propertyDescriptorIn from './../property-descriptor-in';\nsetReadOnly( utils, 'propertyDescriptorIn', propertyDescriptorIn );\n\n/**\n* @name propertyDescriptors\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptors}\n*/\nimport propertyDescriptors from './../property-descriptors';\nsetReadOnly( utils, 'propertyDescriptors', propertyDescriptors );\n\n/**\n* @name propertyDescriptorsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-descriptors-in}\n*/\nimport propertyDescriptorsIn from './../property-descriptors-in';\nsetReadOnly( utils, 'propertyDescriptorsIn', propertyDescriptorsIn );\n\n/**\n* @name propertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-names}\n*/\nimport propertyNames from './../property-names';\nsetReadOnly( utils, 'propertyNames', propertyNames );\n\n/**\n* @name propertyNamesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-names-in}\n*/\nimport propertyNamesIn from './../property-names-in';\nsetReadOnly( utils, 'propertyNamesIn', propertyNamesIn );\n\n/**\n* @name propertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-symbols}\n*/\nimport propertySymbols from './../property-symbols';\nsetReadOnly( utils, 'propertySymbols', propertySymbols );\n\n/**\n* @name propertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/property-symbols-in}\n*/\nimport propertySymbolsIn from './../property-symbols-in';\nsetReadOnly( utils, 'propertySymbolsIn', propertySymbolsIn );\n\n/**\n* @name push\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/push}\n*/\nimport push from './../push';\nsetReadOnly( utils, 'push', push );\n\n/**\n* @name realmax\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/real-max}\n*/\nimport realmax from './../real-max';\nsetReadOnly( utils, 'realmax', realmax );\n\n/**\n* @name realmin\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/real-min}\n*/\nimport realmin from './../real-min';\nsetReadOnly( utils, 'realmin', realmin );\n\n/**\n* @name reduce\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reduce}\n*/\nimport reduce from './../reduce';\nsetReadOnly( utils, 'reduce', reduce );\n\n/**\n* @name reduceRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reduce-right}\n*/\nimport reduceRight from './../reduce-right';\nsetReadOnly( utils, 'reduceRight', reduceRight );\n\n/**\n* @name reduce2d\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reduce2d}\n*/\nimport reduce2d from './../reduce2d';\nsetReadOnly( utils, 'reduce2d', reduce2d );\n\n/**\n* @name reFromString\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/regexp-from-string}\n*/\nimport reFromString from './../regexp-from-string';\nsetReadOnly( utils, 'reFromString', reFromString );\n\n/**\n* @name rejectArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reject-arguments}\n*/\nimport rejectArguments from './../reject-arguments';\nsetReadOnly( utils, 'rejectArguments', rejectArguments );\n\n/**\n* @name reorderArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reorder-arguments}\n*/\nimport reorderArguments from './../reorder-arguments';\nsetReadOnly( utils, 'reorderArguments', reorderArguments );\n\n/**\n* @name reverseArguments\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/reverse-arguments}\n*/\nimport reverseArguments from './../reverse-arguments';\nsetReadOnly( utils, 'reverseArguments', reverseArguments );\n\n/**\n* @name safeintmax\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/safe-int-max}\n*/\nimport safeintmax from './../safe-int-max';\nsetReadOnly( utils, 'safeintmax', safeintmax );\n\n/**\n* @name safeintmin\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/safe-int-min}\n*/\nimport safeintmin from './../safe-int-min';\nsetReadOnly( utils, 'safeintmin', safeintmin );\n\n/**\n* @name shift\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/shift}\n*/\nimport shift from './../shift';\nsetReadOnly( utils, 'shift', shift );\n\n/**\n* @name sizeOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/size-of}\n*/\nimport sizeOf from './../size-of';\nsetReadOnly( utils, 'sizeOf', sizeOf );\n\n/**\n* @name some\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/some}\n*/\nimport some from './../some';\nsetReadOnly( utils, 'some', some );\n\n/**\n* @name someBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/some-by}\n*/\nimport someBy from './../some-by';\nsetReadOnly( utils, 'someBy', someBy );\n\n/**\n* @name someByRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/some-by-right}\n*/\nimport someByRight from './../some-by-right';\nsetReadOnly( utils, 'someByRight', someByRight );\n\n/**\n* @name tabulate\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/tabulate}\n*/\nimport tabulate from './../tabulate';\nsetReadOnly( utils, 'tabulate', tabulate );\n\n/**\n* @name tabulateBy\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/tabulate-by}\n*/\nimport tabulateBy from './../tabulate-by';\nsetReadOnly( utils, 'tabulateBy', tabulateBy );\n\n/**\n* @name timeit\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/timeit}\n*/\nimport timeit from './../timeit';\nsetReadOnly( utils, 'timeit', timeit );\n\n/**\n* @name trycatch\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-catch}\n*/\nimport trycatch from './../try-catch';\nsetReadOnly( utils, 'trycatch', trycatch );\n\n/**\n* @name tryFunction\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-function}\n*/\nimport tryFunction from './../try-function';\nsetReadOnly( utils, 'tryFunction', tryFunction );\n\n/**\n* @name tryRequire\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-require}\n*/\nimport tryRequire from './../try-require';\nsetReadOnly( utils, 'tryRequire', tryRequire );\n\n/**\n* @name trythen\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/try-then}\n*/\nimport trythen from './../try-then';\nsetReadOnly( utils, 'trythen', trythen );\n\n/**\n* @name typemax\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/type-max}\n*/\nimport typemax from './../type-max';\nsetReadOnly( utils, 'typemax', typemax );\n\n/**\n* @name typemin\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/type-min}\n*/\nimport typemin from './../type-min';\nsetReadOnly( utils, 'typemin', typemin );\n\n/**\n* @name typeOf\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/type-of}\n*/\nimport typeOf from './../type-of';\nsetReadOnly( utils, 'typeOf', typeOf );\n\n/**\n* @name uncapitalizeKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uncapitalize-keys}\n*/\nimport uncapitalizeKeys from './../uncapitalize-keys';\nsetReadOnly( utils, 'uncapitalizeKeys', uncapitalizeKeys );\n\n/**\n* @name uncurry\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uncurry}\n*/\nimport uncurry from './../uncurry';\nsetReadOnly( utils, 'uncurry', uncurry );\n\n/**\n* @name uncurryRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uncurry-right}\n*/\nimport uncurryRight from './../uncurry-right';\nsetReadOnly( utils, 'uncurryRight', uncurryRight );\n\n/**\n* @name unshift\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/unshift}\n*/\nimport unshift from './../unshift';\nsetReadOnly( utils, 'unshift', unshift );\n\n/**\n* @name until\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/until}\n*/\nimport until from './../until';\nsetReadOnly( utils, 'until', until );\n\n/**\n* @name untilEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/until-each}\n*/\nimport untilEach from './../until-each';\nsetReadOnly( utils, 'untilEach', untilEach );\n\n/**\n* @name untilEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/until-each-right}\n*/\nimport untilEachRight from './../until-each-right';\nsetReadOnly( utils, 'untilEachRight', untilEachRight );\n\n/**\n* @name unzip\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/unzip}\n*/\nimport unzip from './../unzip';\nsetReadOnly( utils, 'unzip', unzip );\n\n/**\n* @name uppercaseKeys\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/uppercase-keys}\n*/\nimport uppercaseKeys from './../uppercase-keys';\nsetReadOnly( utils, 'uppercaseKeys', uppercaseKeys );\n\n/**\n* @name objectValues\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/values}\n*/\nimport objectValues from './../values';\nsetReadOnly( utils, 'objectValues', objectValues );\n\n/**\n* @name objectValuesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/values-in}\n*/\nimport objectValuesIn from './../values-in';\nsetReadOnly( utils, 'objectValuesIn', objectValuesIn );\n\n/**\n* @name whilst\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/while}\n*/\nimport whilst from './../while';\nsetReadOnly( utils, 'whilst', whilst );\n\n/**\n* @name whileEach\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/while-each}\n*/\nimport whileEach from './../while-each';\nsetReadOnly( utils, 'whileEach', whileEach );\n\n/**\n* @name whileEachRight\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/while-each-right}\n*/\nimport whileEachRight from './../while-each-right';\nsetReadOnly( utils, 'whileEachRight', whileEachRight );\n\n/**\n* @name writableProperties\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-properties}\n*/\nimport writableProperties from './../writable-properties';\nsetReadOnly( utils, 'writableProperties', writableProperties );\n\n/**\n* @name writablePropertiesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-properties-in}\n*/\nimport writablePropertiesIn from './../writable-properties-in';\nsetReadOnly( utils, 'writablePropertiesIn', writablePropertiesIn );\n\n/**\n* @name writablePropertyNames\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-names}\n*/\nimport writablePropertyNames from './../writable-property-names';\nsetReadOnly( utils, 'writablePropertyNames', writablePropertyNames );\n\n/**\n* @name writablePropertyNamesIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-names-in}\n*/\nimport writablePropertyNamesIn from './../writable-property-names-in';\nsetReadOnly( utils, 'writablePropertyNamesIn', writablePropertyNamesIn );\n\n/**\n* @name writablePropertySymbols\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-symbols}\n*/\nimport writablePropertySymbols from './../writable-property-symbols';\nsetReadOnly( utils, 'writablePropertySymbols', writablePropertySymbols );\n\n/**\n* @name writablePropertySymbolsIn\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/writable-property-symbols-in}\n*/\nimport writablePropertySymbolsIn from './../writable-property-symbols-in';\nsetReadOnly( utils, 'writablePropertySymbolsIn', writablePropertySymbolsIn );\n\n/**\n* @name zip\n* @memberof utils\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/utils/zip}\n*/\nimport zip from './../zip';\nsetReadOnly( utils, 'zip', zip );\n\n\n// EXPORTS //\n\nexport default utils;\n"],"names":["main","Object","defineProperty","isNumber","value","zeros","n","i","out","zeroPad","str","width","right","negative","pad","length","startsWithMinus","substr","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","formatInteger","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","f","digits","toExponential","toFixed","toPrecision","spaces","fromCharCode","isArray","Array","isnan","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","parseFloat","substring","RE","parse","match","formatTokenize","content","prev","exec","slice","lastIndex","push","format","args","tokenize","interpolate","apply","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","defineProperty$5","setReadOnly","configurable","enumerable","writable","floor","isInteger","x","MAX_TYPED_ARRAY_LENGTH","isCollection","MAX_LENGTH","any","collection","len","defineProperty$1","setNonEnumerableReadOnly","isBoolean","FLG","Symbol","hasToStringTagSupport","toStringTag","has","hasOwnProperty","hasOwnProp","property","Sym","toStrTag","hasToStringTag","v","isOwn","tag","nativeClass$3","Bool","Boolean","test","nativeClass","isPrimitive","isObject","self","window","global","globalThis","getGlobal","codegen","Function","GlobalThis","Self","Win","Global","root","nodeList","document","childNodes","typedarray","Int8Array","reFunctionName","RE_FUNCTION_NAME","REGEXP","main$p","arrayfcn","predicate","isObjectLike","isBuffer","_isBuffer","constructor","constructorName","name","ctor","arrayfun","ctorName","type","isFunction","typeOf","anyBy","thisArg","anyByRight","main$n","Number","FLOAT64_PINF","POSITIVE_INFINITY","FLOAT64_NINF","NEGATIVE_INFINITY","PINF","NINF","isInt","valueOf","isNonNegativeInteger","isTypedArrayLike","MAX","BYTES_PER_ELEMENT","byteOffset","byteLength","hasArrayBuffer","ArrayBuffer","isArrayBuffer","hasFloat64Array","Float64Array","hasFloat64ArraySupport","bool","arr","GlobalFloat64Array","NaN","Float64Array$1","view","buf","GlobalArrayBuffer","isView","hasArrayBufferSupport","ArrayBuffer$1","isInfinite","isEven","isOdd","sqrt","hasUint32Array","Uint32Array","UINT32_MAX","GlobalUint32Array","hasUint32ArraySupport","Uint32Array$1","hasUint8Array","Uint8Array","UINT8_MAX","GlobalUint8Array","hasUint8ArraySupport","Uint8Array$1","hasUint16Array","Uint16Array","UINT16_MAX","GlobalUint16Array","hasUint16ArraySupport","uint16view","Uint16Array$1","ctors","uint16","uint8","HIGH","LOW","IS_LITTLE_ENDIAN","buffer","isLittleEndian","indices$3","FLOAT64_VIEW","UINT32_VIEW","indices","toWords","stride","offset","fcn","assign","LOW$3","setLowWord","low","uint32ToInt32","FLOAT64_HIGH_WORD_ABS_MASK","FLOAT64_HIGH_WORD_SIGN_MASK","HIGH$5","getHighWord","indices$1","fromWords","high","WORDS","copysign","y","hx","hy","ABS_MASK","SIGN_MASK","HIGH_MAX_NEAR_UNITY","HUGE","TINY","HIGH$1","setHighWord","FLOAT64_EXPONENT_BIAS","FLOAT64_NUM_HIGH_WORD_SIGNIFICAND_BITS","HIGH_SIGNIFICAND_MASK","HIGH_MIN_NORMAL_EXP","HIGH_BIASED_EXP_0","HIGH_BIASED_EXP_NEG_512","HIGH_SIGNIFICAND_HALF","TWO53","CP","CP_HI","CP_LO","BP","DP_HI","DP_LO","INV_LN2","INV_LN2_HI","INV_LN2_LO","FLOAT64_MAX_BASE2_EXPONENT","FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL","FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL","FLOAT64_SMALLEST_NORMAL","SCALAR","normalize","FLOAT64_HIGH_WORD_EXPONENT_MASK","TWO52_INV","CLEAR_EXP_MASK","FRAC","ldexp","frac","exp","m","EXP_MASK","BIAS","floatExp","MIN_SUBNORMAL_EXPONENT","MAX_EXPONENT","MAX_SUBNORMAL_EXPONENT","LN2","FLOAT64_HIGH_WORD_SIGNIFICAND_MASK","HIGH_BIASED_EXP_NEG_1","LN2_HI","LN2_LO","HIGH_BIASED_EXP_31","HIGH_BIASED_EXP_64","HIGH_BIASED_EXP_10","HIGH_1075","HIGH_NEG_1075","HIGH_NUM_NONSIGN_BITS","OVT","LOG_WORKSPACE","pow","ahx","ahy","ax","sx","sy","y1","hp","lp","t","z","yIsInfinite","xIsZero","yIsHuge","t2","t1","w","u","logx","tmp","ss","s2","hs","ls","ht","bp","dp","hz","lz","r","k","HIGH_NUM_SIGNIFICAND_BITS","log2ax","pow2","ceil","TWO54","IVLN2HI","IVLN2LO","HIGH_MAX_NORMAL_EXP","ceil2","p","valHi","valLo","hfsq","lx","hi","lo","R","s","polyvalQ","kernelLog1p","log2","MIN_EXP_SUBNORMAL","MAX_EXP","append","collection1","collection2","items","appendArray","total","appendTypedArray","appendObject","wrap","idx","getProto","Obj","getPrototypeOf","proto","getProto$5","objectPrototype","isPlainObject","isPrototypeOf","key","ownProps","isPositiveInteger","debug","require$$0","factory","options","opts","series","limit","validate","done","maxIndex","count","flg","lim","next","JSON","stringify","clbk","error","result","message","anyByAsync","anyByRightAsync","isNan","isString","searchElement","fromIndex","returns","join","cb","results","bifurcateByAsync","indicator","group","countByAsync","everyByAsync","everyByRightAsync","forEachAsync","forEachRightAsync","groupByAsync","inmapAsync","inmapRightAsync","mapFunAsync","keys","isArguments","hasArgumentsClass","detect","isEnumerableProperty","propertyIsEnumerable","hasStringEnumBug","isEnum","isArguments$1","noop","isConstructorPrototype","hasAutomationEqualityBug$1","win","EXCLUDED_KEYS","check","main$f","HAS_BUILTIN","skipConstructor","skipPrototype","isFcn","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","HAS_WINDOW","hasAutomationEqualityBug","NON_ENUMERABLE","transform","objectKeys","mapKeysAsync","mapValuesAsync","noneByAsync","noneByRightAsync","initial","acc","reduceAsync","reduceRightAsync","MAX_ARRAY_LENGTH","isArrayLike","arraylikefcn","isFunctionArray","fcns","waterfall","cnt","someByAsync","someByRightAsync","tabulateByAsync","ns","nFuncs","onPredicate","unshift","clbk2","nargs","TYPE","isAccessorArray","GETTERS","complex128","complex64","default","getter","dtype","float64","float32","int32","int16","int8","uint32","uint8c","generic","ctor2dtypes","Float32Array","Int16Array","Int32Array","Uint8ClampedArray","Complex64Array","Complex128Array","BooleanArray","hasFloat32Array","GlobalFloat32Array","hasFloat32ArraySupport","Float32Array$1","hasInt32Array","isInt32Array","INT32_MAX","INT32_MIN","GlobalInt32Array","hasInt32ArraySupport","Int32Array$1","hasInt16Array","INT16_MIN","GlobalInt16Array","INT16_MAX","hasInt16ArraySupport","Int16Array$1","hasUint8ClampedArray","GlobalUint8ClampedArray","hasUint8ClampedArraySupport","Uint8ClampedArray$1","hasInt8Array","GlobalInt8Array","INT8_MAX","hasInt8ArraySupport","Int8Array$1","isArrayLikeObject","isPrimitiveArray","isObjectArray","isStringArray","Complex128","real","imag","this","re","im","fround","FLOAT32_VIEW","float64ToFloat32$1","Complex64","float64ToFloat32","isComplexLike","isComplex64Array","isComplex128Array","hasIteratorSymbolSupport","iterator","IteratorSymbol","setNonEnumerableReadOnlyAccessor","reinterpret","fromIterator","it","realf","imagf","HAS_ITERATOR_SYMBOL","isComplexArray","_length","_buffer","isComplexArrayConstructor","getComplex64","fromArray","RangeError","reinterpret64","reinterpret128","ITERATOR_SYMBOL","src","accessorGetter","fromIteratorMap","setReadOnlyAccessor","target","start","copyWithin","iter","entries","end","separator","sep","outbuf","reducer","initialValue","N","sbuf","outlen","compareFcn","sort","begin","locales","loc","toLocaleString","values","index","getComplex128","isBooleanArray","isBooleanArrayConstructor","val","a","b","CTORS","DTYPES","NTYPES","ctor2dtype","resolveGetter","dt","bifurcate","filter","xget","gget","returnValues","returnIndices","returnPairs","bifurcateBy","bifurcateIn","returnKeys","bifurcateOwn","capitalizeKeys","commonKeys","ptr","keysIn","commonKeysIn","compose","reExtendedLengthPath","RE_CHARS","RegExp","isRegExp","search","newval","rescape","RE_WIN_DEVICE_ROOT","RE_POSIX_DEVICE_ROOT","convertPath","from","to","device","parts","isError","reRegExp","reFromString","getOwnPropertyNames","propertyNames","getOwnPropertyDescriptor","propertyDescriptor","propertyDescriptor$2","desc","getProto$1","Buffer","GlobalBuffer","hasNodeBufferSupport","copyBuffer","copyBuffer$1","int8array","uint8array","uint8clampedarray","int16array","uint16array","int32array","uint32array","float32array","float64array","typedArrays","deepCopy","copy","cache","refs","level","parent","ref","stack","code","errno","syscall","copyError","Date","regexp","Set","Map","freeze","names","create","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","countBy","g","curry","arity","context","createCurried","curried","cargs","curryRight","after","r1","r2","decorateAfter","fN","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","Fcn","fcn2str","function2string","reNativeFunction","RE_NATIVE_FUNCTION","RE_PARAMETERS","deepGet","props","path","isStr","dget","split","deepPluck","deepSet","dset","setConfigurableReadOnlyAccessor","setConfigurableReadOnly","setConfigurableReadWriteAccessor","setter","setConfigurableWriteOnlyAccessor","defineMemoizedProperty","memoize","setMemoizedConfigurableReadOnly","setMemoizedReadOnly","setNonEnumerableProperty","setNonEnumerableReadWriteAccessor","setNonEnumerableWriteOnlyAccessor","params","defineProperties","hasDefinePropertiesSupport","defineProperties$1","setReadWriteAccessor","setWriteOnlyAccessor","reDirnamePosix","RE_DIRNAME_POSIX","reDirnameWindows","RE_DIRNAME_WINDOWS","PLATFORM","platform","IS_WINDOWS","PLATFORMS","isPlatform","contains","reDirname","win32","posix","dirname","RE_DIRNAME","doUntil","doUntilEach","doUntilEachRight","doWhile","doWhileEach","doWhileEachRight","throwError","state2enum","enum2state","table","CLOSED","INIT","ERROR","max","FIELD","ESCAPE","QUOTED_FIELD","COMMENT","SKIP","removeWhitespace","parser","state","_isWhitespace","_qidx","_cursor","_raiseWarning","_rewind","_changeState","_setErrorState","INVALID_QUOTE_END","QUOTE_END","QUOTED_ESCAPE","SKIPPED_COMMENT","SKIPPED_FIELD","SKIPPED_ESCAPE","SKIPPED_QUOTED_FIELD","SKIPPED_INVALID_QUOTE_END","SKIPPED_QUOTE_END","SKIPPED_QUOTED_ESCAPE","closed","comment","newlineLastIndex","newline","_newlineLastIndex","_newline","ch","_scan","_push","escape","delimiterLastIndex","commentLastIndex","escapeLastIndex","skipLastIndex","escapeLength","delimiter","strict","skip","_delimiterLastIndex","_delimiter","_commentLastIndex","_comment","_skipLastIndex","_skip","_escapeLastIndex","_escapeLength","_escape","_strict","maximum","cursor","_eidx","d","_copyWithin","field","quoteLastIndex","quoting","quote","_quoteLastIndex","_quote","_quoting","_cidx","init","invalid_quote_end","quote_end","doublequote","_doublequote","quoted_escape","quoted_field","skipped_comment","skipped_escape","skipped_field","skipped_invalid_quote_end","skipped_quote_end","skipped_quoted_escape","skipped_quoted_field","Parser","ltrim","maxRows","onClose","onColumn","onComment","onError","onRow","onSkip","onWarn","rowBuffer","rtrim","skipBlankRows","skipRow","trimComment","whitespace","_rowBufferFLG","_rowBuffer","_col","_row","_line","_commented","_skipped","_errname","_ltrim","_maxRows","_rtrim","_skipBlankRows","_skipRow","_trimComment","_whitespace","list","pattern","array2pattern","_reWhitespace","_reWhitespaceLeft","_reWhitespaceRight","_onClose","_onColumn","_onComment","_onRow","_onSkip","_onError","_onWarn","_commentLength","_delimiterLength","_newlineLength","_quoteLength","_skipLength","_state","_states","states","_slice","_getField","_setField","_getRow","_reset","_onSkippedRow","_createException","_close","_raiseException","_onEscape","_onField","_onCommentedRow","_onRecord","_onClosingQuote","chunk","objectEntries","objectEntriesIn","getOwnPropertySymbols","propertySymbols","propertySymbols$2","enumerableProperties","isEnumerable","enumerablePropertiesIn","enumerablePropertySymbols","symbols","enumerablePropertySymbolsIn","evil","eval","SETTERS","arraylike2object","data","accessorProtocol","accessors","accessorSetter","internal","internalComplex","every","reinterpretBoolean","everyBy","everyByRight","reExtnamePosix","RE_EXTNAME_POSIX","reExtnameWindows","RE_EXTNAME_WINDOWS","reExtname","extname","filename","RE_EXTNAME","filterArguments","RETURNS","find","mode","ret","FLOAT64_MAX","defaults","recurse","depth","flattenArray","isPositiveIntegerArray","flattenArrays","prefix","flatten","flattenObject","forEach","forEachRight","forIn","forOwn","dims","copyFLG","genFcn","wrapFlattenCopy","wrapFlatten","isArrayArray","objectFromEntries","foo","hasFunctionNameSupport","isFunctionNameSupported","functionName","funseq","groups","o","groupBy","groupIn","groupOwn","identity","ifelse","ifthen","builtin$2","Ctor","createObject$4","inherit","superCtor","createObject","FLOAT64_MAX_SAFE_INTEGER","inheritedEnumerableProperties","MAX_SAFE_INTEGER","inheritedEnumerablePropertySymbols","inheritedKeys","isNonEnumerableProperty","inheritedNonEnumerableProperties","inheritedNonEnumerablePropertyNames","inheritedNonEnumerablePropertySymbols","inheritedProperties","inheritedPropertyDescriptor","getOwnPropertyDescriptors","propertyDescriptors","inheritedPropertyDescriptors","inheritedPropertyNames","inheritedPropertySymbols","isWritableProperty","inheritedWritableProperties","inheritedWritablePropertyNames","inheritedWritablePropertySymbols","inmap","inmapRight","keyBy","keyByRight","lowercaseKeys","strides2order","strides","column","ndims","row","s1","arraySlice","method","hasMethod","isColumnMajorContiguous","order","contiguous","isRowMajorContiguous","minmaxViewBufferIndex","shape","min","isColumnMajorString","binary","hasDataView","DataView","GlobalDataView","getFloat64","setFloat64","hasDataViewSupport","DataView$1","BigInteger","BigInt","RE_SUFFIX","dtypes","kind","all","enumeration","int64","uint64","notype","userdefined_type","main$1","source","orders","ORDERS","enumerated","DATA","LAYOUTS","modes","MODES","throw","clamp","LOW_MASK","TWO_32","BYTES","VIEW","float64ToInt64Bytes","setUint32","bytes","ndarray","nbytes","ord","_byteLength","_bytesPerElement","bytesPerElement","_dtype","_ndims","_offset","_order","_shape","_strides","_accessors","_iterationOrder","iterationOrder","isContiguous","_flags","ROW_MAJOR_CONTIGUOUS","COLUMN_MAJOR_CONTIGUOUS","READONLY","__meta_dataview__","isndarrayLike","filled","numel","sh","copyIndexed","shape2strides","isColumnMajor","columnmajor","rowmajor","copyFlags","ind","iget","flgs","st","sm","M","_mode","_submode","setInt8","setInt16","setBigInt64","setInt32","ROW_MAJOR","strides2offset","COLUMN_MAJOR","ndarraylike2object","xbuf","getData","getShape","getDType","getStrides","getOffset","getOrder","allocUnsafe$1","allocUnsafe","size","bufferCtors","isNonNegativeIntegerArray","isIntegerArray","isOrder","isDataType","numeric","floating_point","real_floating_point","complex_floating_point","integer","signed_integer","unsigned_integer","boolean","integer_index","boolean_index","mask_index","casting","index_mode","DEFAULTS","HASH","createObject$1","clampIndex","wrapIndex","mp1","normalizeIndex","isIndexMode","TABLE","iset","MAX_DIMS","INDEX_MODE","minmax","isBufferLengthCompatible","readonly","submode","getIndex","DTYPE","ORDER","vind2bind","MODE","map","ybuf","ordx","ordy","shx","shy","ox","oy","ix","ndarrayFcn","ndzeros","arrayFcn","broadcastArray","dim","maybeBroadcastArray","broadcast","hasObjectAssign","assign$1","isReadOnly","mapArguments","mapFun","mapKeys","mapReduce","mapper","mapReduceRight","mapRight","mapValues","broadcastShapes","shapes","n1","n2","map2","zbuf","ordz","yget","zset","xref","yref","shz","sz","oz","iy","isxnd","isynd","isznd","map2Right","map2d","map3d","a1","a2","S0","S1","S2","i0","i1","i2","map4d","t3","a3","S3","i3","map5d","t4","a4","S4","i4","maskArguments","mask","hashFunction","toKey","memoized","override","extend","deepMerge","hasProp","isFunc","curr","mergefcn","merge","moveProperty","naryFunction","proc","nextTick","none","noneBy","noneByRight","nonEnumerableProperties","isNonEnumerable","nonEnumerablePropertiesIn","nonEnumerablePropertyNames","nonEnumerablePropertyNamesIn","nonEnumerablePropertySymbols","nonEnumerablePropertySymbolsIn","RE_INTEGER_INDEX","nonIndexKeys","invert","allowDupes","duplicates","invertBy","omit","ownKeys","omitBy","IS_DARWIN","RE_URI","RE_ILLEGALS","RE_HEX1","RE_HEX2","RE_PATH","RE_SCHEME","ARGS","CMD","spawn","openURL","url","authority","scheme","isURI","unref","papply","pargs","papplyRight","cwd","NUM_CPUS","cpus","ENV","env","WORKER_CMD","cmd","WORKER_ENCODING","encoding","WORKER_MAX_BUFFER","maxBuffer","ordered","WORKER_ORDERED","uid","WORKER_UID","gid","WORKER_GID","fork","require$$1","require$$2","WORKER_FILEPATH","resolve","files","numClosed","workers","pending","fopts","pids","pid","stdio","getOpts","on","onExit","onDisconnect","onMessage","concurrency","child","numPending","close","send","filepath","signal","processExit","parallel","dir","numCPUs","parseJSON","reviver","pick","pickArguments","pickBy","pluck","pop","popTypedArray","popObject","prepend","prependArray","ibytes","prependTypedArray","prependObject","properties","propertiesIn","propertyDescriptorIn","propertyDescriptorsIn","propertyNamesIn","propertySymbolsIn","pushArray","pushTypedArray","pushObject","realmax","FLOAT64","realmin","reduce","reduceRight","reduce2d","rejectArguments","reorderArguments","reverseArguments","safeintmax","safeintmin","shift","shiftTypedArray","shiftObject","sizeOf","some","someBy","someByRight","tabulate","tabulateBy","gcopy","strideX","offsetX","strideY","offsetY","TypedArray","Dummy","fcnName","instanceOf","typeName","typedarray2json","NAMES","isTypedArray","isComplexTypedArray","NUM_WARMUPS","createTable","rand","randint32","random","NORMALIZATION_CONSTANT","TABLE_LENGTH","STATE_ARRAY_VERSION","NUM_STATE_SECTIONS","TABLE_SECTION_OFFSET","STATE_SECTION_OFFSET","SEED_SECTION_OFFSET","STATE_FIXED_LENGTH","SHUFFLE_STATE","PRNG_STATE","verifyState","STATE","seed","slen","minstd","minstdShuffle","getSeed","getSeedLength","getState","setState","getStateLength","getStateSize","toJSON","normalized","NAME","MIN","tic","hrtime","toc","time","sec","now","vm","evaluate","id","ctx","createContext","asynchronous","before","cb1","cb2","cb3","iterations","asyncSource","syncSource","script","lineOffset","Script","displayErrors","runInThisContext","compile","require","FILENAME","timeit","repeats","onRun","onFinish","raw","secs","rate","times","elapsed","trycatch","tryRequire","trythen","FLOAT16_PINF","FLOAT32$1","typemax","INT32","UINT32","FLOAT32","UINT8","UINT16","FLOAT16","FLOAT16_NINF","typemin","INT16","uncapitalizeKeys","uncurry","uncurryRight","unshiftArray","unshiftTypedArray","unshiftObject","until","untilEach","untilEachRight","unzip","numVals","uppercaseKeys","objectValues","objectValuesIn","whilst","whileEach","whileEachRight","writableProperties","isWritable","writablePropertiesIn","writablePropertyNames","writablePropertyNamesIn","writablePropertySymbols","writablePropertySymbolsIn","zip","fill","trunc","arrays","utils","argumentFunction","async","constantFunction","dsv","functionSequence","objectInverse","objectInverseBy","tryFunction"],"mappings":"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","x_google_ignoreList":[2,3,4,5,6,7,8,9,10,11,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,180,181,182,183,184,185,186,187,188,189,190,191,201,202,203,204,206,207,208,209,210,212,265,266,267,268,269,270,271,333,334,335,336,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,447,448,449,469,472,473,474,475,476,477,478,479,481,482,483,485,499,500,501,502,503,504,505,506,507,516,517,518,519,520,549,552,557,558,559,560,561,562,563,564,565,566,567,568,569,614,615,616,617,618,619,623,624,625,626,627,628,629,630,634,639,656,658,659,664,665,666,690,694,707,708,709,710,711,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,838,839,840,841,842,843,844,845,846,847,848,849,850,851,867,896,911,912,916,917,919,951,952,954,955,967,968,970,971,972,977,978,979,980,981,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1018,1025,1026,1028,1029]}